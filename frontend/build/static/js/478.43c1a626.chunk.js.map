{"version":3,"file":"static/js/478.43c1a626.chunk.js","mappings":"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","sources":["pages/Admin/CommentModeration.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FaTrash, FaCheck, FaTimes } from 'react-icons/fa';\r\nimport { useExperiments } from '../../context/ExperimentContext';\r\n\r\nexport default function CommentModeration() {\r\n  const { experiments } = useExperiments();\r\n  const [statusFilter, setStatusFilter] = useState('pending');\r\n  const [comments, setComments] = useState([]);\r\n  const [filteredComments, setFilteredComments] = useState([]);\r\n\r\n  // Extract comments from experiments\r\n  useEffect(() => {\r\n    const allComments = experiments.flatMap(exp => \r\n      (exp.comments || []).map(comment => ({ \r\n        ...comment, \r\n        experimentId: exp.id,\r\n        experimentTitle: exp.title\r\n      }))\r\n    );\r\n    setComments(allComments);\r\n  }, [experiments]);\r\n\r\n  // Filter comments\r\n  useEffect(() => {\r\n    const filtered = statusFilter === 'all' \r\n      ? [...comments] \r\n      : comments.filter(c => c.status === statusFilter);\r\n    \r\n    setFilteredComments(filtered);\r\n  }, [comments, statusFilter]);\r\n\r\n  const handleApprove = (commentId) => {\r\n    setComments(prev => \r\n      prev.map(c => c.id === commentId ? { ...c, status: 'approved' } : c)\r\n    );\r\n  };\r\n\r\n  const handleReject = (commentId) => {\r\n    setComments(prev => \r\n      prev.map(c => c.id === commentId ? { ...c, status: 'rejected' } : c)\r\n    );\r\n  };\r\n\r\n  const handleDelete = (commentId) => {\r\n    if (window.confirm('Delete this comment?')) {\r\n      setComments(prev => prev.filter(c => c.id !== commentId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h3 className=\"text-xl font-bold\">Comment Moderation</h3>\r\n        <div className=\"flex items-center\">\r\n          <span className=\"mr-2 text-gray-600\">Filter:</span>\r\n          <select \r\n            className=\"border rounded px-3 py-1\"\r\n            value={statusFilter}\r\n            onChange={(e) => setStatusFilter(e.target.value)}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"approved\">Approved</option>\r\n            <option value=\"rejected\">Rejected</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      {filteredComments.length > 0 ? (\r\n        <div className=\"space-y-4\">\r\n          {filteredComments.map((comment) => (\r\n            <motion.div\r\n              key={comment.id}\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"bg-white rounded-lg border border-gray-200 p-4\"\r\n            >\r\n              <div className=\"flex justify-between mb-2\">\r\n                <h4 className=\"font-bold\">{comment.author}</h4>\r\n                <span className=\"text-sm text-gray-500\">\r\n                  on {comment.experimentTitle}\r\n                </span>\r\n              </div>\r\n              <p className=\"mb-3\">{comment.text}</p>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className={`text-xs px-2 py-1 rounded ${\r\n                  comment.status === 'approved' \r\n                    ? 'bg-green-100 text-green-800' \r\n                    : comment.status === 'rejected'\r\n                      ? 'bg-red-100 text-red-800'\r\n                      : 'bg-yellow-100 text-yellow-800'\r\n                }`}>\r\n                  {comment.status}\r\n                </span>\r\n                <div className=\"flex gap-2\">\r\n                  {comment.status === 'pending' && (\r\n                    <>\r\n                      <button \r\n                        onClick={() => handleApprove(comment.id)}\r\n                        className=\"text-green-500 hover:text-green-700\"\r\n                        title=\"Approve\"\r\n                      >\r\n                        <FaCheck />\r\n                      </button>\r\n                      <button \r\n                        onClick={() => handleReject(comment.id)}\r\n                        className=\"text-red-500 hover:text-red-700\"\r\n                        title=\"Reject\"\r\n                      >\r\n                        <FaTimes />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  <button \r\n                    onClick={() => handleDelete(comment.id)}\r\n                    className=\"text-red-500 hover:text-red-700\"\r\n                    title=\"Delete\"\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-16\">\r\n          <div className=\"text-5xl mb-4\">ðŸ’¬</div>\r\n          <h3 className=\"text-xl font-bold mb-2\">No comments found</h3>\r\n          <p className=\"text-gray-600\">\r\n            {statusFilter === 'all' \r\n              ? 'There are no comments in the system yet.' \r\n              : `There are no ${statusFilter} comments.`}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["CommentModeration","experiments","useExperiments","statusFilter","setStatusFilter","useState","comments","setComments","filteredComments","setFilteredComments","useEffect","allComments","flatMap","exp","map","comment","experimentId","id","experimentTitle","title","filtered","filter","c","status","_jsxs","className","children","_jsx","value","onChange","e","target","length","motion","div","initial","opacity","y","animate","author","text","_Fragment","onClick","handleApprove","commentId","prev","FaCheck","handleReject","FaTimes","handleDelete","window","confirm","FaTrash"],"sourceRoot":""}