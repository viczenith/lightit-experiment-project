{"version":3,"file":"static/js/569.74feabae.chunk.js","mappings":"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","sources":["pages/Auth/AdminRegisterPage.jsx","components/layout/ParticleBackground.jsx","components/ui/FloatingInput.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport FloatingInput from '../../components/ui/FloatingInput';\r\nimport AnimatedButton from '../../components/ui/AnimatedButton';\r\nimport ParticleBackground from '../../components/layout/ParticleBackground';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nexport default function AdminRegisterPage() {\r\n  const { registerAdmin } = useAuth();\r\n  const [formData, setFormData] = useState({ \r\n    name: '',\r\n    email: '', \r\n    password: '',\r\n    adminCode: ''\r\n  });\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrors({});\r\n    \r\n    try {\r\n      if (formData.adminCode !== 'ADMIN_SECRET') {\r\n        throw new Error('Invalid admin code');\r\n      }\r\n      \r\n      await registerAdmin(formData);\r\n    } catch (error) {\r\n      setErrors({ general: error.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center relative overflow-hidden\">\r\n      <ParticleBackground />\r\n      <motion.div\r\n        initial={{ scale: 0.9, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        className=\"w-full max-w-md p-8 bg-white/90 backdrop-blur-lg rounded-3xl shadow-2xl z-10\"\r\n      >\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-3xl font-bold text-gray-800\">Admin Registration</h2>\r\n          <p className=\"text-gray-600 mt-2\">Create admin account</p>\r\n        </div>\r\n        \r\n        {errors.general && (\r\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-lg\">\r\n            {errors.general}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <FloatingInput\r\n            label=\"Full Name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          \r\n          <FloatingInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          \r\n          <FloatingInput\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n            minLength={6}\r\n          />\r\n          \r\n          <FloatingInput\r\n            label=\"Admin Secret Code\"\r\n            name=\"adminCode\"\r\n            type=\"password\"\r\n            value={formData.adminCode}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          \r\n          <AnimatedButton \r\n            type=\"submit\"\r\n            className=\"w-full justify-center\"\r\n            loading={isLoading}\r\n          >\r\n            Register Admin\r\n          </AnimatedButton>\r\n        </form>\r\n        \r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-gray-600\">\r\n            Already have an account?{' '}\r\n            <Link to=\"/login\" className=\"text-science-blue font-medium hover:underline\">\r\n              Sign in\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}","  // import Particles from 'react-particles-js';\r\n  import Particles from 'react-tsparticles';\r\n\r\n  export default function ParticleBackground() {\r\n    return (\r\n      <Particles\r\n        className=\"absolute inset-0 -z-10\"\r\n        params={{\r\n          particles: {\r\n            number: { value: 30 },\r\n            size: { value: 3 },\r\n            shape: { \r\n              type: 'images',\r\n              images: [\r\n                { src: '/flask.png', height: 20, width: 20 },\r\n                { src: '/atom.png', height: 20, width: 20 },\r\n                { src: '/beaker.png', height: 20, width: 20 }\r\n              ]\r\n            },\r\n            move: { speed: 2 },\r\n            opacity: { value: 0.5, random: true }\r\n          },\r\n          interactivity: {\r\n            events: {\r\n              onhover: { enable: true, mode: 'repulse' }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }","// import { motion } from 'framer-motion';\r\n// import { useState } from 'react';\r\n\r\n// export default function FloatingInput({ \r\n//   label, \r\n//   type = 'text', \r\n//   value, \r\n//   onChange, \r\n//   options = [],\r\n//   ...props \r\n// }) {\r\n//   const [focused, setFocused] = useState(false);\r\n  \r\n//   const handleTextChange = (e) => {\r\n//     // onChange(e.target.value);\r\n//     onChange(e);\r\n//   };\r\n  \r\n//   const handleSelectChange = (value) => {\r\n//     onChange(value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"relative\">\r\n//       {type === 'select' ? (\r\n//         <div className=\"relative\">\r\n//           <select\r\n//             value={value}\r\n//             onChange={(e) => handleSelectChange(e.target.value)}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg bg-transparent appearance-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           >\r\n//             <option value=\"\" disabled hidden></option>\r\n//             {options.map(option => (\r\n//               <option key={option} value={option}>{option}</option>\r\n//             ))}\r\n//           </select>\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//           <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n//             <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n//             </svg>\r\n//           </div>\r\n//         </div>\r\n//       ) : type === 'textarea' ? (\r\n//         <div className=\"relative\">\r\n//           <textarea\r\n//             value={value}\r\n//             onChange={handleTextChange}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           />\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"relative\">\r\n//           <input\r\n//             type={type}\r\n//             value={value}\r\n//             onChange={handleTextChange}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           />\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport default function FloatingInput({ \r\n  label, \r\n  type = 'text', \r\n  value, \r\n  onChange, \r\n  options = [],\r\n  name, // Add name prop\r\n  ...props \r\n}) {\r\n  const [focused, setFocused] = useState(false);\r\n  \r\n  const handleTextChange = (e) => {\r\n    // Pass both name and value\r\n    onChange(name, e.target.value);\r\n  };\r\n  \r\n  const handleSelectChange = (e) => {\r\n    // Pass both name and value\r\n    onChange(name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {type === 'select' ? (\r\n        <div className=\"relative\">\r\n          <select\r\n            name={name}\r\n            value={value}\r\n            onChange={handleSelectChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg bg-transparent appearance-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          >\r\n            <option value=\"\" disabled hidden></option>\r\n            {options.map(option => (\r\n              <option key={option} value={option}>{option}</option>\r\n            ))}\r\n          </select>\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n            <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      ) : type === 'textarea' ? (\r\n        <div className=\"relative\">\r\n          <textarea\r\n            name={name}\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          />\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n        </div>\r\n      ) : (\r\n        <div className=\"relative\">\r\n          <input\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          />\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["AdminRegisterPage","registerAdmin","useAuth","formData","setFormData","useState","name","email","password","adminCode","errors","setErrors","isLoading","setIsLoading","handleChange","useNavigate","e","target","value","_jsxs","className","children","_jsx","ParticleBackground","motion","div","initial","scale","opacity","animate","general","onSubmit","async","preventDefault","Error","error","message","FloatingInput","label","type","onChange","required","minLength","AnimatedButton","loading","Link","to","Particles","params","particles","number","size","shape","images","src","height","width","move","speed","random","interactivity","events","onhover","enable","mode","_ref","options","props","focused","setFocused","handleTextChange","onFocus","onBlur","disabled","hidden","map","option","y","x","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}