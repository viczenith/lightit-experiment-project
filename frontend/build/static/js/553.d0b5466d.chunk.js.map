{"version":3,"file":"static/js/553.d0b5466d.chunk.js","mappings":"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","sources":["utils/scienceIcons.js","components/experiments/ScienceBadge.jsx","pages/Experiments/ExperimentDetailPage.jsx"],"sourcesContent":["export const subjectColors = {\r\n  Physics: 'bg-science-blue',\r\n  Chemistry: 'bg-reaction-orange',\r\n  Biology: 'bg-element-green'\r\n};\r\n\r\nexport const getSubjectIcon = (subject) => {\r\n  const icons = {\r\n    Physics: '⚛️',\r\n    Chemistry: '🧪',\r\n    Biology: '🧬'\r\n  };\r\n  return icons[subject] || '🔬';\r\n};\r\n\r\nexport const getGradeIcon = (grade) => {\r\n  return `📚 ${grade}`;\r\n};\r\n\r\nexport const getEquipmentIcon = (equipment) => {\r\n  const icons = {\r\n    beaker: '🧪',\r\n    burner: '🔥',\r\n    microscope: '🔬',\r\n    telescope: '🔭',\r\n    scale: '⚖️'\r\n  };\r\n  return icons[equipment] || '🧰';\r\n};","import { motion } from 'framer-motion';\r\nimport { subjectColors } from '../../utils/scienceIcons';\r\n\r\n\r\n\r\nconst gradeColors = {\r\n  7: 'bg-purple-200 text-purple-800',\r\n  8: 'bg-blue-200 text-blue-800',\r\n  9: 'bg-green-200 text-green-800',\r\n  10: 'bg-yellow-200 text-yellow-800',\r\n  11: 'bg-orange-200 text-orange-800',\r\n  12: 'bg-red-200 text-red-800'\r\n};\r\n\r\nexport default function ScienceBadge({ type, value }) {\r\n  const colors = type === 'subject' ? subjectColors : gradeColors;\r\n  const bgColor = colors[value] || 'bg-gray-200 text-gray-800';\r\n  \r\n  return (\r\n    <motion.span\r\n      whileHover={{ scale: 1.05 }}\r\n      className={`px-3 py-1 rounded-full text-sm font-medium ${bgColor}`}\r\n    >\r\n      {type === 'subject' ? value : `Grade ${value}`}\r\n    </motion.span>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport api from '../../utils/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport ScienceBadge from '../../components/experiments/ScienceBadge';\r\n\r\n// YouTube URL conversion\r\nconst getEmbedUrl = (url) => {\r\n  if (!url) return null;\r\n  \r\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n  const match = url.match(regExp);\r\n  \r\n  return (match && match[2].length === 11)\r\n    ? `https://www.youtube.com/embed/${match[2]}?rel=0&modestbranding=1`\r\n    : url;\r\n};\r\n\r\n\r\nconst AccordionItem = ({ title, children, isOpen, onClick, hasVideo = false }) => (\r\n  <div className=\"border-0 rounded-xl overflow-hidden mb-4 bg-gradient-to-r from-white to-indigo-50 shadow-lg hover:shadow-xl transition-all\">\r\n    <motion.button\r\n      className={`w-full flex justify-between items-center p-5 text-left ${\r\n        isOpen ? 'bg-gradient-to-r from-indigo-100 to-blue-100' : ''\r\n      }`}\r\n      onClick={onClick}\r\n      initial={false}\r\n      whileHover={{ scale: 1.01 }}\r\n    >\r\n      <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\r\n        <motion.span \r\n          className=\"mr-3 text-indigo-600\"\r\n          animate={{ rotate: isOpen ? 90 : 0 }}\r\n        >\r\n          ▶\r\n        </motion.span>\r\n        {title}\r\n      </h2>\r\n      <motion.span\r\n        className=\"text-indigo-600 text-2xl\"\r\n        animate={{ rotate: isOpen ? 180 : 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        {hasVideo ? '🎬' : '📖'}\r\n      </motion.span>\r\n    </motion.button>\r\n\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          initial={{ height: 0, opacity: 0 }}\r\n          animate={{ \r\n            height: \"auto\",\r\n            opacity: 1,\r\n            transition: { \r\n              height: { duration: 0.4, ease: \"easeInOut\" },\r\n              opacity: { duration: 0.3, delay: 0.1 }\r\n            }\r\n          }}\r\n          exit={{ \r\n            height: 0,\r\n            opacity: 0,\r\n            transition: { \r\n              height: { duration: 0.3, ease: \"easeInOut\" },\r\n              opacity: { duration: 0.2 }\r\n            }\r\n          }}\r\n          className=\"overflow-hidden\"\r\n        >\r\n          <div className={`p-5 ${hasVideo ? 'bg-gradient-to-br from-blue-50 to-indigo-50' : 'bg-white'}`}>\r\n            {children}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  </div>\r\n);\r\n\r\nexport default function ExperimentDetailPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [exp, setExp] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [openSections, setOpenSections] = useState({});\r\n\r\n  const toggleSection = (section) => {\r\n    setOpenSections(prev => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    async function fetchExperiment(allowHidden = false) {\r\n      try {\r\n        const url = allowHidden\r\n          ? `/auth/experiments/${id}`\r\n          : `/experiments/${id}`;\r\n        const res = await api.get(url);\r\n        if (isMounted) {\r\n          setExp(res.data);\r\n          setNotFound(false);\r\n          \r\n          // Open first section by default\r\n          setOpenSections({ description: true });\r\n        }\r\n      } catch (err) {\r\n        if (\r\n          err.response?.status === 404 &&\r\n          user?.role === 'educator'\r\n        ) {\r\n          await fetchExperiment(true);\r\n        } else {\r\n          if (isMounted) setNotFound(true);\r\n        }\r\n      } finally {\r\n        if (isMounted) setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchExperiment();\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [id, user]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-b from-blue-50 to-indigo-50\">\r\n        <motion.div\r\n          animate={{ rotate: 360 }}\r\n          transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n          className=\"w-16 h-16 border-t-4 border-indigo-600 border-solid rounded-full\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (notFound || !exp) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n        <div className=\"text-center p-8 bg-white rounded-2xl shadow-xl max-w-md\">\r\n          <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Experiment not found</h2>\r\n          <p className=\"mb-6 text-gray-600\">The requested experiment could not be located in our database.</p>\r\n          <motion.button\r\n            onClick={() => navigate('/experiments')}\r\n            className=\"btn-primary bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-6 py-3 rounded-full font-medium shadow-lg hover:shadow-xl\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            Browse Experiments\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const embedUrl = getEmbedUrl(exp.videoUrl);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"min-h-screen bg-gradient-to-b from-blue-50 to-indigo-100 py-12 px-4 sm:px-6\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <motion.div\r\n          className=\"bg-white rounded-3xl shadow-2xl overflow-hidden\"\r\n          initial={{ y: 20, opacity: 0 }}\r\n          animate={{ y: 0, opacity: 1 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n        \r\n          {/* Image Gallery */}\r\n          {exp.images?.length > 0 && (\r\n            <motion.div \r\n              className=\"p-6\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 0.4 }}\r\n            >\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {exp.images.map((src, i) => (\r\n                  <motion.div\r\n                    key={i}\r\n                    className=\"overflow-hidden rounded-xl shadow-lg h-64 md:h-80\"\r\n                    initial={{ opacity: 0, y: 20 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ delay: 0.5 + i * 0.1 }}\r\n                    whileHover={{ scale: 1.03 }}\r\n                  >\r\n                    <img\r\n                      src={src}\r\n                      alt={`${exp.title} screenshot ${i+1}`}\r\n                      className=\"w-full h-full object-cover transition-transform duration-500\"\r\n                    />\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n\r\n          <div className=\"p-8 bg-gradient-to-r from-white to-indigo-50 shadow-lg hover:shadow-xl transition-all\">\r\n            <div className=\"flex flex-wrap justify-between items-center gap-4\">\r\n              <div>\r\n                <h1 className=\"text-3xl md:text-4xl text-black font-bold mb-2\">{exp.title}</h1>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  <ScienceBadge type=\"grade\" value={exp.grade} />\r\n                  <ScienceBadge type=\"subject\" value={exp.subject} />\r\n                </div>\r\n              </div>\r\n              \r\n              <motion.span\r\n                className={`px-4 py-2 rounded-full text-sm font-bold shadow-lg ${\r\n                  exp.status === 'pending'\r\n                    ? 'bg-yellow-500 text-yellow-900'\r\n                    : exp.status === 'approved'\r\n                    ? 'bg-green-500 text-green-900'\r\n                    : 'bg-red-500 text-red-900'\r\n                }`}\r\n                whileHover={{ scale: 1.05 }}\r\n              >\r\n                {exp.status.charAt(0).toUpperCase() + exp.status.slice(1)}\r\n              </motion.span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Accordion Sections */}\r\n          <div className=\"p-6 space-y-6\">\r\n            <AccordionItem \r\n              title=\"Description\" \r\n              isOpen={openSections.description}\r\n              onClick={() => toggleSection('description')}\r\n            >\r\n              <motion.div\r\n                className=\"space-y-4\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ delay: 0.2 }}\r\n              >\r\n                <p className=\"text-gray-700 text-lg leading-relaxed\">\r\n                  {exp.description}\r\n                </p>\r\n               \r\n              </motion.div>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem \r\n              title=\"Materials Used\" \r\n              isOpen={openSections.materials}\r\n              onClick={() => toggleSection('materials')}\r\n            >\r\n              <ul className=\"space-y-3\">\r\n                {exp.materials.map((m, i) => (\r\n                  <motion.li \r\n                    key={i}\r\n                    className=\"text-gray-700 text-lg relative pl-8 before:absolute before:left-0 before:top-1/2 before:-translate-y-1/2 before:w-5 before:h-5 before:bg-indigo-500 before:rounded-full\"\r\n                    initial={{ opacity: 0, x: -20 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    transition={{ delay: i * 0.1 }}\r\n                  >\r\n                    {m}\r\n                  </motion.li>\r\n                ))}\r\n              </ul>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem \r\n              title=\"Procedure\" \r\n              isOpen={openSections.procedure}\r\n              onClick={() => toggleSection('procedure')}\r\n            >\r\n              <div className=\"bg-blue-50 p-4 rounded-xl\">\r\n                <p className=\"text-gray-700 text-lg whitespace-pre-wrap leading-relaxed\">\r\n                  {exp.procedure}\r\n                </p>\r\n              </div>\r\n            </AccordionItem>\r\n\r\n             <AccordionItem \r\n              title=\"Practical Video\" \r\n              isOpen={openSections.video}\r\n              onClick={() => toggleSection('video')}\r\n            >\r\n              <motion.div\r\n                className=\"space-y-4\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ delay: 0.2 }}\r\n              >\r\n                <p className=\"text-gray-700 text-lg leading-relaxed\">\r\n                  {exp.video}\r\n                </p>\r\n                \r\n                {embedUrl && (\r\n                  <div className=\"mt-6\">\r\n                    <h3 className=\"text-xl font-bold text-gray-800 mb-3 flex items-center\">\r\n                      <span className=\"mr-2\">📺</span> Video Demonstration\r\n                    </h3>\r\n                    <div className=\"rounded-xl overflow-hidden shadow-lg\">\r\n                      <div className=\"aspect-w-16 aspect-h-9\">\r\n                        <iframe\r\n                          src={embedUrl}\r\n                          title=\"Experiment Video\"\r\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                          allowFullScreen\r\n                          className=\"w-full h-full\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            </AccordionItem>\r\n\r\n\r\n            <AccordionItem \r\n              title=\"Safety Precautions\" \r\n              isOpen={openSections.precautions}\r\n              onClick={() => toggleSection('precautions')}\r\n              hasVideo={false}\r\n            >\r\n              <div className=\"bg-yellow-50 p-5 rounded-xl border-l-4 border-yellow-500\">\r\n                <p className=\"text-gray-700 text-lg whitespace-pre-wrap\">\r\n                  {exp.precautions}\r\n                </p>\r\n              </div>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem \r\n              title=\"Expected Results\" \r\n              isOpen={openSections.results}\r\n              onClick={() => toggleSection('results')}\r\n            >\r\n              <div className=\"bg-green-50 p-5 rounded-xl border-l-4 border-green-500\">\r\n                <p className=\"text-gray-700 text-lg whitespace-pre-wrap\">\r\n                  {exp.results}\r\n                </p>\r\n              </div>\r\n            </AccordionItem>\r\n\r\n            <AccordionItem \r\n              title=\"Discussion & Analysis\" \r\n              isOpen={openSections.discussion}\r\n              onClick={() => toggleSection('discussion')}\r\n            >\r\n              <div className=\"bg-purple-50 p-5 rounded-xl border-l-4 border-purple-500\">\r\n                <p className=\"text-gray-700 text-lg whitespace-pre-wrap\">\r\n                  {exp.discussion}\r\n                </p>\r\n              </div>\r\n            </AccordionItem>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"],"names":["subjectColors","Physics","Chemistry","Biology","gradeColors","ScienceBadge","_ref","type","value","bgColor","_jsx","motion","span","whileHover","scale","className","concat","children","getEmbedUrl","url","match","length","AccordionItem","title","isOpen","onClick","hasVideo","_jsxs","button","initial","animate","rotate","transition","duration","AnimatePresence","div","height","opacity","ease","delay","exit","ExperimentDetailPage","_exp$images","id","useParams","navigate","useNavigate","user","useAuth","exp","setExp","useState","loading","setLoading","notFound","setNotFound","openSections","setOpenSections","toggleSection","section","prev","_objectSpread","useEffect","isMounted","async","fetchExperiment","allowHidden","arguments","undefined","res","api","get","data","description","err","_err$response","response","status","role","repeat","Infinity","whileTap","embedUrl","videoUrl","y","images","map","src","i","alt","grade","subject","charAt","toUpperCase","slice","materials","m","li","x","procedure","video","allow","allowFullScreen","precautions","results","discussion"],"sourceRoot":""}