{"version":3,"file":"static/js/412.1ab2cccd.chunk.js","mappings":"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","sources":["components/layout/ParticleBackground.jsx","pages/Auth/LoginPage.jsx","components/ui/FloatingInput.jsx"],"sourcesContent":["  // import Particles from 'react-particles-js';\r\n  import Particles from 'react-tsparticles';\r\n\r\n  export default function ParticleBackground() {\r\n    return (\r\n      <Particles\r\n        className=\"absolute inset-0 -z-10\"\r\n        params={{\r\n          particles: {\r\n            number: { value: 30 },\r\n            size: { value: 3 },\r\n            shape: { \r\n              type: 'images',\r\n              images: [\r\n                { src: '/flask.png', height: 20, width: 20 },\r\n                { src: '/atom.png', height: 20, width: 20 },\r\n                { src: '/beaker.png', height: 20, width: 20 }\r\n              ]\r\n            },\r\n            move: { speed: 2 },\r\n            opacity: { value: 0.5, random: true }\r\n          },\r\n          interactivity: {\r\n            events: {\r\n              onhover: { enable: true, mode: 'repulse' }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }","import { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport FloatingInput from '../../components/ui/FloatingInput';\r\nimport AnimatedButton from '../../components/ui/AnimatedButton';\r\nimport ParticleBackground from '../../components/layout/ParticleBackground';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nexport default function LoginPage() {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Updated handler to work with FloatingInput\r\n  const handleInputChange = (field, value) => {\r\n    setFormData({ ...formData, [field]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrors({});\r\n    \r\n    try {\r\n      await login(formData.email, formData.password);\r\n    } catch (error) {\r\n      setErrors({ general: error.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center relative overflow-hidden\">\r\n      <ParticleBackground />\r\n      <motion.div\r\n        initial={{ scale: 0.9, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        className=\"w-full max-w-md p-8 bg-white/90 backdrop-blur-lg rounded-3xl shadow-2xl z-10\"\r\n      >\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-3xl font-bold text-gray-800\">Welcome Back!</h2>\r\n          <p className=\"text-gray-600 mt-2\">Sign in to continue exploring science</p>\r\n        </div>\r\n        \r\n        {errors.general && (\r\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-lg\">\r\n            {errors.general}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <FloatingInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          \r\n          <FloatingInput\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          \r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-science-blue focus:ring-science-blue border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            \r\n            <Link to=\"/forgot-password\" className=\"text-sm text-science-blue hover:underline\">\r\n              Forgot password?\r\n            </Link>\r\n          </div>\r\n          \r\n          <AnimatedButton \r\n            type=\"submit\"\r\n            className=\"w-full justify-center\"\r\n            loading={isLoading}\r\n          >\r\n            Sign In\r\n          </AnimatedButton>\r\n        </form>\r\n        \r\n        <div className=\"mt-6 text-center\">\r\n          <p className=\"text-gray-600\">\r\n            Don't have an account?{' '}\r\n            <Link to=\"/register\" className=\"text-science-blue font-medium hover:underline\">\r\n              Register now\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n","// import { motion } from 'framer-motion';\r\n// import { useState } from 'react';\r\n\r\n// export default function FloatingInput({ \r\n//   label, \r\n//   type = 'text', \r\n//   value, \r\n//   onChange, \r\n//   options = [],\r\n//   ...props \r\n// }) {\r\n//   const [focused, setFocused] = useState(false);\r\n  \r\n//   const handleTextChange = (e) => {\r\n//     // onChange(e.target.value);\r\n//     onChange(e);\r\n//   };\r\n  \r\n//   const handleSelectChange = (value) => {\r\n//     onChange(value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"relative\">\r\n//       {type === 'select' ? (\r\n//         <div className=\"relative\">\r\n//           <select\r\n//             value={value}\r\n//             onChange={(e) => handleSelectChange(e.target.value)}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg bg-transparent appearance-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           >\r\n//             <option value=\"\" disabled hidden></option>\r\n//             {options.map(option => (\r\n//               <option key={option} value={option}>{option}</option>\r\n//             ))}\r\n//           </select>\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//           <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n//             <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n//             </svg>\r\n//           </div>\r\n//         </div>\r\n//       ) : type === 'textarea' ? (\r\n//         <div className=\"relative\">\r\n//           <textarea\r\n//             value={value}\r\n//             onChange={handleTextChange}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           />\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"relative\">\r\n//           <input\r\n//             type={type}\r\n//             value={value}\r\n//             onChange={handleTextChange}\r\n//             onFocus={() => setFocused(true)}\r\n//             onBlur={() => setFocused(false)}\r\n//             className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n//             {...props}\r\n//           />\r\n//           <motion.label\r\n//             initial={{ y: 18, x: 16, scale: 1 }}\r\n//             animate={focused || value ? { \r\n//               y: 4, \r\n//               x: 12, \r\n//               scale: 0.85 \r\n//             } : {}}\r\n//             className={`absolute left-0 pointer-events-none ${\r\n//               focused || value ? 'text-science-blue' : 'text-gray-500'\r\n//             }`}\r\n//           >\r\n//             {label}\r\n//           </motion.label>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport default function FloatingInput({ \r\n  label, \r\n  type = 'text', \r\n  value, \r\n  onChange, \r\n  options = [],\r\n  name, // Add name prop\r\n  ...props \r\n}) {\r\n  const [focused, setFocused] = useState(false);\r\n  \r\n  const handleTextChange = (e) => {\r\n    // Pass both name and value\r\n    onChange(name, e.target.value);\r\n  };\r\n  \r\n  const handleSelectChange = (e) => {\r\n    // Pass both name and value\r\n    onChange(name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {type === 'select' ? (\r\n        <div className=\"relative\">\r\n          <select\r\n            name={name}\r\n            value={value}\r\n            onChange={handleSelectChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg bg-transparent appearance-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          >\r\n            <option value=\"\" disabled hidden></option>\r\n            {options.map(option => (\r\n              <option key={option} value={option}>{option}</option>\r\n            ))}\r\n          </select>\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n            <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      ) : type === 'textarea' ? (\r\n        <div className=\"relative\">\r\n          <textarea\r\n            name={name}\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          />\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n        </div>\r\n      ) : (\r\n        <div className=\"relative\">\r\n          <input\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            onFocus={() => setFocused(true)}\r\n            onBlur={() => setFocused(false)}\r\n            className=\"w-full pt-5 pb-2 px-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-science-blue focus:border-transparent\"\r\n            {...props}\r\n          />\r\n          <motion.label\r\n            initial={{ y: 18, x: 16, scale: 1 }}\r\n            animate={focused || value ? { \r\n              y: 4, \r\n              x: 12, \r\n              scale: 0.85 \r\n            } : {}}\r\n            className={`absolute left-0 pointer-events-none ${\r\n              focused || value ? 'text-science-blue' : 'text-gray-500'\r\n            }`}\r\n          >\r\n            {label}\r\n          </motion.label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["ParticleBackground","_jsx","Particles","className","params","particles","number","value","size","shape","type","images","src","height","width","move","speed","opacity","random","interactivity","events","onhover","enable","mode","LoginPage","formData","setFormData","useState","email","password","errors","setErrors","isLoading","setIsLoading","login","useAuth","handleInputChange","useNavigate","field","_objectSpread","_jsxs","children","motion","div","initial","scale","animate","general","onSubmit","async","e","preventDefault","error","message","FloatingInput","label","name","onChange","required","id","htmlFor","Link","to","AnimatedButton","loading","_ref","options","props","_objectWithoutProperties","_excluded","focused","setFocused","handleTextChange","target","onFocus","onBlur","disabled","hidden","map","option","y","x","concat","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}