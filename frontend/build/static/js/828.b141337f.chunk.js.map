{"version":3,"file":"static/js/828.b141337f.chunk.js","mappings":"iIAAO,MAAMA,EAAqB,YAGrBC,EAAkB,eAElBC,EAAiB,cAEjBC,EAAgB,WAKhBC,EAAc,sBCVpB,MAAMC,EACTC,WAAAA,CAAYC,EAAWC,EAAGC,GAKtB,GAJAC,KAAKC,iBAAmB,CAACC,EAAOC,KAC5BH,KAAKI,EAAIC,KAAKC,IAAIJ,GAASC,EAC3BH,KAAKF,EAAIO,KAAKE,IAAIL,GAASC,IAE1BK,EAASX,IAAcA,EAAW,CACnCG,KAAKI,EAAIP,EAAUO,EACnBJ,KAAKF,EAAID,EAAUC,EACnB,MAAMW,EAAWZ,EACjBG,KAAKD,EAAIU,EAASV,EAAIU,EAASV,EAAI,CACvC,KACK,SAAkBW,IAAdb,QAAiCa,IAANZ,EAMhC,MAAM,IAAIa,MAAM,GAAGjB,wCALnBM,KAAKI,EAAIP,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,GAAK,CAIlB,CACJ,CACA,iBAAWa,GACP,OAAOjB,EAASkB,OAAO,EAAG,EAAG,EACjC,CACA,SAAIX,GACA,OAAOG,KAAKS,MAAMd,KAAKF,EAAGE,KAAKI,EACnC,CACA,SAAIF,CAAMA,GACNF,KAAKC,iBAAiBC,EAAOF,KAAKG,OACtC,CACA,UAAIA,GACA,OAAOE,KAAKU,KAAKf,KAAKgB,cAC1B,CACA,UAAIb,CAAOA,GACPH,KAAKC,iBAAiBD,KAAKE,MAAOC,EACtC,CACA,YAAOc,CAAMC,GACT,OAAOvB,EAASkB,OAAOK,EAAOd,EAAGc,EAAOpB,EAAGoB,EAAOnB,EACtD,CACA,aAAOc,CAAOT,EAAGN,EAAGC,GAChB,OAAO,IAAIJ,EAASS,EAAGN,EAAGC,EAC9B,CACAoB,GAAAA,CAAIC,GACA,OAAOzB,EAASkB,OAAOb,KAAKI,EAAIgB,EAAEhB,EAAGJ,KAAKF,EAAIsB,EAAEtB,EAAGE,KAAKD,EAAIqB,EAAErB,EAClE,CACAsB,KAAAA,CAAMD,GACFpB,KAAKI,GAAKgB,EAAEhB,EACZJ,KAAKF,GAAKsB,EAAEtB,EACZE,KAAKD,GAAKqB,EAAErB,CAChB,CACAuB,IAAAA,GACI,OAAO3B,EAASsB,MAAMjB,KAC1B,CACAuB,UAAAA,CAAWH,GACP,OAAOpB,KAAKwB,IAAIJ,GAAGjB,MACvB,CACAsB,YAAAA,CAAaL,GACT,OAAOpB,KAAKwB,IAAIJ,GAAGJ,aACvB,CACAU,GAAAA,CAAIC,GACA,OAAOhC,EAASkB,OAAOb,KAAKI,EAAIuB,EAAG3B,KAAKF,EAAI6B,EAAG3B,KAAKD,EAAI4B,EAC5D,CACAC,KAAAA,CAAMD,GACF3B,KAAKI,GAAKuB,EACV3B,KAAKF,GAAK6B,EACV3B,KAAKD,GAAK4B,CACd,CACAX,WAAAA,GACI,OAAOhB,KAAKI,GAAK,EAAIJ,KAAKF,GAAK,CACnC,CACA+B,IAAAA,CAAKF,GACD,OAAOhC,EAASkB,OAAOb,KAAKI,EAAIuB,EAAG3B,KAAKF,EAAI6B,EAAG3B,KAAKD,EAAI4B,EAC5D,CACAG,MAAAA,CAAOH,GACH3B,KAAKI,GAAKuB,EACV3B,KAAKF,GAAK6B,EACV3B,KAAKD,GAAK4B,CACd,CACAI,SAAAA,GACI,MAAM5B,EAASH,KAAKG,OACN,GAAVA,GACAH,KAAK8B,OAAO,EAAM3B,EAE1B,CACA6B,MAAAA,CAAO9B,GACH,OAAOP,EAASkB,OAAOb,KAAKI,EAAIC,KAAKC,IAAIJ,GAASF,KAAKF,EAAIO,KAAKE,IAAIL,GAAQF,KAAKI,EAAIC,KAAKE,IAAIL,GAASF,KAAKF,EAAIO,KAAKC,IAAIJ,GAAQ,EACrI,CACA+B,KAAAA,CAAMC,GACFlC,KAAKI,EAAI8B,EAAE9B,EACXJ,KAAKF,EAAIoC,EAAEpC,EACX,MAAMqC,EAAMD,EACZlC,KAAKD,EAAIoC,EAAIpC,EAAIoC,EAAIpC,EAAI,CAC7B,CACAyB,GAAAA,CAAIJ,GACA,OAAOzB,EAASkB,OAAOb,KAAKI,EAAIgB,EAAEhB,EAAGJ,KAAKF,EAAIsB,EAAEtB,EAAGE,KAAKD,EAAIqB,EAAErB,EAClE,CACAqC,OAAAA,CAAQhB,GACJpB,KAAKI,GAAKgB,EAAEhB,EACZJ,KAAKF,GAAKsB,EAAEtB,EACZE,KAAKD,GAAKqB,EAAErB,CAChB,ECrGG,MAAMsC,UAAe1C,EACxBC,WAAAA,CAAYC,EAAWC,GACnBwC,MAAMzC,EAAWC,EAAG,EACxB,CACA,iBAAWc,GACP,OAAOyB,EAAOxB,OAAO,EAAG,EAC5B,CACA,YAAOI,CAAMC,GACT,OAAOmB,EAAOxB,OAAOK,EAAOd,EAAGc,EAAOpB,EAC1C,CACA,aAAOe,CAAOT,EAAGN,GACb,OAAO,IAAIuC,EAAOjC,EAAGN,EACzB,ECXJ,IAAIyC,EAAUlC,KAAKmC,OACH,IAAIC,IAab,SAASC,IACZ,OAAOC,EAAMJ,IAAW,EAAG,EAAI,MACnC,CACO,SAASI,EAAMC,EAAKC,EAAKC,GAC5B,OAAOzC,KAAKwC,IAAIxC,KAAKyC,IAAIF,EAAKC,GAAMC,EACxC,CAIO,SAASC,EAAcC,GAC1B,MAAMF,EAAMG,EAAYD,GACxB,IAAIH,EAAMK,EAAYF,GAItB,OAHIF,IAAQD,IACRA,EAAM,GAEHH,KAAeI,EAAMD,GAAOA,CACvC,CACO,SAASM,EAAcC,GAC1B,OAAO5C,EAAS4C,GAASA,EAAQL,EAAcK,EACnD,CACO,SAASF,EAAYE,GACxB,OAAO5C,EAAS4C,GAASA,EAAQA,EAAMP,GAC3C,CACO,SAASI,EAAYG,GACxB,OAAO5C,EAAS4C,GAASA,EAAQA,EAAMN,GAC3C,CACO,SAASO,EAAcnC,EAAQkC,GAClC,GAAIlC,IAAWkC,QAAoB1C,IAAV0C,GAAuB5C,EAASU,GACrD,OAAOA,EAEX,MAAM2B,EAAMK,EAAYhC,GAAS4B,EAAMG,EAAY/B,GACnD,YAAiBR,IAAV0C,EACD,CACEP,IAAKxC,KAAKwC,IAAIA,EAAKO,GACnBN,IAAKzC,KAAKyC,IAAIA,EAAKM,IAErBC,EAAcR,EAAKC,EAC7B,CAcO,SAASQ,EAAYC,EAAQC,GAChC,OALG,SAAsBD,EAAQC,GACjC,MAAMC,EAAKF,EAAOnD,EAAIoD,EAAOpD,EAAGsD,EAAKH,EAAOzD,EAAI0D,EAAO1D,EACvD,MAAO,CAAE2D,GAAIA,EAAIC,GAAIA,EAAIC,SAAUtD,KAAKU,KAAK0C,GAAM,EAAIC,GAAM,GACjE,CAEWE,CAAaL,EAAQC,GAAQG,QACxC,CA4DO,SAASE,EAAkCC,GAC9C,MAAO,CACH1D,EAAG0D,EAAKC,UAAU3D,GAAKsC,IAAcoB,EAAKE,KAAKC,MAC/CnE,EAAGgE,EAAKC,UAAUjE,GAAK4C,IAAcoB,EAAKE,KAAKE,OAEvD,CAQO,SAASC,EAAWC,GACvB,OAAOA,EAASA,EAAMC,SAAS,KAAOC,WAAWF,GAAS,IAAME,WAAWF,GAAU,CACzF,CC9IA,MAAMG,EAAU,CACZC,MAAOC,QAAQD,MACfE,MAAOD,QAAQC,MACfC,KAAMF,QAAQE,KACdC,IAAKH,QAAQG,IACbC,QAASJ,QAAQG,IACjBE,QAASL,QAAQM,MAUd,SAASC,IACZ,OAAOT,CACX,CAsBO,SAASU,IACZ,MAAyB,qBAAXC,SAA2BA,QAAqC,qBAApBA,OAAOC,WAA6BD,OAAOC,QACzG,CAIO,SAASC,EAAeC,GAC3B,IAHQJ,KAAiC,qBAAfK,WAM1B,OAAOA,WAAWD,EACtB,CAOO,SAASE,EAAUnC,EAAOoC,GAC7B,OAAOpC,IAAUoC,GAAUC,EAAQD,IAAUA,EAAME,QAAQtC,IAAU,CACzE,CAWO,SAASuC,EAAcH,EAAOI,GACjC,OAAOJ,OAAgB9E,IAAVkF,MADmCC,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,IACDD,EAAQJ,EAAMrF,OAJ1D,SAA0BqF,GAC7B,OAAOnF,KAAKyF,MAAMpD,IAAc8C,EAAMrF,OAC1C,CAE0E4F,CAAiBP,GAC3F,CA4BO,SAASQ,EAAWC,GAAyB,QAAAC,EAAAL,UAAA1F,OAATgG,EAAO,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAPF,EAAOE,EAAA,GAAAR,UAAAQ,GAC9C,IAAK,MAAMnF,KAAUiF,EAAS,CAC1B,QAAezF,IAAXQ,GAAmC,OAAXA,EACxB,SAEJ,IAAKoF,EAASpF,GAAS,CACnB+E,EAAc/E,EACd,QACJ,CACA,MAAMqF,EAAgBH,MAAMX,QAAQvE,IAChCqF,IAAkBD,EAASL,IAAiBA,GAAgBG,MAAMX,QAAQQ,GAGpEM,IAAkBD,EAASL,IAAiBA,IAAeG,MAAMX,QAAQQ,KAC/EA,EAAc,CAAC,GAHfA,EAAc,GAKlB,IAAK,MAAMO,KAAOtF,EAAQ,CACtB,GAAY,cAARsF,EACA,SAEJ,MAA2BpD,EAARlC,EAA2BsF,GAAMC,EAAWR,EAC/DQ,EAASD,GACLF,EAASlD,IAAUgD,MAAMX,QAAQrC,GAC3BA,EAAMsD,IAAKtF,GAAM4E,EAAWS,EAASD,GAAMpF,IAC3C4E,EAAWS,EAASD,GAAMpD,EACxC,CACJ,CACA,OAAO6C,CACX,CAwGO,SAASU,EAA0BC,EAAKC,GAC3C,OAAOpB,EAAQmB,GAAOA,EAAIF,IAAI,CAACI,EAAMlB,IAAUiB,EAASC,EAAMlB,IAAUiB,EAASD,EAAK,EAC1F,CACO,SAASG,EAAyBH,EAAKhB,EAAOoB,GACjD,OAAOvB,EAAQmB,GAAOjB,EAAciB,EAAKhB,EAAOoB,GAAYJ,CAChE,CAsDA,SAASK,EAAkBC,EAAgBC,GAEvC,KAD0C,YAAxBD,EAAeE,MACjB,CACZ,MAAQA,KAAMC,KAAMC,GAASJ,EAC7B,OAAOI,CACX,CAEA,MADmB,MAAOJ,EAEf,CACH9G,EAAI8G,EAAe9G,EAAI,IAAO+G,EAAWlD,MACzCnE,EAAIoH,EAAepH,EAAI,IAAOqH,EAAWjD,QAItC,CACHD,MAAQiD,EAAejD,MAAQ,IAAOkD,EAAWlD,MACjDC,OAASgD,EAAehD,OAAS,IAAOiD,EAAWjD,OAG/D,CACO,SAASqD,EAAYxD,EAAUoD,GAClC,OAAOF,EAAkBlD,EAAUoD,EACvC,CAIO,SAASK,EAAUC,GACtB,MAAsB,mBAARA,CAClB,CACO,SAASC,EAASD,GACrB,MAAsB,kBAARA,CAClB,CACO,SAASjH,EAASiH,GACrB,MAAsB,kBAARA,CAClB,CACO,SAASE,EAAWF,GACvB,MAAsB,oBAARA,CAClB,CACO,SAASnB,EAASmB,GACrB,MAAsB,kBAARA,GAA4B,OAARA,CACtC,CACO,SAAShC,EAAQgC,GACpB,OAAOrB,MAAMX,QAAQgC,EACzB,CC/UA,MAAMG,EAAmB,SAAiCC,EAAgB,IAAIpF,IACvE,SAASqF,EAAgBC,GAC5BF,EAAcG,IAAID,EAAQvB,IAAKuB,EACnC,CACA,SAASE,EAAQC,EAAGC,EAAGC,GAOnB,OANIA,EAAI,IACJA,GAAK,GAELA,EAAI,IACJA,GAAK,GAELA,EAAI,EAAI,EACDF,EAAc,GAATC,EAAID,GAASE,EAEzBA,EAAI,GACGD,EAEPC,EAAI,EAAI,EACDF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAEhCF,CACX,CACA,SAASG,EAAajE,GAClB,IAAK,MAAO,CAAE2D,KAAYF,EACtB,GAAIzD,EAAMkE,WAAWP,EAAQQ,cACzB,OAAOR,EAAQS,YAAYpE,GAGnC,MAAqEqE,EAAWrE,EAAMsE,QAA/D,6CAAuF,CAACrB,EAAGrE,EAAG2F,EAAGC,EAAGC,IAChH7F,EAAIA,EAAI2F,EAAIA,EAAIC,EAAIA,QAAWlI,IAANmI,EAAkBA,EAAIA,EAAI,KACQC,EAA1D,yDAAyEC,KAAKN,GAC1F,OAAOK,EACD,CACED,OAAiBnI,IAAdoI,EAAO,GAAmBE,SAASF,EAAO,GAAI,IAAM,IAAO,EAC9DF,EAAGI,SAASF,EAAO,GAAI,IACvBH,EAAGK,SAASF,EAAO,GAAI,IACvB9F,EAAGgG,SAASF,EAAO,GAAI,UAEzBpI,CACV,CACO,SAASuI,EAAgB7E,EAAOwB,GAAwB,IAAjBoB,IAAQnB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAClD,IAAKzB,EACD,OAEJ,MAAM8E,EAAQxB,EAAStD,GAAS,CAAEhB,MAAOgB,GAAUA,EACnD,GAAIsD,EAASwB,EAAM9F,OACf,OAAO+F,EAAWD,EAAM9F,MAAOwC,EAAOoB,GAE1C,GAAIvB,EAAQyD,EAAM9F,OACd,OAAO6F,EAAgB,CACnB7F,MAAOuC,EAAcuD,EAAM9F,MAAOwC,EAAOoB,KAGjD,IAAK,MAAO,CAAEe,KAAYF,EAAe,CACrC,MAAMuB,EAAMrB,EAAQsB,iBAAiBH,GACrC,GAAIE,EACA,OAAOA,CAEf,CACJ,CACO,SAASD,EAAW/E,EAAOwB,GAAwB,IAAjBoB,IAAQnB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAC7C,IAAKzB,EACD,OAEJ,MAAM8E,EAAQxB,EAAStD,GAAS,CAAEhB,MAAOgB,GAAUA,EACnD,GAAIsD,EAASwB,EAAM9F,OACf,OAAO8F,EAAM9F,QAAUwE,EAAmB0B,IAiD3C,SAAqBlF,GACxB,OAAOiE,EAAajE,EACxB,CAnDwEmF,CAAYL,EAAM9F,OAEtF,GAAIqC,EAAQyD,EAAM9F,OACd,OAAO+F,EAAW,CACd/F,MAAOuC,EAAcuD,EAAM9F,MAAOwC,EAAOoB,KAGjD,IAAK,MAAO,CAAEe,KAAYF,EAAe,CACrC,MAAMuB,EAAMrB,EAAQyB,YAAYN,GAChC,GAAIE,EACA,OAAOA,CAEf,CACJ,CAKO,SAASK,EAAgBP,EAAOtD,GACnC,MAAM8D,EAAMT,EAAgBC,EAAOtD,IADeC,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,IAElD,OAAO6D,EAAMC,EAASD,QAAOhJ,CACjC,CACO,SAASiJ,EAAST,GACrB,MAAMU,EAAKV,EAAMlG,EAAI,IAAK6G,EAAKX,EAAMP,EAAI,IAAKmB,EAAKZ,EAAMN,EAAI,IAAK9F,EAAMzC,KAAKyC,IAAI8G,EAAIC,EAAIC,GAAKjH,EAAMxC,KAAKwC,IAAI+G,EAAIC,EAAIC,GAAKV,EAAM,CAC5HW,EAAG,EACHC,GAAIlH,EAAMD,GAAO,EACjBoH,EAAG,GAkBP,OAhBInH,IAAQD,IACRuG,EAAIa,EAAIb,EAAIY,EAAI,IAAOlH,EAAMD,IAAQC,EAAMD,IAAQC,EAAMD,IAAQ,EAAMC,EAAMD,GAC7EuG,EAAIW,EACAH,IAAO9G,GACA+G,EAAKC,IAAOhH,EAAMD,GAClBuG,EAAIW,EAAIF,IAAO/G,EAAM,GAAOgH,EAAKF,IAAO9G,EAAMD,GAAO,GAAO+G,EAAKC,IAAO/G,EAAMD,IAE7FuG,EAAIY,GAAK,IACTZ,EAAIa,GAAK,IACTb,EAAIW,GAAK,GACLX,EAAIW,EAAI,IACRX,EAAIW,GAAK,KAETX,EAAIW,GAAK,MACTX,EAAIW,GAAK,KAENX,CACX,CAOO,SAASc,EAASC,GACrB,MAAMrB,EAAS,CAAEF,EAAG,EAAGD,EAAG,EAAG3F,EAAG,GAAKoH,EAAa,CAC9CL,EAAGI,EAAIJ,EAAI,IACXC,EAAGG,EAAIH,EAAI,IACXC,EAAGE,EAAIF,EAAI,KAEf,GAAKG,EAAWH,EAGX,CACD,MAAM9B,EAAIiC,EAAWJ,EAAI,GACnBI,EAAWJ,GAAK,EAAII,EAAWH,GAC/BG,EAAWJ,EAAII,EAAWH,EAAIG,EAAWJ,EAAII,EAAWH,EAAG/B,EAAI,EAAIkC,EAAWJ,EAAI7B,EACxFW,EAAO9F,EAAIiF,EAAQC,EAAGC,EAAGiC,EAAWL,EAAI,EAAI,GAC5CjB,EAAOH,EAAIV,EAAQC,EAAGC,EAAGiC,EAAWL,GACpCjB,EAAOF,EAAIX,EAAQC,EAAGC,EAAGiC,EAAWL,EAAI,EAAI,EAChD,MATIjB,EAAO9F,EAAI8F,EAAOH,EAAIG,EAAOF,EAAIwB,EAAWJ,EAahD,OAHAlB,EAAO9F,EAAI3C,KAAKyF,MAAiB,IAAXgD,EAAO9F,GAC7B8F,EAAOH,EAAItI,KAAKyF,MAAiB,IAAXgD,EAAOH,GAC7BG,EAAOF,EAAIvI,KAAKyF,MAAiB,IAAXgD,EAAOF,GACtBE,CACX,CAUO,SAASQ,EAAkBzG,GAC9B,MAAMwH,EAAWxH,GAAO,EACxB,MAAO,CACH+F,EAAGvI,KAAKyF,MAAM/C,EAAcM,EAAcgH,EAAU,OACpD1B,EAAGtI,KAAKyF,MAAM/C,EAAcM,EAAcgH,EAAU,OACpDrH,EAAG3C,KAAKyF,MAAM/C,EAAcM,EAAcgH,EAAU,OAE5D,CACO,SAASC,EAAgBpB,EAAOqB,GACnC,MAAO,QAAQrB,EAAMlG,MAAMkG,EAAMP,MAAMO,EAAMN,MAAM2B,GAAW,IAClE,CACO,SAASC,EAAgBtB,EAAOqB,GACnC,MAAO,QAAQrB,EAAMa,MAAMb,EAAMe,OAAOf,EAAMc,OAAOO,GAAW,IACpE,CAyDO,SAASE,EAAoBC,GAChC,YAAqBhK,IAAdgK,EACD,CACEX,EAAGW,EAAUX,EAAE3G,MACf6G,EAAGS,EAAUT,EAAE7G,MACf4G,EAAGU,EAAUV,EAAE5G,YAEjB1C,CACV,CC3MO,SAASiK,EAAMC,EAASC,GAC3BD,EAAQE,UAAU,EAAG,EAAGD,EAAU5G,MAAO4G,EAAU3G,OACvD,CCxBA,SAAS6G,GAAkBC,EAAQC,EAAWzE,GAC1C,MAAM0E,EAAWD,EAAUzE,QACV9F,IAAbwK,IACAF,EAAOxE,IAAQwE,EAAOxE,IAAQ,GAAK0E,EAE3C,CACO,MAAMC,GACTvL,WAAAA,CAAYwL,GACRpL,KAAKoL,UAAYA,EACjBpL,KAAKqL,uBAA0BC,IAC3B,IAAK,MAAMC,KAAWvL,KAAKwL,kBACvBD,EAAQE,WAAaF,EAAQE,UAAUH,IAG/CtL,KAAK0L,sBAAwB,CAACC,EAAKL,EAAUM,EAAQC,EAAUC,EAAaC,KACxE,IAAK,MAAMR,KAAWvL,KAAKgM,iBAAkB,CACzC,GAAIT,EAAQU,eAAgB,CACxB,MAAM,KAAEC,EAAI,OAAEC,GAAWZ,EAAQU,eAAeX,EAAUK,EAAKC,EAAQC,GACnEK,IACAJ,EAAYI,KAAOA,GAEnBC,IACAL,EAAYK,OAASA,EAE7B,CACA,GAAIZ,EAAQa,mBAAoB,CAC5B,MAAMC,EAAmBd,EAAQa,mBAAmBd,GACpD,IAAK,MAAM9E,KAAO6F,EACdtB,GAAkBgB,EAAWM,EAAkB7F,EAEvD,CACA+E,EAAQe,YAAcf,EAAQe,WAAWhB,EAC7C,GAEJtL,KAAKuM,oBAAsB,KACvB,IAAK,MAAMC,KAAUxM,KAAKyM,eACtBD,EAAOE,QAAUF,EAAOE,UAGhC1M,KAAK2M,yBAA4BrB,IAC7B,IAAIsB,EAAQC,EACZ,IAAK,MAAML,KAAUxM,KAAK8M,cAOtB,IANKF,GAAUJ,EAAOO,oBAClBH,EAASnD,EAAgB+C,EAAOO,kBAAkBzB,MAEjDuB,GAAUL,EAAOQ,sBAClBH,EAASpD,EAAgB+C,EAAOQ,oBAAoB1B,KAEpDsB,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,IAEpB7M,KAAKiN,WAAa,KACd,MAA8CC,EAA9BlN,KAAKoL,UAAU+B,cAA+BC,eAAeF,MAA4BG,EAAWpE,EAAxBiE,EAAMhE,OAClG,GAAImE,EAAU,CACV,MAAMC,EAAa,IACZD,EACHxE,EAAGqE,EAAM3C,SAEbvK,KAAKuN,iBAAmBjD,EAAgBgD,EAAYA,EAAWzE,EACnE,GAEJ7I,KAAKwN,WAAa,KACd,MAAMC,EAAUzN,KAAKyN,QAASC,EAAU1N,KAAKoL,UAAU+B,cACvD,GAAKM,EAAL,CAGIzN,KAAK2N,aACL3N,KAAK4N,eAAiB5H,EAAW,CAAC,EAAGyH,EAAQI,OAC7C7N,KAAK8N,uBAGL9N,KAAK+N,sBAET,IAAK,MAAMvH,KAAOkH,EAAQG,MAAO,CAC7B,IAAKrH,IAAQkH,EAAQG,MACjB,SAEJ,MAAMzK,EAAQsK,EAAQG,MAAMrH,GACvBpD,GAGLqK,EAAQI,MAAMG,YAAYxH,EAAKpD,EAAO,YAC1C,CAjBA,GAmBJpD,KAAKiO,WAAaC,UACd,MAAMR,EAAU1N,KAAKoL,UAAU+B,cAAegB,EAAQT,EAAQU,UAAUC,KAAKF,MAAOG,EAAYH,EAAMjC,KACtG,GAAKiC,EAAMI,OAGX,GAAID,EAAUpF,MAAO,CACjB,MAAMsF,EAAYvF,EAAgBqF,EAAUpF,OAC5C,IAAKsF,EACD,OAEJ,MAAML,EAAQT,EAAQU,UAAUC,KAAKF,MACrCnO,KAAKyO,WAAa,CACdvF,MAAO,IACAsF,GAEPjE,QAAS,EAAI4D,EAAMhO,OAE3B,YAEU,IAAIuO,QAAQ,CAACC,EAASC,KACxB,IAAKN,EAAUO,MACX,OAEJ,MAAMC,EAAM3J,SAAS4J,cAAc,OACnCD,EAAIE,iBAAiB,OAAQ,KACzBhP,KAAKyO,WAAa,CACdI,MAAOC,EACPvE,QAAS,EAAI4D,EAAMhO,QAEvBwO,MAEJG,EAAIE,iBAAiB,QAAUC,IAC3BL,EAAOK,EAAIvK,SAEfoK,EAAII,IAAMZ,EAAUO,SAIhC7O,KAAKmP,WAAcC,IACfpP,KAAKqP,KAAM1D,GDpHhB,SAAmBf,EAASC,EAAWuE,GAC1CxE,EAAQ0E,UAAYF,GAAa,gBACjCxE,EAAQ2E,SAAS,EAAG,EAAG1E,EAAU5G,MAAO4G,EAAU3G,OACtD,CCiH+BsL,CAAU7D,EAAK3L,KAAKgE,KAAMoL,KAEjDpP,KAAKyP,YAAc,CAACZ,EAAOtE,KACvBvK,KAAKqP,KAAM1D,GDnHhB,SAAoBf,EAASC,EAAWgE,EAAOtE,GAC7CsE,IAGLjE,EAAQ8E,YAAcnF,EACtBK,EAAQ+E,UAAUd,EAAO,EAAG,EAAGhE,EAAU5G,MAAO4G,EAAU3G,QAC1D0G,EAAQ8E,YAAc,EAC1B,CC4G+BE,CAAWjE,EAAK3L,KAAKgE,KAAM6K,EAAOtE,KAEzDvK,KAAK6P,aAAe,KAChB,MAAMpC,EAAUzN,KAAKyN,QAChBA,IAGLzN,KAAK8P,sBAAuBC,GAAaA,EAASC,cAClDhQ,KAAKwN,aACLxN,KAAKiQ,iBACLjQ,KAAK8P,sBAAuBC,GAAaA,EAASG,QAAQzC,EAAS,CAAE0C,YAAY,OAErFnQ,KAAK+N,oBAAsB,KACvB,MAAMN,EAAUzN,KAAKyN,QAAS2C,EAAgBpQ,KAAK4N,eACnD,IAAMH,IAAW2C,EACb,OAEJ,MAAMvC,EAAQJ,EAAQI,MACtBA,EAAM9J,SAAWqM,EAAcrM,SAC/B8J,EAAMwC,OAASD,EAAcC,OAC7BxC,EAAMyC,IAAMF,EAAcE,IAC1BzC,EAAM0C,KAAOH,EAAcG,KAC3B1C,EAAM5J,MAAQmM,EAAcnM,MAC5B4J,EAAM3J,OAASkM,EAAclM,QAEjClE,KAAK8P,sBAAyBjJ,IACrB7G,KAAKwQ,mBAGV3J,EAAS7G,KAAKwQ,oBAElBxQ,KAAK8N,oBAAsB,KACvB,MAAML,EAAUzN,KAAKyN,QACrB,IAAKA,EACD,OAEJ,MAAMgD,EAAW,YAAa5C,EAAQJ,EAAQI,MAC9CA,EAAMG,YAAY,WAAY,QAASyC,GACvC5C,EAAMG,YAAY,UAAWhO,KAAKoL,UAAU+B,cAAcuD,WAAWL,OAAOM,SAAS,IAAKF,GAC1F5C,EAAMG,YAAY,MAAO,IAAKyC,GAC9B5C,EAAMG,YAAY,OAAQ,IAAKyC,GAC/B5C,EAAMG,YAAY,QAAS,OAAQyC,GACnC5C,EAAMG,YAAY,SAAU,OAAQyC,IAExCzQ,KAAKgE,KAAO,CACRE,OAAQ,EACRD,MAAO,GAEXjE,KAAK4Q,SAAW,KAChB5Q,KAAK6Q,YAAa,EAClB7Q,KAAKgM,iBAAmB,GACxBhM,KAAKwL,kBAAoB,GACzBxL,KAAKyM,eAAiB,GACtBzM,KAAK8M,cAAgB,EACzB,CACA,eAAIa,GACA,OAAO3N,KAAKoL,UAAU+B,cAAcuD,WAAWnC,MACnD,CACA5D,KAAAA,GACI,MAAM+C,EAAU1N,KAAKoL,UAAU+B,cAAegB,EAAQT,EAAQU,UAAUC,KAAKF,MAAOG,EAAYtO,KAAKyO,WACjGf,EAAQN,eAAemB,OACvBvO,KAAK8Q,QAEA3C,EAAMI,QAAUJ,EAAMhO,OAAS,GAAKmO,EACrCA,EAAUpF,MACVlJ,KAAKmP,WAAW7E,EAAgBgE,EAAUpF,MAAOoF,EAAU/D,UAEtD+D,EAAUO,OACf7O,KAAKyP,YAAYnB,EAAUO,MAAOP,EAAU/D,SAIhDvK,KAAKqP,KAAM1D,IACPhB,EAAMgB,EAAK3L,KAAKgE,OAG5B,CACA+M,OAAAA,GAEI,GADA/Q,KAAKgR,OACDhR,KAAK6Q,WAAY,CACjB,MAAMpD,EAAUzN,KAAKyN,QACrBA,GAAWA,EAAQwD,QACvB,MAEIjR,KAAK+N,sBAET/N,KAAKgM,iBAAmB,GACxBhM,KAAKwL,kBAAoB,GACzBxL,KAAKyM,eAAiB,GACtBzM,KAAK8M,cAAgB,EACzB,CACAuC,IAAAA,CAAK6B,GACD,MAAMvF,EAAM3L,KAAK4Q,SACjB,GAAKjF,EAGL,OAAOuF,EAAGvF,EACd,CACAwF,YAAAA,CAAa7F,EAAU8F,GACnB,GAAI9F,EAAS+F,UAAY/F,EAASgG,UAC9B,OAEJ,MAAM1F,EAASN,EAASiG,YACxB,GAAI3F,GAAU,EACV,OAEJ,MAAM4F,EAAUlG,EAASmG,eAAgBC,EAAUpG,EAASqG,kBAAoBH,EAChF,IAAK5E,EAAQC,GAAU7M,KAAK2M,yBAAyBrB,GAChDsB,IACDA,EAAS4E,GAER3E,IACDA,EAAS6E,IAER9E,GAAWC,IAGhB7M,KAAKqP,KAAM1D,IACP,MAAMP,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cAAeyE,EAAgBtG,EAASoC,QAAQ2C,OAAQwB,GAAkB,EAAIvG,EAASwG,eAAiBF,EAAcG,YAAaxH,EAAUe,EAAS0G,OAAOzH,SAAWe,EAASf,SAASnH,OAAS,EAAsDyI,EAAWtB,EAAUsH,EAAgBI,GAAxE3G,EAAS4G,eAAiB3H,GAA+EsH,EAAgB9F,EAAY,CAAC,EAAGD,EAAc,CAC/ZI,KAAMU,EAASpC,EAAgBoC,EAAQf,QAAYnL,GAEvDoL,EAAYK,OAASU,EAASrC,EAAgBqC,EAAQoF,GAAkBnG,EAAYI,KACpFlM,KAAK0L,sBAAsBC,EAAKL,EAAUM,EAAQC,EAAUC,EAAaC,GDlO9E,SAAsBjI,GACzB,MAAM,UAAEsH,EAAS,QAAER,EAAO,SAAEU,EAAQ,MAAE8F,EAAK,YAAEtF,EAAW,eAAEsB,EAAc,UAAE+E,EAAS,OAAEvG,EAAM,QAAErB,EAAO,OAAE6H,EAAM,UAAErG,GAAejI,EACvHuO,EAAM/G,EAAS/D,cAAerH,EAAQoL,EAASgH,UAAYhH,EAASiH,aAAejH,EAASkH,SAAStS,MAAQ,GAAIuS,EAC9GpS,KAAKE,IAAIL,GADqGuS,EAE9GpS,KAAKC,IAAIJ,GACfwS,EAAgB,CACf7J,EAAG4J,GAAkB1G,EAAUlD,GAAK,GACpCD,EAAG6J,GAAkB1G,EAAUnD,GAAK,GACpC1G,GAAIuQ,GAAkB1G,EAAU7J,GAAK,GACrCyQ,EAAGF,GAAkB1G,EAAU4G,GAAK,IAExC/H,EAAQgI,aAAaF,EAAc7J,EAAG6J,EAAc9J,EAAG8J,EAAcxQ,EAAGwQ,EAAcC,EAAGN,EAAIjS,EAAGiS,EAAIvS,GACpG8K,EAAQiI,YACJzF,IACAxC,EAAQkI,yBAA2BX,GAEvC,MAAMY,EAAczH,EAASyH,YACzBX,EAAO7D,QAAUwE,IACjBnI,EAAQoI,WAAaZ,EAAOa,KAC5BrI,EAAQmI,YAAczI,EAAgByI,GACtCnI,EAAQsI,cAAgBd,EAAOe,OAAO/S,EACtCwK,EAAQwI,cAAgBhB,EAAOe,OAAOrT,GAEtCgM,EAAYI,OACZtB,EAAQ0E,UAAYxD,EAAYI,MAEpC,MAAMmH,EAAc/H,EAAS+H,aAAe,EAC5CzI,EAAQ0I,UAAYD,EAChBvH,EAAYK,SACZvB,EAAQ2I,YAAczH,EAAYK,QAgBnC,SAAmBf,EAAWR,EAASU,EAAUM,EAAQrB,EAAS6G,GACrE,IAAK9F,EAASkI,MACV,OAEJ,MAAMC,EAASrI,EAAUsI,QAAQC,IAAIrI,EAASkI,OACzCC,GAGLA,EAAOpE,KAAKzE,EAASU,EAAUM,EAAQrB,EAAS6G,EAAOhG,EAAUwI,OAAOC,WAC5E,CAvBIC,CAAU1I,EAAWR,EAASU,EAAUM,EAAQrB,EAAS6G,GACrDiC,EAAc,GACdzI,EAAQuB,SAERb,EAASyI,OACTnJ,EAAQoJ,YAER1I,EAASY,MACTtB,EAAQsB,OAgBT,SAA8Bd,EAAWR,EAASU,EAAUM,EAAQrB,EAAS6G,GAChF,IAAK9F,EAASkI,MACV,OAEJ,MAAMC,EAASrI,EAAUsI,QAAQC,IAAIrI,EAASkI,OACzCC,GAAWA,EAAOQ,aAGvBR,EAAOQ,YAAYrJ,EAASU,EAAUM,EAAQrB,EAAS6G,EAAOhG,EAAUwI,OAAOC,WACnF,CAvBIK,CAAqB9I,EAAWR,EAASU,EAAUM,EAAQrB,EAAS6G,GACpExG,EAAQkI,yBAA2B,cACnClI,EAAQgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,CCuLYzB,CAAa,CACT/F,YACAR,QAASe,EACTL,WACA8F,QACAtF,cACAsB,eAAgBM,EAAQN,eAAemB,OACvC4D,UAAWzE,EAAQN,eAAe+E,UAClCvG,OAAQA,GAAU,EAAIN,EAASwG,eAAiBF,EAAcuC,SAC9D5J,QAASsB,EACTuG,OAAQ9G,EAASoC,QAAQ0E,OACzBrG,cAEJ/L,KAAKqL,uBAAuBC,IAEpC,CACA8I,kBAAAA,CAAmB5H,EAAQlB,EAAU8F,GACjCpR,KAAKqP,KAAM1D,GD7KZ,SAA4Bf,EAAS4B,EAAQlB,EAAU8F,GACrD5E,EAAO2E,cAGZ3E,EAAO2E,aAAavG,EAASU,EAAU8F,EAC3C,CCwK2BgD,CAAmBzI,EAAKa,EAAQlB,EAAU8F,GACjE,CACAiD,UAAAA,CAAW7H,EAAQ4E,GACfpR,KAAKqP,KAAM1D,GDtLZ,SAAoBf,EAAS4B,EAAQ4E,GACnC5E,EAAO6C,MAGZ7C,EAAO6C,KAAKzE,EAASwG,EACzB,CCiL2BiD,CAAW1I,EAAKa,EAAQ4E,GAC/C,CACA,UAAMkD,GACFtU,KAAK8P,sBAAuByE,GAAQA,EAAIvE,cACxChQ,KAAKwQ,kBHlON,SAA8B3J,GACjC,IAAI5B,KAAuC,qBAArBuP,iBAGtB,OAAO,IAAIA,iBAAiB3N,EAChC,CG6NiC4N,CAAsBC,IAC3C,IAAK,MAAMC,KAAUD,EACG,eAAhBC,EAAOC,MAAkD,UAAzBD,EAAOE,eACvC7U,KAAK6P,iBAIjB7P,KAAK0M,SACL1M,KAAKwN,aACLxN,KAAKiN,aACL,UACUjN,KAAKiO,YACf,CACA,MAAO6G,GACH9P,IAAYN,MAAMoQ,EACtB,CACA9U,KAAKiQ,iBACLjQ,KAAK8P,sBAAuByE,IACnBvU,KAAKyN,SAGV8G,EAAIrE,QAAQlQ,KAAKyN,QAAS,CAAE0C,YAAY,MAE5CnQ,KAAK+U,eACL/U,KAAKgV,cACLhV,KAAK8Q,OACT,CACAb,cAAAA,GACI,MAA8CgF,EAA9BjV,KAAKoL,UAAU+B,cAAoC8H,WAAYxH,EAAUzN,KAAKyN,QAC9F,IAAKA,EACD,OAEJ,MAAMyH,EAAezH,EAAQI,MAC7B,GAAKqH,EAAL,CAGA,GAAID,EAAW/L,MAAO,CAClB,MAAMA,EAAQD,EAAgBgM,EAAW/L,OACzCgM,EAAaC,gBAAkBjM,EAAQoB,EAAgBpB,EAAO+L,EAAW1K,SAAW,EACxF,MAEI2K,EAAaC,gBAAkB,GAEnCD,EAAaE,gBAAkBH,EAAWpG,OAAS,GACnDqG,EAAaG,mBAAqBJ,EAAWlR,UAAY,GACzDmR,EAAaI,iBAAmBL,EAAWM,QAAU,GACrDL,EAAaM,eAAiBP,EAAWjR,MAAQ,EAXjD,CAYJ,CACAgR,WAAAA,GACIhV,KAAKyM,eAAiB,GACtB,IAAK,MAAO,CAAED,KAAWxM,KAAKoL,UAAUqK,QAChCjJ,EAAOE,QACP1M,KAAKyM,eAAeiJ,KAAKlJ,IAEzBA,EAAOO,mBAAqBP,EAAOQ,sBACnChN,KAAK8M,cAAc4I,KAAKlJ,EAGpC,CACAuI,YAAAA,GACI/U,KAAKgM,iBAAmB,GACxBhM,KAAKwL,kBAAoB,GACzB,IAAK,MAAMD,KAAWvL,KAAKoL,UAAUgD,UAAUuH,SACvCpK,EAAQE,WACRzL,KAAKwL,kBAAkBkK,KAAKnK,IAE5BA,EAAQU,gBAAkBV,EAAQa,oBAAsBb,EAAQe,aAChEtM,KAAKgM,iBAAiB0J,KAAKnK,EAGvC,CACAqK,UAAAA,CAAWC,GACH7V,KAAK6Q,YAAc7Q,KAAKyN,SACxBzN,KAAKyN,QAAQwD,SAEjBjR,KAAK6Q,WACDgF,EAAOC,SAAWxW,KAAsBuW,EAAOC,QACF,SAAvCD,EAAOC,QAAQxW,GACfU,KAAK6Q,WACf7Q,KAAKyN,QAAUoI,EACf7V,KAAKyN,QAAQsI,WAAa,OAC1B/V,KAAK4N,eAAiB5H,EAAW,CAAC,EAAGhG,KAAKyN,QAAQI,OAClD7N,KAAKgE,KAAKE,OAAS2R,EAAOG,aAC1BhW,KAAKgE,KAAKC,MAAQ4R,EAAOI,YACzBjW,KAAK4Q,SAAW5Q,KAAKyN,QAAQyI,WAAW,MACxClW,KAAK8P,sBAAuByE,IACnBvU,KAAKyN,SAGV8G,EAAIrE,QAAQlQ,KAAKyN,QAAS,CAAE0C,YAAY,MAE5CnQ,KAAKoL,UAAUwI,OAAOU,OACtBtU,KAAKiQ,gBACT,CACAa,KAAAA,GACI,MAAMpD,EAAU1N,KAAKoL,UAAU+B,cAC/BnN,KAAKqP,KAAM1D,IACH+B,EAAQN,eAAemB,QAAUb,EAAQN,eAAeF,OACxDvC,EAAMgB,EAAK3L,KAAKgE,MAChBhE,KAAKmP,WAAWnP,KAAKuN,mBAGrBvN,KAAKmP,cAGjB,CACAzC,MAAAA,GACI,IAAK1M,KAAKyN,QACN,OAAO,EAEX,MAAMrC,EAAYpL,KAAKoL,UAAW+K,EAAU/K,EAAUwI,OAAOC,WAAY7P,EAAOoH,EAAUyK,OAAO7R,KAAMoS,EAC5FpW,KAAKyN,QAAQwI,YAAcE,EADiEC,EAE3FpW,KAAKyN,QAAQuI,aAAeG,EAExC,GAAIC,IAAmBpS,EAAKE,QACxBkS,IAAkBpS,EAAKC,OACvBmS,IAAmBpW,KAAKyN,QAAQvJ,QAChCkS,IAAkBpW,KAAKyN,QAAQxJ,MAC/B,OAAO,EAEX,MAAMoS,EAAU,IAAKrS,GASrB,OARAhE,KAAKyN,QAAQxJ,MAAQD,EAAKC,MAAQjE,KAAKyN,QAAQwI,YAAcE,EAC7DnW,KAAKyN,QAAQvJ,OAASF,EAAKE,OAASlE,KAAKyN,QAAQuI,aAAeG,EAC5DnW,KAAKoL,UAAUkL,UACftW,KAAKuW,aAAe,CAChBtS,MAAOD,EAAKC,MAAQoS,EAAQpS,MAC5BC,OAAQF,EAAKE,OAASmS,EAAQnS,UAG/B,CACX,CACA8M,IAAAA,GACIhR,KAAK8P,sBAAuByE,GAAQA,EAAIvE,cACxChQ,KAAKwQ,uBAAoB9P,EACzBV,KAAKqP,KAAM1D,GAAQhB,EAAMgB,EAAK3L,KAAKgE,MACvC,CACA,kBAAMwS,GACF,IAAKxW,KAAKyN,UAAYzN,KAAK0M,SACvB,OAEJ,MAAMtB,EAAYpL,KAAKoL,UAAWqL,EAAerL,EAAUsL,sBAC3DtL,EAAUgD,UAAUuI,aACpB3W,KAAKuM,sBACDkK,SACMrL,EAAUwL,SAExB,ECxaJ,SAASC,GAAepJ,EAASqJ,EAAOC,EAAS5V,EAAKuM,GAClD,GAAIvM,EAAK,CACL,IAAI6V,EAAa,CAAEC,SAAS,GACxBzP,EAAUkG,GACVsJ,EAAWE,QAAUxJ,OAEJhN,IAAZgN,IACLsJ,EAAatJ,GAEjBD,EAAQuB,iBAAiB8H,EAAOC,EAASC,EAC7C,KACK,CACD,MAAMG,EAAgBzJ,EACtBD,EAAQ2J,oBAAoBN,EAAOC,EAASI,EAChD,CACJ,CACO,MAAME,GACTzX,WAAAA,CAAYwL,GACRpL,KAAKoL,UAAYA,EACjBpL,KAAKsX,mBAAsBxC,IACvB,MAAM1J,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cACtD,GAAInN,KAAKuX,SAAU,CACf,MAAMC,EAAqBpM,EAAUqM,cAAcC,MAAOC,EAAWH,EAAmBzT,SACxF,IAAK4T,EACD,OAEJH,EAAmBI,cAAgB,IAAKD,GACxCH,EAAmBK,WAAY,IAAIC,MAAOC,UAE1CpR,EADgB+G,EAAQ+J,cAAcO,OAAOC,QACX7Q,KAAOA,GAASpH,KAAKoL,UAAU8M,gBAAgB9Q,GACrF,CACe,aAAX0N,EAAEF,MACFuD,WAAW,IAAMnY,KAAKoY,oBAAqB,MAGnDpY,KAAKqY,mBAAsBvD,IACvB,MAAMwD,EAAaxD,EAAG1J,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAUsC,QAAS6K,EAAgB7K,EAAQ6K,cAAeC,EAAYF,EAAWG,QAAUF,EAAcG,KAAOH,EAAcI,MAAOC,EAAQlL,EAAQmL,OAAOC,KAAMF,GAAUA,EAAMG,OAASP,GACnPI,GAASA,EAAMI,QAAQC,MACvB7N,EAAU8N,UAAUV,IAG5BxY,KAAKmZ,wBAA0B,KAC3B,MAAM/N,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cACtDnN,KAAKoY,oBACA1K,EAAQ0L,cAGTjU,UAAYA,SAASkU,QACrBjO,EAAUkO,YAAa,EACvBlO,EAAUmO,UAGVnO,EAAUkO,YAAa,EACnBlO,EAAUoO,qBACVpO,EAAUqO,MAAK,GAGfrO,EAAUiE,MAAK,MAI3BrP,KAAK0Z,oBAAsBxL,UACnBlO,KAAK2Z,iBACLC,aAAa5Z,KAAK2Z,uBACX3Z,KAAK2Z,gBAEhB3Z,KAAK2Z,eAAiBxB,WAAWjK,UAC7B,MAAM2H,EAAS7V,KAAKoL,UAAUyK,OAC9BA,SAAiBA,EAAOW,gBACwC,IAAjExW,KAAKoL,UAAU+B,cAAcsK,cAAcO,OAAOtL,OAAOmN,QAEhE7Z,KAAK8Z,8BAAgC,CAACC,EAAoB5Y,KACtD,MAAM6Y,EAAWha,KAAKia,UAAW7O,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cAC3E+M,EAAkB9O,EAAUqM,cAAchK,QAChD,IAAKyM,EACD,OAEJ,MAAMC,EAAOD,EAAiBE,EAAWhP,EAAUyK,OAAOpI,QACtD2M,IACAA,EAASvM,MAAMwM,cAAgBF,IAASC,EAAW,UAAY,SAE7D1M,EAAQ+J,cAAcO,OAAOsC,QAAQ/L,QAAUb,EAAQ+J,cAAcO,OAAOC,QAAQ1J,UAG1FsI,GAAeqD,EAAiB1a,EAAgBwa,EAASO,UAAWpZ,GACpE0V,GAAeqD,ERjFI,aQiF8BF,EAASQ,WAAYrZ,GACtE0V,GAAeqD,ERhFG,YQgF8BF,EAASS,UAAWtZ,GAC/DuM,EAAQ+J,cAAcO,OAAOC,QAAQ1J,QAItCsI,GAAeqD,EAAiBza,EAAeua,EAASU,cAAevZ,GACvE0V,GAAeqD,ER5FH,YQ4FkCF,EAASW,QAASxZ,GAChE0V,GAAeqD,ER9FD,cQ8FkCF,EAASY,UAAWzZ,IALpE0V,GAAeqD,EAAiBza,EAAeua,EAASa,SAAU1Z,GAOtE0V,GAAeqD,EAAiBH,EAAoBC,EAASc,WAAY3Z,GACzE0V,GAAeqD,ERzFK,cQyF8BF,EAASe,YAAa5Z,KAE5EnB,KAAKgb,iBAAoB7Z,IACrB,MAAM6Y,EAAWha,KAAKia,UAAW7O,EAAYpL,KAAKoL,UAA8C6P,EAAzB7P,EAAU+B,cAAoCsK,cAAcyD,UAAWd,EAAWhP,EAAUyK,OAAOpI,QAC1K,IAAIsM,EAAqBxa,EACN,WAAf0b,GACA7P,EAAUqM,cAAchK,QAAUvI,OAClC6U,ERrGa,cQwGb3O,EAAUqM,cAAchK,QADJ,WAAfwN,GAA2Bb,EACEA,EAASe,eAAiBf,EAASgB,WAGnChB,EAEtCpa,KAAKqb,kBAAkBla,GACvBnB,KAAKsb,cAAcna,GACnBnB,KAAK8Z,8BAA8BC,EAAoB5Y,GACnDgE,UACA0R,GAAe1R,SR1GM,mBQ0G2B6U,EAASuB,iBAAkBpa,GAAK,IAGxFnB,KAAKqb,kBAAqBla,IACtB,MAAM6Y,EAAWha,KAAKia,UAAWuB,EAAapW,EAAe,gCACxDoW,SAG+B9a,IAAhC8a,EAAWxM,sBAIgBtO,IAA3B8a,EAAWC,cAGXta,EACAqa,EAAWC,YAAYzB,EAAS0B,gBAGhCF,EAAWG,eAAe3B,EAAS0B,iBAVnC7E,GAAe2E,EAAY,SAAUxB,EAAS4B,YAAaza,KAanEnB,KAAKsb,cAAiBna,IAClB,MAAM6Y,EAAWha,KAAKia,UAAW7O,EAAYpL,KAAKoL,UAClD,IADuEA,EAAU+B,cACpEsK,cAAcO,OAAOtL,OAC9B,OAEJ,GAA8B,qBAAnBmP,eAEP,YADAhF,GAAe3R,ORvIJ,SQuIyB8U,EAAStN,OAAQvL,GAGzD,MAAMiZ,EAAWhP,EAAUyK,OAAOpI,QAC9BzN,KAAK8b,kBAAoB3a,GACrBiZ,GACApa,KAAK8b,gBAAgBC,UAAU3B,GAEnCpa,KAAK8b,gBAAgB9L,oBACdhQ,KAAK8b,kBAEN9b,KAAK8b,iBAAmB3a,GAAOiZ,IACrCpa,KAAK8b,gBAAkB,IAAID,eAAe3N,UACxB8N,EAAQlD,KAAMhE,GAAMA,EAAEmH,SAAW7B,UAIzCpa,KAAK0Z,wBAEf1Z,KAAK8b,gBAAgB5L,QAAQkK,KAGrCpa,KAAKkc,WAAa,KACd,MAAM,cAAEzE,GAAkBzX,KAAKoL,UAC/B,IAAKqM,EACD,OAEJ,MAAM,MAAEC,GAAUD,EAClBC,EAAMyE,UAAW,EACjBzE,EAAM0E,aAAe1E,EAAM3T,UAE/B/D,KAAKqc,iBAAoBvH,IACrB,MAAM1J,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,eAAe,MAAEuK,GAAUtM,EAAUqM,cAC3FC,EAAM4E,QAAS,EACf,IAAIC,GAAU,EACd,MAAMC,EAAgB9E,EAAM3T,SAC5B,GAAKyY,GAAkB9O,EAAQ+J,cAAcO,OAAOC,QAAQ1J,OAA5D,CAGA,IAAK,MAAO,CAAE/B,KAAWpB,EAAUqK,QAC/B,GAAKjJ,EAAOiQ,qBAGZF,EAAU/P,EAAOiQ,mBAAmBD,GAChCD,GACA,MAGHA,GACDvc,KAAKsX,mBAAmBxC,GAE5B4C,EAAMyE,UAAW,CAbjB,GAeJnc,KAAKoY,kBAAoB,KACrB,MAAMX,EAAgBzX,KAAKoL,UAAUqM,cACrC,IAAKA,EACD,OAEJ,MAAMC,EAAQD,EAAcC,aACrBA,EAAM3T,gBACN2T,EAAME,qBACNF,EAAM0E,aACb3E,EAAciF,OAASnd,EACvBmY,EAAM4E,QAAS,EACf5E,EAAMyE,UAAW,GAErBnc,KAAK2c,gBAAmB7H,IACpB,MAAM1J,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cAAesK,EAAgBrM,EAAUqM,cAAe2C,EAAWhP,EAAUyK,OAAOpI,QAC1I,IAAKgK,IAAkBA,EAAchK,QACjC,OAGJ,IAAI4E,EACJ,GAFAoF,EAAcC,MAAM4E,QAAS,EAEzBxH,EAAEF,KAAKtM,WAAW,WAAY,CAC9BtI,KAAKuX,UAAW,EAChB,MAAMqF,EAAa9H,EACnB,GAAI2C,EAAchK,UAAYvI,QAC1B,GAAIkV,EAAU,CACV,MAAMyC,EAAazC,EAAS0C,wBAC5BzK,EAAM,CACFjS,EAAGwc,EAAWG,QAAUF,EAAWtM,KACnCzQ,EAAG8c,EAAWI,QAAUH,EAAWvM,IAE3C,OAEC,GAAwC,WAApC5C,EAAQ+J,cAAcyD,UAAwB,CACnD,MAAMha,EAAS0b,EAAWX,OAAQA,EAASW,EAAWK,cACtD,GAAI/b,GAAU+a,GAAU7B,EAAU,CAC9B,MAAM8C,EAAahc,EAAO4b,wBAAyBK,EAAalB,EAAOa,wBAAyBM,EAAahD,EAAS0C,wBACtHzK,EAAM,CACFjS,EAAGwc,EAAWS,QAAU,EAAIH,EAAW3M,MAAQ4M,EAAW5M,KAAO6M,EAAW7M,MAC5EzQ,EAAG8c,EAAWU,QAAU,EAAIJ,EAAW5M,KAAO6M,EAAW7M,IAAM8M,EAAW9M,KAElF,MAEI+B,EAAM,CACFjS,EAAGwc,EAAWS,SAAWT,EAAWG,QACpCjd,EAAG8c,EAAWU,SAAWV,EAAWI,QAGhD,MACSJ,EAAWX,SAAW7B,IAC3B/H,EAAM,CACFjS,EAAGwc,EAAWS,SAAWT,EAAWG,QACpCjd,EAAG8c,EAAWU,SAAWV,EAAWI,SAGhD,MAGI,GADAhd,KAAKuX,SAAsB,cAAXzC,EAAEF,KACdwF,EAAU,CACV,MAAMmD,EAAazI,EAAG0I,EAAYD,EAAWE,QAAQF,EAAWE,QAAQtd,OAAS,GAAIid,EAAahD,EAAS0C,wBAC3GzK,EAAM,CACFjS,EAAGod,EAAUT,SAAWK,EAAW7M,MAAQ,GAC3CzQ,EAAG0d,EAAUR,SAAWI,EAAW9M,KAAO,GAElD,CAEJ,MAAM6F,EAAU/K,EAAUwI,OAAOC,WAC7BxB,IACAA,EAAIjS,GAAK+V,EACT9D,EAAIvS,GAAKqW,GAEbsB,EAAcC,MAAM3T,SAAWsO,EAC/BoF,EAAciF,OAASld,GAE3BQ,KAAK0d,UAAa5I,IACd,MAAM7F,EAAM6F,EAAG2I,EAAUrX,MAAMuX,KAAK1O,EAAI2O,gBACxC,IAAK,MAAMC,KAASJ,EAChBzd,KAAK8d,SAASC,OAAOF,EAAMG,YAE/Bhe,KAAKoY,qBAETpY,KAAKie,eAAkBnJ,IACnB,MAAM7F,EAAM6F,EAAG2I,EAAUrX,MAAMuX,KAAK1O,EAAI2O,gBACxC,IAAK,MAAMC,KAASJ,EAChBzd,KAAK8d,SAASC,OAAOF,EAAMG,YAE/Bhe,KAAKqc,iBAAiBvH,IAE1B9U,KAAKke,YAAepJ,IAChB,MAAM7F,EAAM6F,EAAG2I,EAAUrX,MAAMuX,KAAK1O,EAAI2O,gBACxC,IAAK,MAAMC,KAASJ,EAChBzd,KAAK8d,SAAS9V,IAAI6V,EAAMG,WAAYG,YAAYC,OAEpDpe,KAAK2c,gBAAgB7H,IAEzB9U,KAAKuX,UAAW,EAChBvX,KAAK8d,SAAW,IAAIrb,IACpBzC,KAAKia,UAAY,CACbW,UAAWA,IAAM5a,KAAKkc,aACtBpB,WAAYA,IAAM9a,KAAKoY,oBACvBmC,UAAYzF,GAAM9U,KAAK2c,gBAAgB7H,GACvC6F,QAAU7F,GAAM9U,KAAKqc,iBAAiBvH,GACtC0F,WAAa1F,GAAM9U,KAAKke,YAAYpJ,GACpC2F,UAAY3F,GAAM9U,KAAK2c,gBAAgB7H,GACvC+F,SAAW/F,GAAM9U,KAAK0d,UAAU5I,GAChCiG,YAAcjG,GAAM9U,KAAK0d,UAAU5I,GACnC4F,cAAgB5F,GAAM9U,KAAKie,eAAenJ,GAC1CyG,iBAAkBA,IAAMvb,KAAKmZ,0BAC7ByC,YAAc9G,GAAM9U,KAAKqY,mBAAmBvD,GAC5C4G,eAAiB5G,GAAM9U,KAAKqY,mBAAmBvD,GAC/CpI,OAAQA,KACJ1M,KAAK0Z,uBAGjB,CACA2E,YAAAA,GACIre,KAAKgb,kBAAiB,EAC1B,CACAsD,eAAAA,GACIte,KAAKgb,kBAAiB,EAC1B,EC5TG,MAAMuD,GACT3e,WAAAA,GACII,KAAKoD,MAAQ,EACjB,CACA,aAAOvC,CAAOK,EAAQ4C,GAClB,MAAMoF,EAAQ,IAAIqV,GAUlB,OATArV,EAAMsV,KAAKtd,QACER,IAAToD,IACI4D,EAAS5D,IAAS2B,EAAQ3B,GAC1BoF,EAAMsV,KAAK,CAAEpb,MAAOU,IAGpBoF,EAAMsV,KAAK1a,IAGZoF,CACX,CACAsV,IAAAA,CAAK1a,QACmBpD,IAAhBoD,GAAMV,QAGVpD,KAAKoD,MAAQU,EAAKV,MACtB,ECtBG,MAAMqb,GACT7e,WAAAA,GACII,KAAKkJ,MAAQ,IAAIqV,GACjBve,KAAKkJ,MAAM9F,MAAQ,GACnBpD,KAAK6O,MAAQ,GACb7O,KAAK+D,SAAW,GAChB/D,KAAKuV,OAAS,GACdvV,KAAKgE,KAAO,GACZhE,KAAKuK,QAAU,CACnB,CACAiU,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKoF,QACLlJ,KAAKkJ,MAAQqV,GAAa1d,OAAOb,KAAKkJ,MAAOpF,EAAKoF,aAEnCxI,IAAfoD,EAAK+K,QACL7O,KAAK6O,MAAQ/K,EAAK+K,YAEAnO,IAAlBoD,EAAKC,WACL/D,KAAK+D,SAAWD,EAAKC,eAELrD,IAAhBoD,EAAKyR,SACLvV,KAAKuV,OAASzR,EAAKyR,aAEL7U,IAAdoD,EAAKE,OACLhE,KAAKgE,KAAOF,EAAKE,WAEAtD,IAAjBoD,EAAKyG,UACLvK,KAAKuK,QAAUzG,EAAKyG,SAE5B,EChCG,MAAMmU,GACT9e,WAAAA,GACII,KAAKkJ,MAAQ,IAAIqV,GACjBve,KAAKkJ,MAAM9F,MAAQ,OACnBpD,KAAKuK,QAAU,CACnB,CACAiU,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKoF,QACLlJ,KAAKkJ,MAAQqV,GAAa1d,OAAOb,KAAKkJ,MAAOpF,EAAKoF,aAEjCxI,IAAjBoD,EAAKyG,UACLvK,KAAKuK,QAAUzG,EAAKyG,SAE5B,ECfG,MAAMoU,GACT/e,WAAAA,GACII,KAAKmS,UAAY,kBACjBnS,KAAKkN,MAAQ,IAAIwR,GACjB1e,KAAKuO,QAAS,CAClB,CACAiQ,IAAAA,CAAK1a,GACD,GAAKA,EAAL,CAMA,QAHuBpD,IAAnBoD,EAAKqO,YACLnS,KAAKmS,UAAYrO,EAAKqO,gBAEPzR,IAAfoD,EAAKoJ,MAAqB,CAC1B,MAAMA,EAAQpJ,EAAKoJ,MACbhE,EAASxB,EAAS5D,EAAKoJ,OAAS,CAAEhE,MAAOpF,EAAKoJ,OAAUpJ,EAAKoJ,MACnElN,KAAKkN,MAAMsR,UAAqB9d,IAAhBwM,EAAMhE,MAAsBgE,EAAQ,CAAEhE,MAAOA,GACjE,MACoBxI,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,OAVvB,CAYJ,ECvBG,MAAMqQ,GACThf,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKqQ,OAAS,CAClB,CACAmO,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEH7N,IAAhBoD,EAAKuM,SACLrQ,KAAKqQ,OAASvM,EAAKuM,QAE3B,ECfG,MAAMwO,GACTjf,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKoH,KAAO,EAChB,CACAoX,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEL7N,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,MAEzB,ECdG,MAAM0X,GACTlf,WAAAA,GACII,KAAK+e,UAAY,GACjB/e,KAAKuO,QAAS,EACdvO,KAAKoH,KAAO,GACZpH,KAAK4U,KAAO,QAChB,CACA,MAAIoK,GACA,OAAOhf,KAAKif,SAChB,CACA,MAAID,CAAG5b,GACHpD,KAAKif,UAAY7b,CACrB,CACA,aAAI6b,GACA,OAAOjf,KAAKkf,GAChB,CACA,aAAID,CAAU7b,GACVpD,KAAKkf,IAAM9b,CACf,CACA,OAAI8b,GACA,OAAOvY,EAA0B3G,KAAK+e,UAAY3W,GAAMA,EAAEM,QAAQ,IAAK,IAC3E,CACA,OAAIwW,CAAI9b,GACJpD,KAAK+e,UAAYpY,EAA0BvD,EAAQgF,GAAM,IAAIA,IACjE,CACAoW,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ,MAAMob,EAAMpb,EAAKob,KAAOpb,EAAKmb,WAAanb,EAAKkb,QACnCte,IAARwe,IACAlf,KAAKkf,IAAMA,QAEQxe,IAAnBoD,EAAKib,YACL/e,KAAK+e,UAAYjb,EAAKib,gBAENre,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEL7N,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,WAEH1G,IAAdoD,EAAK8Q,OACL5U,KAAK4U,KAAO9Q,EAAK8Q,KAEzB,EC9CG,MAAMuK,GACTvf,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKof,MAAQ,EACbpf,KAAKqf,OAAS,EAClB,CACAb,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEJ7N,IAAfoD,EAAKsb,QACLpf,KAAKof,MAAQtb,EAAKsb,YAEF1e,IAAhBoD,EAAKub,SACLrf,KAAKqf,OAASvb,EAAKub,QAE3B,EClBG,MAAMC,GACT1f,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKoH,KAAO,GACZpH,KAAKuf,SAAW,IAAIJ,EACxB,CACAX,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEL7N,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,MAErBpH,KAAKuf,SAASf,KAAK1a,EAAKyb,UAC5B,EClBG,MAAMC,GACT5f,WAAAA,GACII,KAAK6Z,MAAQ,GACb7Z,KAAKuO,QAAS,CAClB,CACAiQ,IAAAA,CAAK1a,QACYpD,IAAToD,SAGepD,IAAfoD,EAAK+V,QACL7Z,KAAK6Z,MAAQ/V,EAAK+V,YAEFnZ,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAE3B,ECVG,MAAMkR,GACT7f,WAAAA,GACII,KAAKiY,QAAU,IAAI4G,GACnB7e,KAAK0f,MAAQ,IAAIZ,GACjB9e,KAAKsa,QAAU,IAAIgF,GACnBtf,KAAK0M,OAAS,IAAI8S,EACtB,CACA,WAAIG,GACA,OAAO3f,KAAKiY,OAChB,CACA,WAAI0H,CAAQvc,GACRpD,KAAKiY,QAAU7U,CACnB,CACA,SAAIwc,GACA,OAAO5f,KAAK0f,KAChB,CACA,SAAIE,CAAMxc,GACNpD,KAAK0f,MAAQtc,CACjB,CACA,WAAIyc,GACA,OAAO7f,KAAKsa,OAChB,CACA,WAAIuF,CAAQzc,GACRpD,KAAKsa,QAAUlX,CACnB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ9D,KAAKiY,QAAQuG,KAAK1a,EAAKmU,SAAWnU,EAAK6b,SACvC,MAAMD,EAAQ5b,EAAK4b,OAAS5b,EAAK8b,WACnBlf,IAAVgf,IACA1f,KAAK0f,MAAQ/Y,EAA0B+Y,EAAQtX,IAC3C,MAAM0X,EAAM,IAAIhB,GAEhB,OADAgB,EAAItB,KAAKpW,GACF0X,KAGf9f,KAAKsa,QAAQkE,KAAK1a,EAAKwW,SAAWxW,EAAK+b,SACnCrY,EAAU1D,EAAK4I,QACf1M,KAAK0M,OAAO6B,OAASzK,EAAK4I,OAG1B1M,KAAK0M,OAAO8R,KAAK1a,EAAK4I,OAE9B,EClDG,MAAMqT,GACTngB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAKigB,QAAUD,EACfhgB,KAAKkgB,WAAa9U,CACtB,CACAoT,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ,IAAK9D,KAAKkgB,WACN,OAEJ,MAAMC,EAAcngB,KAAKigB,QAAQxK,QAAQ0K,YAAYxM,IAAI3T,KAAKkgB,YAC9D,GAAKC,EAGL,IAAK,MAAMC,KAAcD,EAChBC,EAAWC,iBAGhBD,EAAWC,gBAAgBrgB,KAAM8D,EAEzC,ECpBG,MAAMwc,GACT1gB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAKkb,UAAY,SACjBlb,KAAKgY,OAAS,IAAIyH,GAClBzf,KAAKugB,MAAQ,IAAIR,GAAMC,EAAQ5U,EACnC,CACA,aAAIoV,GACA,OAAOxgB,KAAKkb,SAChB,CACA,aAAIsF,CAAUpd,GACVpD,KAAKkb,UAAY9X,CACrB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ,MAAMoX,EAAYpX,EAAKoX,WAAapX,EAAK0c,eACvB9f,IAAdwa,IACAlb,KAAKkb,UAAYA,GAErBlb,KAAKgY,OAAOwG,KAAK1a,EAAKkU,QACtBhY,KAAKugB,MAAM/B,KAAK1a,EAAKyc,MACzB,ECvBG,MAAME,GACTjC,IAAAA,CAAK1a,GACIA,IAGDA,EAAKC,WACL/D,KAAK+D,SAAW,CACZ3D,EAAG0D,EAAKC,SAAS3D,GAAK,GACtBN,EAAGgE,EAAKC,SAASjE,GAAK,GACtBsH,KAAMtD,EAAKC,SAASqD,MAAQ,YAGhCtD,EAAK4J,UACL1N,KAAK0N,QAAU1H,EAAW,CAAC,EAAGlC,EAAK4J,UAE3C,ECfG,MAAMgT,GACT9gB,WAAAA,GACII,KAAK2gB,SAAWC,IAChB5gB,KAAK0N,QAAU,CAAC,EAChB1N,KAAKoH,KAAO,QAChB,CACAoX,IAAAA,CAAK1a,GACIA,SAGiBpD,IAAlBoD,EAAK6c,WACL3gB,KAAK2gB,SAAW7c,EAAK6c,eAEPjgB,IAAdoD,EAAKsD,OACa,WAAdtD,EAAKsD,KACLpH,KAAKoH,KAAO,SAGZpH,KAAKoH,KAAO,eAGC1G,IAAjBoD,EAAK4J,UACL1N,KAAK0N,QAAU1H,EAAW,CAAC,EAAGlC,EAAK4J,UAE3C,ECzBG,MAAMmT,GACTjhB,WAAAA,GACII,KAAKiZ,MAAO,EACZjZ,KAAKoH,KAAO,MACZpH,KAAKoD,OAAQ,CACjB,CACAob,IAAAA,CAAK1a,GACIA,SAGapD,IAAdoD,EAAKmV,OACLjZ,KAAKiZ,KAAOnV,EAAKmV,WAEHvY,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,WAEF1G,IAAfoD,EAAKV,QACLpD,KAAKoD,MAAQU,EAAKV,OAE1B,ECjBG,MAAM0d,GACTlhB,WAAAA,GACII,KAAK+Y,KAAO,GACZ/Y,KAAKgZ,QAAU,IAAI6H,EACvB,CACArC,IAAAA,CAAK1a,GACIA,SAGapD,IAAdoD,EAAKiV,OACL/Y,KAAK+Y,KAAOjV,EAAKiV,MAErB/Y,KAAKgZ,QAAQwF,KAAK1a,EAAKkV,cACFtY,IAAjBoD,EAAK4J,UACL1N,KAAK0N,QAAU1H,EAAW,CAAC,EAAGlC,EAAK4J,UAE3C,ECjBG,MAAMqT,GACTnhB,WAAAA,GACII,KAAKghB,MAAQ,EACbhhB,KAAKuO,QAAS,EACdvO,KAAKmT,OAAS,EACdnT,KAAKihB,MAAQ,EACbjhB,KAAK6Z,MAAQ,EACb7Z,KAAKkhB,MAAQ,EACblhB,KAAKmhB,MAAO,CAChB,CACA3C,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKkd,QACLhhB,KAAKghB,MAAQ3d,EAAcS,EAAKkd,aAEhBtgB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEH7N,IAAhBoD,EAAKqP,SACLnT,KAAKmT,OAAS9P,EAAcS,EAAKqP,cAElBzS,IAAfoD,EAAKmd,QACLjhB,KAAKihB,MAAQ5d,EAAcS,EAAKmd,aAEjBvgB,IAAfoD,EAAKod,QACLlhB,KAAKkhB,MAAQ7d,EAAcS,EAAKod,aAEjBxgB,IAAfoD,EAAK+V,QACL7Z,KAAK6Z,MAAQxW,EAAcS,EAAK+V,aAElBnZ,IAAdoD,EAAKqd,OACLnhB,KAAKmhB,KAAOrd,EAAKqd,MAEzB,ECnCG,MAAMC,GACTxhB,WAAAA,GACII,KAAK+J,EAAI,IAAIgX,GACb/gB,KAAKiK,EAAI,IAAI8W,GACb/gB,KAAKgK,EAAI,IAAI+W,EACjB,CACAvC,IAAAA,CAAK1a,GACIA,IAGL9D,KAAK+J,EAAEyU,KAAK1a,EAAKiG,GACjB/J,KAAKiK,EAAEuU,KAAK1a,EAAKmG,GACjBjK,KAAKgK,EAAEwU,KAAK1a,EAAKkG,GACrB,ECXG,MAAMqX,WAAwB9C,GACjC3e,WAAAA,GACI0C,QACAtC,KAAK0K,UAAY,IAAI0W,EACzB,CACA,aAAOvgB,CAAOK,EAAQ4C,GAClB,MAAMoF,EAAQ,IAAImY,GAUlB,OATAnY,EAAMsV,KAAKtd,QACER,IAAToD,IACI4D,EAAS5D,IAAS2B,EAAQ3B,GAC1BoF,EAAMsV,KAAK,CAAEpb,MAAOU,IAGpBoF,EAAMsV,KAAK1a,IAGZoF,CACX,CACAsV,IAAAA,CAAK1a,GAED,GADAxB,MAAMkc,KAAK1a,IACNA,EACD,OAEJ,MAAMwd,EAAiBxd,EAAK4G,eACLhK,IAAnB4gB,SAC8B5gB,IAA1B4gB,EAAe/S,OACfvO,KAAK0K,UAAUX,EAAEyU,KAAK8C,GAGtBthB,KAAK0K,UAAU8T,KAAK1a,EAAK4G,WAGrC,ECnCG,MAAM6W,GACT3hB,WAAAA,GACII,KAAKihB,MAAQ,CACjB,CACAzC,IAAAA,CAAK1a,GACIA,QAGcpD,IAAfoD,EAAKmd,QACLjhB,KAAKihB,MAAQnd,EAAKmd,MAE1B,ECXG,MAAMO,GACT5hB,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKyhB,QAAU,CACnB,CACAjD,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEF7N,IAAjBoD,EAAK2d,UACLzhB,KAAKyhB,QAAU3d,EAAK2d,SAE5B,ECdG,MAAMC,GACT9hB,WAAAA,GACII,KAAKghB,MAAQ,EACbhhB,KAAKuO,QAAS,EACdvO,KAAKihB,MAAQ,EACbjhB,KAAKkhB,MAAQ,EACblhB,KAAK6Z,MAAQ,EACb7Z,KAAKmhB,MAAO,CAChB,CACA3C,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKkd,QACLhhB,KAAKghB,MAAQ3d,EAAcS,EAAKkd,aAEhBtgB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEJ7N,IAAfoD,EAAKmd,QACLjhB,KAAKihB,MAAQ5d,EAAcS,EAAKmd,aAEjBvgB,IAAfoD,EAAKod,QACLlhB,KAAKkhB,MAAQ7d,EAAcS,EAAKod,aAEjBxgB,IAAfoD,EAAK+V,QACL7Z,KAAK6Z,MAAQxW,EAAcS,EAAK+V,aAElBnZ,IAAdoD,EAAKqd,OACLnhB,KAAKmhB,KAAOrd,EAAKqd,MAEzB,EAEG,MAAMQ,WAA+BD,GACxC9hB,WAAAA,GACI0C,QACAtC,KAAKoH,KAAO,OACZpH,KAAK4hB,WAAa,QACtB,CACApD,IAAAA,CAAK1a,GACDxB,MAAMkc,KAAK1a,GACNA,SAGqBpD,IAAtBoD,EAAK+d,eACL7hB,KAAK6hB,aAAe/d,EAAK+d,mBAEXnhB,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,WAEG1G,IAApBoD,EAAK8d,aACL5hB,KAAK4hB,WAAa9d,EAAK8d,YAE/B,ECtDG,MAAME,GACTliB,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAK6hB,aAAe,CACxB,CACArD,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEG7N,IAAtBoD,EAAK+d,eACL7hB,KAAK6hB,aAAe/d,EAAK+d,cAEjC,ECXG,MAAME,GACTniB,WAAAA,GACII,KAAKwC,OAAS,IAAIsf,GAClB9hB,KAAKoD,MAAQ,CACjB,CACAob,IAAAA,CAAK1a,GACIA,IAGD0D,EAAU1D,EAAKtB,QACfxC,KAAKwC,OAAO+L,OAASzK,EAAKtB,OAG1BxC,KAAKwC,OAAOgc,KAAK1a,EAAKtB,aAEP9B,IAAfoD,EAAKV,QACLpD,KAAKoD,MAAQC,EAAcS,EAAKV,MAAOpD,KAAKwC,OAAO+L,OAASvO,KAAKwC,OAAOqf,kBAAenhB,IAE/F,ECrBG,MAAMshB,WAA8BD,GACvCniB,WAAAA,GACI0C,QACAtC,KAAKwC,OAAOqf,aAAe,GAC3B7hB,KAAKoD,MAAQ,CACjB,ECLG,MAAM6e,GACTriB,WAAAA,GACII,KAAKkiB,WAAa,IAAIF,GACtBhiB,KAAKmiB,SAAW,IAAIH,EACxB,CACAxD,IAAAA,CAAK1a,GACIA,IAGL9D,KAAKkiB,WAAW1D,KAAK1a,EAAKoe,YAC1BliB,KAAKmiB,SAAS3D,KAAK1a,EAAKqe,UAC5B,ECRG,MAAMC,GACTxiB,WAAAA,GACII,KAAKqiB,OAAS,IAAId,GAClBvhB,KAAKsiB,OAAS,IAAIL,GAClBjiB,KAAKuO,QAAS,EACdvO,KAAKuiB,SAAW,GAChBviB,KAAKoH,KAAO,SACZpH,KAAKwiB,QAAU,IAAIhB,EACvB,CACAhD,IAAAA,CAAK1a,GACIA,IAGL9D,KAAKqiB,OAAO7D,KAAK1a,EAAKue,QACtBriB,KAAKsiB,OAAO9D,KAAK1a,EAAKwe,aACF5hB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAED7N,IAAlBoD,EAAKye,WACLviB,KAAKuiB,SAAWlf,EAAcS,EAAKye,gBAErB7hB,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,MAErBpH,KAAKwiB,QAAQhE,KAAK1a,EAAK0e,SAC3B,EC5BG,MAAMC,GACT7iB,WAAAA,GACII,KAAKmT,OAAS,EACdnT,KAAKoD,MAAQ,EACjB,CACAob,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKqP,SACLnT,KAAKmT,OAAS9P,EAAcS,EAAKqP,cAElBzS,IAAfoD,EAAKV,QACLpD,KAAKoD,MAAQC,EAAcS,EAAKV,QAExC,ECfG,MAAMsf,GACT9iB,WAAAA,GACII,KAAK2D,SAAW,IAChB3D,KAAKuO,QAAS,EACdvO,KAAKgC,OAAS,CACV5B,EAAG,IACHN,EAAG,IAEX,CACA,WAAI6iB,GACA,OAAO3iB,KAAKgC,OAAO5B,CACvB,CACA,WAAIuiB,CAAQvf,GACRpD,KAAKgC,OAAO5B,EAAIgD,CACpB,CACA,WAAIwf,GACA,OAAO5iB,KAAKgC,OAAOlC,CACvB,CACA,WAAI8iB,CAAQxf,GACRpD,KAAKgC,OAAOlC,EAAIsD,CACpB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,YAEkBpD,IAAlBoD,EAAKH,WACL3D,KAAK2D,SAAWN,EAAcS,EAAKH,gBAEnBjD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAEvB,MAAMoU,EAAU7e,EAAK9B,QAAQ5B,GAAK0D,EAAK6e,aACvBjiB,IAAZiiB,IACA3iB,KAAKgC,OAAO5B,EAAIuiB,GAEpB,MAAMC,EAAU9e,EAAK9B,QAAQlC,GAAKgE,EAAK8e,aACvBliB,IAAZkiB,IACA5iB,KAAKgC,OAAOlC,EAAI8iB,EAExB,ECxCG,MAAMC,GACTjjB,WAAAA,GACII,KAAKI,EAAI,GACTJ,KAAKF,EAAI,GACTE,KAAKoH,KAAO,UACZpH,KAAK4L,OAAS,CAClB,CACA4S,IAAAA,CAAK1a,GACIA,SAGUpD,IAAXoD,EAAK1D,IACLJ,KAAKI,EAAI0D,EAAK1D,QAEHM,IAAXoD,EAAKhE,IACLE,KAAKF,EAAIgE,EAAKhE,QAEAY,IAAdoD,EAAKsD,OACLpH,KAAKoH,KAAOtD,EAAKsD,WAED1G,IAAhBoD,EAAK8H,SACL5L,KAAK4L,OAAS9H,EAAK8H,QAE3B,ECtBG,MAAMkX,GACTljB,WAAAA,GACII,KAAK+iB,aAAe,KACpB/iB,KAAKuO,QAAS,EACdvO,KAAKgjB,SAAU,EACfhjB,KAAKuiB,SAAW,EACpB,CACA/D,IAAAA,CAAK1a,GACIA,SAGqBpD,IAAtBoD,EAAKif,eACL/iB,KAAK+iB,aAAe1f,EAAcS,EAAKif,oBAEvBriB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEF7N,IAAjBoD,EAAKkf,UACLhjB,KAAKgjB,QAAUlf,EAAKkf,cAEFtiB,IAAlBoD,EAAKye,WACLviB,KAAKuiB,SAAWlf,EAAcS,EAAKye,WAE3C,ECtBG,MAAMU,GACTrjB,WAAAA,GACII,KAAK2C,OAAQ,EACb3C,KAAK6Z,MAAQ,IAAIkI,GACjB/hB,KAAKuO,QAAS,EACdvO,KAAK0N,QAAU,CAAC,CACpB,CACA8Q,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKnB,QACL3C,KAAK2C,MAAQmB,EAAKnB,OAEtB3C,KAAK6Z,MAAM2E,KAAK1a,EAAK+V,YACDnZ,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAEvBvO,KAAKkjB,UAAYpf,EAAKof,UAClBpf,EAAK4J,UACL1N,KAAK0N,QAAU1H,EAAWhG,KAAK0N,QAAS5J,EAAK4J,UAErD,ECvBG,MAAMyV,GACT3E,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKoF,QACLlJ,KAAKkJ,MAAQqV,GAAa1d,OAAOb,KAAKkJ,MAAOpF,EAAKoF,aAEnCxI,IAAfoD,EAAK+K,QACL7O,KAAK6O,MAAQ/K,EAAK+K,OAE1B,ECXG,MAAMuU,GACTxjB,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKG,OAAS,GACdH,KAAKkM,KAAO,IAAIiX,EACpB,CACA,aAAI3U,GACA,OAAOxO,KAAKkM,KAAKhD,KACrB,CACA,aAAIsF,CAAUpL,GACVpD,KAAKkM,KAAKsS,KAAK,CAAEtV,MAAO9F,GAC5B,CACAob,IAAAA,CAAK1a,GACIA,SAGepD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEL7N,IAAdoD,EAAKoI,WAAyCxL,IAAnBoD,EAAK0K,WAChCxO,KAAKkM,KAAKsS,KAAK1a,EAAKoI,MAAQ,CAAEhD,MAAOpF,EAAK0K,iBAE1B9N,IAAhBoD,EAAK3D,SACLH,KAAKG,OAAS2D,EAAK3D,QAE3B,EC1BG,MAAMkjB,GACTzjB,WAAAA,GACII,KAAKgZ,QAAU,KACnB,CACAwF,IAAAA,CAAK1a,GACIA,SAGgBpD,IAAjBoD,EAAKkV,UACLhZ,KAAKgZ,QAAUlV,EAAKkV,SAExBhZ,KAAKsjB,OAASxf,EAAKwf,QAAUxf,EAAKkV,QAClChZ,KAAKuQ,KAAOzM,EAAKyM,MAAQzM,EAAKkV,QAC9BhZ,KAAKujB,MAAQzf,EAAKyf,OAASzf,EAAKkV,QAChChZ,KAAKsQ,IAAMxM,EAAKwM,KAAOxM,EAAKkV,QAChC,ECbG,MAAMwK,GACT5jB,WAAAA,GACII,KAAK+iB,aAAe,EACpB/iB,KAAKuO,QAAS,CAClB,CACAiQ,IAAAA,CAAK1a,GACIA,SAGqBpD,IAAtBoD,EAAKif,eACL/iB,KAAK+iB,aAAe1f,EAAcS,EAAKif,oBAEvBriB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAEnBzK,EAAKC,WACL/D,KAAK+D,SAAWiC,EAAW,CAAC,EAAGlC,EAAKC,WAE5C,ECVG,MAAM0f,GACT7jB,WAAAA,GACII,KAAKE,MAAQ,IAAIuiB,GACjBziB,KAAK0jB,QAAU,IAAIhB,GACnB1iB,KAAK2jB,OAAS,IAAId,GAClB7iB,KAAKkhB,MAAQ,EACblhB,KAAK2D,SAAW,CAAC,EACjB3D,KAAK4jB,UAAY,OACjB5jB,KAAK6jB,MAAQ,EACb7jB,KAAKuO,QAAS,EACdvO,KAAK8jB,QAAU,IAAIhB,GACnB9iB,KAAK+jB,KAAO,IAAId,GAChBjjB,KAAKgkB,SAAW,IAAIX,GACpBrjB,KAAKwC,QAAS,EACdxC,KAAKgE,MAAO,EACZhE,KAAKihB,MAAQ,EACbjhB,KAAKikB,KAAO,IAAIT,GAChBxjB,KAAKkkB,UAAW,EAChBlkB,KAAKmO,MAAQ,IAAIiV,GACjBpjB,KAAKmkB,SAAU,EACfnkB,KAAKokB,MAAO,CAChB,CACA,UAAI9B,GACA,OAAOtiB,KAAKqkB,UAChB,CACA,UAAI/B,CAAOlf,GACPpD,KAAKqkB,WAAajhB,CACtB,CACA,cAAIihB,GACA,OAAO,CACX,CACA,cAAIA,CAAWhd,GACf,CACA,SAAIid,GACA,OAAOtkB,KAAK+jB,IAChB,CACA,SAAIO,CAAMlhB,GACNpD,KAAK+jB,KAAO3gB,CAChB,CACA,WAAImhB,GACA,OAAOvkB,KAAKgkB,SAAShL,OACzB,CACA,WAAIuL,CAAQnhB,GACRpD,KAAKgkB,SAAShL,QAAU5V,CAC5B,CACA,YAAIohB,GACA,OAAOxkB,KAAKukB,OAChB,CACA,YAAIC,CAASphB,GACTpD,KAAKukB,QAAUnhB,CACnB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ9D,KAAKE,MAAMse,KAAKhe,EAASsD,EAAK5D,OAAS,CAAEkD,MAAOU,EAAK5D,OAAU4D,EAAK5D,OACpEF,KAAK0jB,QAAQlF,KAAK1a,EAAK4f,SACvB1jB,KAAK2jB,OAAOnF,KAAK1a,EAAK6f,aACHjjB,IAAfoD,EAAKod,QACLlhB,KAAKkhB,MAAQ7d,EAAcS,EAAKod,aAEbxgB,IAAnBoD,EAAK8f,YACL5jB,KAAK4jB,UAAY9f,EAAK8f,gBAEJljB,IAAlBoD,EAAKH,WACL3D,KAAK2D,SAAWnD,EAASsD,EAAKH,UACxB,CACEue,WAAYpe,EAAKH,SACjBwe,SAAUre,EAAKH,UAEjB,IAAKG,EAAKH,gBAEDjD,IAAfoD,EAAK+f,QACL7jB,KAAK6jB,MAAQxgB,EAAcS,EAAK+f,aAEhBnjB,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAEvBvO,KAAK8jB,QAAQtF,KAAK1a,EAAKggB,SACvB,MAAME,EAAWlgB,EAAKkgB,UAAYlgB,EAAKygB,SAAWzgB,EAAK0gB,cACtC9jB,IAAbsjB,IACI1d,EAAS0d,GACThkB,KAAKgkB,SAASxF,KAAKwF,GAGnBhkB,KAAKgkB,SAASxF,KAAK,CACfxF,QAASgL,KAIrBhkB,KAAK+jB,KAAKvF,KAAK1a,EAAKigB,MAAQjgB,EAAKwgB,YACb5jB,IAAhBoD,EAAKtB,SACLxC,KAAKwC,OAASsB,EAAKtB,aAEL9B,IAAdoD,EAAKE,OACLhE,KAAKgE,KAAOF,EAAKE,WAEFtD,IAAfoD,EAAKmd,QACLjhB,KAAKihB,MAAQ5d,EAAcS,EAAKmd,QAEpCjhB,KAAKikB,KAAKzF,KAAK1a,EAAKmgB,WACEvjB,IAAlBoD,EAAKogB,WACLlkB,KAAKkkB,SAAWpgB,EAAKogB,UAEzBlkB,KAAKmO,MAAMqQ,KAAK1a,EAAKqK,YACAzN,IAAjBoD,EAAKqgB,UACLnkB,KAAKmkB,QAAUrgB,EAAKqgB,cAENzjB,IAAdoD,EAAKsgB,OACLpkB,KAAKokB,KAAOtgB,EAAKsgB,KAEzB,ECxHG,MAAMK,WAAyB9C,GAClC/hB,WAAAA,GACI0C,QACAtC,KAAK+Q,QAAU,OACf/Q,KAAKihB,MAAQ,CACjB,CACA,eAAIyD,GACA,OAAO1kB,KAAK6hB,YAChB,CACA,eAAI6C,CAAYthB,GACZpD,KAAK6hB,aAAeze,CACxB,CACAob,IAAAA,CAAK1a,QACyBpD,IAAtBoD,GAAM4gB,kBAAmDhkB,IAAtBoD,EAAK+d,eACxC/d,EAAK+d,aAAe/d,EAAK4gB,aAE7BpiB,MAAMkc,KAAK1a,GACNA,QAGgBpD,IAAjBoD,EAAKiN,UACL/Q,KAAK+Q,QAAUjN,EAAKiN,QAE5B,ECrBG,MAAM4T,WAAgB5C,GACzBniB,WAAAA,GACI0C,QACAtC,KAAK0K,UAAY,IAAI+Z,GACrBzkB,KAAKwC,OAAOqf,aAAe,GAC3B7hB,KAAKoD,MAAQ,CACjB,CACA,QAAIwhB,GACA,OAAO5kB,KAAK0K,SAChB,CACA,QAAIka,CAAKxhB,GACLpD,KAAK0K,UAAYtH,CACrB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJxB,MAAMkc,KAAK1a,GACX,MAAM4G,EAAY5G,EAAK4G,WAAa5G,EAAK8gB,UACvBlkB,IAAdgK,IACA1K,KAAK0K,UAAU8T,KAAK9T,GACpB1K,KAAKoD,MAAQC,EAAcrD,KAAKoD,MAAOpD,KAAK0K,UAAU6D,OAASvO,KAAK0K,UAAUmX,kBAAenhB,GAErG,EC1BG,MAAMmkB,GACTjlB,WAAAA,GACII,KAAKuO,QAAS,EACdvO,KAAKiE,MAAQ,KACbjE,KAAKkE,OAAS,IAClB,CACA,QAAI4gB,GACA,OAAO9kB,KAAKiE,KAChB,CACA,QAAI6gB,CAAK1hB,GACLpD,KAAKiE,MAAQb,CACjB,CACA,UAAI4H,GACA,OAAOhL,KAAKkE,MAChB,CACA,UAAI8G,CAAO5H,GACPpD,KAAKkE,OAASd,CAClB,CACA,cAAI2hB,GACA,OAAO/kB,KAAK8kB,IAChB,CACA,cAAIC,CAAW3hB,GACXpD,KAAK8kB,KAAO1hB,CAChB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,YAEgBpD,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,QAEvB,MAAMtK,EAAQH,EAAKG,OAASH,EAAKghB,MAAQhhB,EAAKihB,gBAChCrkB,IAAVuD,IACAjE,KAAKiE,MAAQA,GAEjB,MAAMC,EAASJ,EAAKI,QAAUJ,EAAKkH,YACpBtK,IAAXwD,IACAlE,KAAKkE,OAASA,EAEtB,ECtCG,MAAM8gB,GACTplB,WAAAA,GACII,KAAKilB,QAAU,IAAIJ,GACnB7kB,KAAKklB,MAAQ,EACbllB,KAAKoD,MAAQ,CACjB,CACA,OAAIN,GACA,OAAO9C,KAAKklB,KAChB,CACA,OAAIpiB,CAAIM,GACJpD,KAAKklB,MAAQ9hB,CACjB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ9D,KAAKilB,QAAQzG,KAAK1a,EAAKmhB,SACvB,MAAMC,EAAQphB,EAAKohB,OAASphB,EAAKhB,SACnBpC,IAAVwkB,IACAllB,KAAKklB,MAAQA,QAEExkB,IAAfoD,EAAKV,QACLpD,KAAKoD,MAAQU,EAAKV,MAE1B,ECxBG,MAAM+hB,GACTvlB,WAAAA,GACII,KAAKiT,KAAO,EACZjT,KAAKkJ,MAAQ,IAAIqV,GACjBve,KAAKuO,QAAS,EACdvO,KAAKmT,OAAS,CACV/S,EAAG,EACHN,EAAG,GAEPE,KAAKkJ,MAAM9F,MAAQ,MACvB,CACAob,IAAAA,CAAK1a,GACIA,SAGapD,IAAdoD,EAAKmP,OACLjT,KAAKiT,KAAOnP,EAAKmP,MAErBjT,KAAKkJ,MAAQqV,GAAa1d,OAAOb,KAAKkJ,MAAOpF,EAAKoF,YAC9BxI,IAAhBoD,EAAKyK,SACLvO,KAAKuO,OAASzK,EAAKyK,aAEH7N,IAAhBoD,EAAKqP,cAGazS,IAAlBoD,EAAKqP,OAAO/S,IACZJ,KAAKmT,OAAO/S,EAAI0D,EAAKqP,OAAO/S,QAEVM,IAAlBoD,EAAKqP,OAAOrT,IACZE,KAAKmT,OAAOrT,EAAIgE,EAAKqP,OAAOrT,IAEpC,EC/BJ,MAAMslB,GAAU,YAAaC,GAAa,OAAQC,GAAW,QAASC,GAAc,SAAUC,GAAa,UAAWC,GAAgB,OAC/H,MAAMC,GACT9lB,WAAAA,GACII,KAAK2lB,UAAY,CAAC7e,EAAM8e,EAASC,EAAQC,KACrC,IAAKhf,EACD,OAEJ,MAAMif,EAActgB,EAAQqB,GAAOkf,EAAaD,EAAc,GAAK,CAAC,EAAGE,EAAsBF,IAAgBtgB,EAAQzF,KAAK0N,QAAQkY,IAAWM,EAAqBH,IAAgBtgB,EAAQzF,KAAK0N,QAAQmY,IACnMI,IACAjmB,KAAK0N,QAAQkY,GAAWI,GAExBE,GAAsBJ,IACtB9lB,KAAK0N,QAAQmY,GAAUG,GAE3BhmB,KAAK0N,QAAQkY,GAAW5f,EAAWhG,KAAK0N,QAAQkY,IAAYI,EAAYlf,GACnE9G,KAAK0N,QAAQmY,KAAWC,IACzB9lB,KAAK0N,QAAQmY,GAAU7f,EAAWhG,KAAK0N,QAAQmY,IAAWG,EAAYlf,KAG9E9G,KAAK+T,OAAQ,EACb/T,KAAKkM,MAAO,EACZlM,KAAK0N,QAAU,CAAC,EAChB1N,KAAK4U,KAAO,QAChB,CACA,aAAIuR,GACA,OAAQnmB,KAAK0N,QAAQ0X,KAAYplB,KAAK0N,QAAQ2X,GAClD,CACA,aAAIc,CAAU/iB,GACVpD,KAAK0N,QAAQ2X,IAAcrlB,KAAK0N,QAAQ0X,IAAWhiB,CACvD,CACA,UAAIgjB,GACA,OAAOpmB,KAAK0N,OAChB,CACA,UAAI0Y,CAAOhjB,GACPpD,KAAK0N,QAAUtK,CACnB,CACA,SAAIyL,GACA,OAAQ7O,KAAK0N,QAAQ4X,KAAatlB,KAAK0N,QAAQ6X,GACnD,CACA,SAAI1W,CAAMzL,GACNpD,KAAK0N,QAAQ6X,IAAevlB,KAAK0N,QAAQ4X,IAAYliB,CACzD,CACA,UAAIijB,GACA,OAAOrmB,KAAK6O,KAChB,CACA,UAAIwX,CAAOjjB,GACPpD,KAAK6O,MAAQzL,CACjB,CACA,WAAIkjB,GACA,OAAQtmB,KAAK0N,QAAQ8X,KAAexlB,KAAK0N,QAAQ+X,GACrD,CACA,WAAIa,CAAQljB,GACRpD,KAAK0N,QAAQ+X,IAAiBzlB,KAAK0N,QAAQ8X,IAAcpiB,CAC7D,CACA,UAAI+I,GACA,MAAO,EACX,CACA,UAAIA,CAAOoa,GACX,CACA/H,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAEJ,MAAM4J,EAAU5J,EAAK4J,SAAW5J,EAAKsiB,OACrC,QAAgB1lB,IAAZgN,EACA,IAAK,MAAM8F,KAAS9F,EAAS,CACzB,MAAM5G,EAAO4G,EAAQ8F,GACjB1M,IACA9G,KAAK0N,QAAQ8F,GAASxN,EAAWhG,KAAK0N,QAAQ8F,IAAU,CAAC,EAAG1M,GAEpE,CAEJ9G,KAAK2lB,UAAU7hB,EAAKqiB,UAAWf,GAASC,IAAY,GACpDrlB,KAAK2lB,UAAU7hB,EAAKwiB,QAASd,GAAYC,IAAe,GACxDzlB,KAAK2lB,UAAU7hB,EAAK+K,OAAS/K,EAAKuiB,OAAQf,GAAUC,IAAa,QAC9C7kB,IAAfoD,EAAKiQ,QACL/T,KAAK+T,MAAQjQ,EAAKiQ,YAEJrT,IAAdoD,EAAKoI,OACLlM,KAAKkM,KAAOpI,EAAKoI,WAEHxL,IAAdoD,EAAK8Q,OACL5U,KAAK4U,KAAO9Q,EAAK8Q,KAEzB,ECpFG,MAAM4R,WAAsB7E,GAC/B/hB,WAAAA,GACI0C,QACAtC,KAAK+Q,QAAU,OACf/Q,KAAKihB,MAAQ,CACjB,CACA,YAAIwF,GACA,OAAOzmB,KAAK6hB,YAChB,CACA,YAAI4E,CAASrjB,GACTpD,KAAK6hB,aAAeze,CACxB,CACAob,IAAAA,CAAK1a,QACsBpD,IAAnBoD,GAAM2iB,eAAgD/lB,IAAtBoD,EAAK+d,eACrC/d,EAAK+d,aAAe/d,EAAK2iB,UAE7BnkB,MAAMkc,KAAK1a,GACNA,QAGgBpD,IAAjBoD,EAAKiN,UACL/Q,KAAK+Q,QAAUjN,EAAKiN,QAE5B,ECrBG,MAAM2V,WAAa3E,GACtBniB,WAAAA,GACI0C,QACAtC,KAAK0K,UAAY,IAAI8b,GACrBxmB,KAAKwC,OAAOqf,aAAe,EAC3B7hB,KAAKoD,MAAQ,CACjB,CACA,QAAIwhB,GACA,OAAO5kB,KAAK0K,SAChB,CACA,QAAIka,CAAKxhB,GACLpD,KAAK0K,UAAYtH,CACrB,CACAob,IAAAA,CAAK1a,GAED,GADAxB,MAAMkc,KAAK1a,IACNA,EACD,OAEJ,MAAM4G,EAAY5G,EAAK4G,WAAa5G,EAAK8gB,UACvBlkB,IAAdgK,IACA1K,KAAK0K,UAAU8T,KAAK9T,GACpB1K,KAAKoD,MAAQC,EAAcrD,KAAKoD,MAAOpD,KAAK0K,UAAU6D,OAASvO,KAAK0K,UAAUmX,kBAAenhB,GAErG,ECxBG,MAAMimB,GACT/mB,WAAAA,GACII,KAAKiE,MAAQ,CACjB,CACAua,IAAAA,CAAK1a,GACIA,SAGcpD,IAAfoD,EAAKoF,QACLlJ,KAAKkJ,MAAQmY,GAAgBxgB,OAAOb,KAAKkJ,MAAOpF,EAAKoF,aAEtCxI,IAAfoD,EAAKG,QACLjE,KAAKiE,MAAQZ,EAAcS,EAAKG,aAEfvD,IAAjBoD,EAAKyG,UACLvK,KAAKuK,QAAUlH,EAAcS,EAAKyG,UAE1C,EClBG,MAAMqc,WAAe7E,GACxBniB,WAAAA,GACI0C,QACAtC,KAAK+R,YAAc,EACnB/R,KAAKmU,SAAW,EAChBnU,KAAK6mB,aAAe,CACxB,CACArI,IAAAA,CAAK1a,GACDxB,MAAMkc,KAAK1a,GACNA,SAGoBpD,IAArBoD,EAAKiO,cACL/R,KAAK+R,YAAcjO,EAAKiO,kBAENrR,IAAlBoD,EAAKqQ,WACLnU,KAAKmU,SAAWrQ,EAAKqQ,eAECzT,IAAtBoD,EAAK+iB,eACL7mB,KAAK6mB,aAAe/iB,EAAK+iB,cAEjC,ECVG,MAAMC,GACTlnB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAKigB,QAAUD,EACfhgB,KAAKkgB,WAAa9U,EAClBpL,KAAKsiB,OAAS,IAAIL,GAClBjiB,KAAKqkB,WAAa,IAAIjC,GACtBpiB,KAAKkJ,MAAQ,IAAImY,GACjBrhB,KAAKkJ,MAAM9F,MAAQ,OACnBpD,KAAK+mB,OAAS,CAAC,EACf/mB,KAAKqO,KAAO,IAAIoV,GAChBzjB,KAAKgnB,OAAS,IAAIhC,GAClBhlB,KAAKuK,QAAU,IAAIoa,GACnB3kB,KAAKinB,kBAAmB,EACxBjnB,KAAKoS,OAAS,IAAI+S,GAClBnlB,KAAKwT,MAAQ,IAAIkS,GACjB1lB,KAAKgE,KAAO,IAAI0iB,GAChB1mB,KAAKmM,OAAS,IAAIwa,GAClB3mB,KAAKqQ,OAAS,IAAIuW,EACtB,CACApI,IAAAA,CAAK1a,GACD,IAAKA,EACD,OAIJ,GAFA9D,KAAKsiB,OAAO9D,KAAK1a,EAAKwe,QACtBtiB,KAAKkJ,MAAMsV,KAAK6C,GAAgBxgB,OAAOb,KAAKkJ,MAAOpF,EAAKoF,aACpCxI,IAAhBoD,EAAKijB,OACL,IAAK,MAAMG,KAASpjB,EAAKijB,OAAQ,CAC7B,MAAMjgB,EAAOhD,EAAKijB,OAAOG,QACZxmB,IAAToG,IACA9G,KAAK+mB,OAAOG,GAASlhB,EAAWhG,KAAK+mB,OAAOG,IAAU,CAAC,EAAGpgB,GAElE,CAEJ9G,KAAKqO,KAAKmQ,KAAK1a,EAAKuK,MACpBrO,KAAKgnB,OAAOxI,KAAK1a,EAAKkjB,QACtBhnB,KAAKuK,QAAQiU,KAAK1a,EAAKyG,cACO7J,IAA1BoD,EAAKmjB,mBACLjnB,KAAKinB,iBAAmBnjB,EAAKmjB,kBAEjCjnB,KAAKwT,MAAMgL,KAAK1a,EAAK0P,OACrBxT,KAAKgE,KAAKwa,KAAK1a,EAAKE,MACpBhE,KAAKoS,OAAOoM,KAAK1a,EAAKsO,QACtBpS,KAAKqQ,OAAOmO,KAAK1a,EAAKuM,QACtB,MAAMgU,EAAavgB,EAAKuK,MAAMgW,YAAcvgB,EAAKuK,MAAMiU,YACpC5hB,IAAf2jB,IACArkB,KAAKqkB,WAAW9V,OAAS8V,GAE7BrkB,KAAKqkB,WAAW7F,KAAK1a,EAAKugB,iBACC3jB,IAAvBoD,EAAK2T,gBACLzX,KAAKyX,cAAgBzR,EAAW,CAAC,EAAGlC,EAAK2T,gBAE7C,MAAM0P,EAAerjB,EAAKqI,QAAUrI,EAAK0P,OAAOrH,OAQhD,GAPIgb,IACAnnB,KAAKmM,OAASxF,EAA0BwgB,EAAe/e,IACnD,MAAM0X,EAAM,IAAI6G,GAEhB,OADA7G,EAAItB,KAAKpW,GACF0X,KAGX9f,KAAKkgB,WAAY,CACjB,MAAMvK,EAAW3V,KAAKigB,QAAQxK,QAAQE,SAAShC,IAAI3T,KAAKkgB,YACxD,GAAIvK,EACA,IAAK,MAAMpK,KAAWoK,EACdpK,EAAQ6b,aACR7b,EAAQ6b,YAAYpnB,KAAM8D,GAItC,MAAMqc,EAAcngB,KAAKigB,QAAQxK,QAAQ0K,YAAYxM,IAAI3T,KAAKkgB,YAC9D,GAAIC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWiH,sBACXjH,EAAWiH,qBAAqBrnB,KAAM8D,EAItD,CACJ,ECxFG,SAASsjB,GAAY1Z,GAA8B,QAAAxH,EAAAL,UAAA1F,OAAlBmnB,EAAgB,IAAAlhB,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAhBihB,EAAgBjhB,EAAA,GAAAR,UAAAQ,GACpD,IAAK,MAAMkhB,KAAiBD,EACxB5Z,EAAQ8Q,KAAK+I,EAErB,CACO,SAASF,GAAqBrH,EAAQ5U,GACzC,MAAMsC,EAAU,IAAIoZ,GAAiB9G,EAAQ5U,GAAW,QAAAoc,EAAA3hB,UAAA1F,OADDmnB,EAAgB,IAAAlhB,MAAAohB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBH,EAAgBG,EAAA,GAAA5hB,UAAA4hB,GAGvE,OADAL,GAAY1Z,KAAY4Z,GACjB5Z,CACX,CCAO,MAAMga,GACT9nB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAK2nB,kBAAqBvgB,GACdpH,KAAK6Y,OAAOC,KAAMF,GAAUA,EAAMI,QAAQ5V,OAASwV,EAAMI,QAAQ5R,OAASA,IAC9EpH,KAAK6Y,OAAOC,KAAMF,GAAUA,EAAMI,QAAQ5V,OAAgC,QAAvBwV,EAAMI,QAAQ5R,MAEzEpH,KAAK4nB,cAAiBC,IAClB7nB,KAAKwe,KAAKxe,KAAKigB,QAAQxK,QAAQqS,UAAUD,KAE7C7nB,KAAKigB,QAAUD,EACfhgB,KAAKkgB,WAAa9U,EAClBpL,KAAK+nB,UAAW,EAChB/nB,KAAKiV,WAAa,IAAIwJ,GACtBze,KAAKoN,eAAiB,IAAIuR,GAC1B3e,KAAKuY,cAAgB,CAAC,EACtBvY,KAAK6Z,MAAQ,EACb7Z,KAAK0Q,WAAa,IAAIkO,GACtB5e,KAAKgoB,cAAe,EACpBhoB,KAAKioB,SAAW,EAChBjoB,KAAKkoB,SAAW,IAChBloB,KAAKyX,cAAgB,IAAI6I,GAAcN,EAAQ5U,GAC/CpL,KAAKmoB,gBAAkB,GACvBnoB,KAAKoO,UAAYiZ,GAAqBrnB,KAAKigB,QAASjgB,KAAKkgB,YACzDlgB,KAAKoZ,aAAc,EACnBpZ,KAAKooB,wBAAyB,EAC9BpoB,KAAKqoB,WAAa,GAClBroB,KAAKqf,QAAS,EACdrf,KAAK6N,MAAQ,CAAC,EACd7N,KAAK6Y,OAAS,GACd7Y,KAAKsoB,QAAU,GACnB,CACA,kBAAIC,GACA,OAAOvoB,KAAK0Q,UAChB,CACA,kBAAI6X,CAAenlB,GACfpD,KAAK0Q,WAAW8N,KAAKpb,EACzB,CACA,aAAIolB,GACA,OAAOxoB,KAAKkoB,QAChB,CACA,aAAIM,CAAUplB,GACVpD,KAAKkoB,SAAW9kB,CACpB,CACA,iBAAIqlB,GACA,OAAOzoB,KAAKgoB,YAChB,CACA,iBAAIS,CAAcrlB,GACdpD,KAAKgoB,aAAe5kB,CACxB,CACAob,IAAAA,CAAK1a,GACD,IAAKA,EACD,YAEgBpD,IAAhBoD,EAAK+jB,QACLlhB,EAA0B7C,EAAK+jB,OAASA,GAAW7nB,KAAK4nB,cAAcC,SAEpDnnB,IAAlBoD,EAAKikB,WACL/nB,KAAK+nB,SAAWjkB,EAAKikB,eAENrnB,IAAfoD,EAAK+V,QACL7Z,KAAK6Z,MAAQxW,EAAcS,EAAK+V,QAEpC,MAAMmO,EAAelkB,EAAKkkB,cAAgBlkB,EAAK2kB,mBAC1B/nB,IAAjBsnB,IACAhoB,KAAKgoB,aAAeA,QAEFtnB,IAAlBoD,EAAKmkB,WACLjoB,KAAKioB,SAAW5kB,EAAcS,EAAKmkB,WAEvC,MAAMC,EAAWpkB,EAAKokB,UAAYpkB,EAAK0kB,eACtB9nB,IAAbwnB,IACAloB,KAAKkoB,SAAWA,QAEKxnB,IAArBoD,EAAKsV,cACLpZ,KAAKoZ,YAActV,EAAKsV,kBAEQ1Y,IAAhCoD,EAAKskB,yBACLpoB,KAAKooB,uBAAyBtkB,EAAKskB,6BAElB1nB,IAAjBoD,EAAKwkB,UACLtoB,KAAKsoB,QAAUxkB,EAAKwkB,SAExBtoB,KAAKiV,WAAWuJ,KAAK1a,EAAKmR,YAC1B,MAAMvE,EAAa5M,EAAK4M,YAAc5M,EAAKykB,eACvC/gB,EAAUkJ,GACV1Q,KAAK0Q,WAAWnC,OAASmC,EAGzB1Q,KAAK0Q,WAAW8N,KAAK9N,GAEzB1Q,KAAKoN,eAAeoR,KAAK1a,EAAKsJ,gBAC9BpN,KAAKyX,cAAc+G,KAAK1a,EAAK2T,eACzB3T,EAAKqkB,kBACLnoB,KAAKmoB,gBAAkBrkB,EAAKqkB,gBAAgBzhB,IAAK0B,IAC7C,MAAM0X,EAAM,IAAIW,GAEhB,OADAX,EAAItB,KAAKpW,GACF0X,KAGf9f,KAAKoO,UAAUoQ,KAAK1a,EAAKsK,WACzBpO,KAAK6N,MAAQ7H,EAAWhG,KAAK6N,MAAO/J,EAAK+J,OACzC7N,KAAKigB,QAAQxK,QAAQ2R,YAAYpnB,KAAM8D,QACnBpD,IAAhBoD,EAAKub,SACLrf,KAAKqf,OAASvb,EAAKub,QAEvB,MAAMc,EAAcngB,KAAKigB,QAAQxK,QAAQ0K,YAAYxM,IAAI3T,KAAKkgB,YAC9D,GAAIC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWgH,aACXhH,EAAWgH,YAAYpnB,KAAM8D,GAIzC,QAAwBpD,IAApBoD,EAAKukB,WACL,IAAK,MAAMA,KAAcvkB,EAAKukB,WAAY,CACtC,MAAMK,EAAgB,IAAIhI,GAC1BgI,EAAclK,KAAK6J,GACnBroB,KAAKqoB,WAAW3S,KAAKgT,EACzB,CAGJ,GADA1oB,KAAKqoB,WAAWM,KAAK,CAAC9f,EAAGD,IAAMC,EAAE8X,SAAW/X,EAAE+X,eAC1BjgB,IAAhBoD,EAAK+U,OACL,IAAK,MAAMD,KAAS9U,EAAK+U,OAAQ,CAC7B,MAAM+P,EAAgB5oB,KAAK6Y,OAAOC,KAAM1Q,GAAMA,EAAE2Q,OAASH,EAAMG,MAC/D,GAAK6P,EAMDA,EAAcpK,KAAK5F,OANH,CAChB,MAAMiQ,EAAW,IAAI/H,GACrB+H,EAASrK,KAAK5F,GACd5Y,KAAK6Y,OAAOnD,KAAKmT,EACrB,CAIJ,CAEJ7oB,KAAKuY,cAAcG,KAAO1Y,KAAK2nB,kBAAkB,SAAS5O,KAC1D/Y,KAAKuY,cAAcI,MAAQ3Y,KAAK2nB,kBAAkB,UAAU5O,IAChE,CACA+P,aAAAA,CAAc7kB,EAAOkS,EAAS4S,GAC1B/oB,KAAKwe,KAAKuK,GACV,MAAMC,EAAoBhpB,KAAKqoB,WAAWvP,KAAM1Q,GAAiB,WAAXA,EAAEhB,MAAqB6hB,OAAS7gB,EAAEuY,SAAWsI,OAAOC,WAAa9gB,EAAEuY,SAAWxK,EAAUlS,GAE9I,OADAjE,KAAKwe,KAAKwK,GAAmBtb,SACtBsb,GAAmBrI,QAC9B,CACAwI,QAAAA,CAASpQ,GACL,GAAIA,EAAM,CACN,MAAMqQ,EAAcppB,KAAK6Y,OAAOC,KAAMF,GAAUA,EAAMG,OAASA,GAC3DqQ,GACAppB,KAAKwe,KAAK4K,EAAY1b,QAE9B,KACK,CACD,MAAM8N,EAAapW,EAAe,gCAAiCikB,EAAiB7N,GAAcA,EAAW/C,QAAS6Q,EAAetpB,KAAK2nB,kBAAkB0B,EAAiB,OAAS,SAClLC,GACAtpB,KAAKwe,KAAK8K,EAAa5b,QAE/B,CACJ,ECtKG,MAAM6b,GACT3pB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAKoL,UAAYA,EACjBpL,KAAKigB,QAAUD,EACfhgB,KAAKwpB,aAAexJ,EAAOvK,QAAQgU,eAAezpB,KAAKoL,WAAW,GAClEpL,KAAK0pB,qBAAuB,GAC5B1pB,KAAK2pB,qBAAuB,EAChC,CACA,sBAAMC,CAAiBxY,GACnB,IAAK,MAAMgP,KAAcpgB,KAAK0pB,qBAC1BtJ,EAAWyJ,mBAAsBzJ,EAAW0J,SAAS1Y,EAE7D,CACA8G,eAAAA,CAAgB9Q,GACZ,IAAK,MAAMgZ,KAAcpgB,KAAK0pB,qBAC1BtJ,EAAWlI,iBAAmBkI,EAAWlI,gBAAgB9Q,EAEjE,CACAkN,IAAAA,GACItU,KAAK0pB,qBAAuB,GAC5B1pB,KAAK2pB,qBAAuB,GAC5B,IAAK,MAAMvJ,KAAcpgB,KAAKwpB,aAAc,CACxC,OAAQpJ,EAAWxL,MACf,IAAK,WACD5U,KAAK0pB,qBAAqBhU,KAAK0K,GAC/B,MACJ,IAAK,YACDpgB,KAAK2pB,qBAAqBjU,KAAK0K,GAGvCA,EAAW9L,MACf,CACJ,CACA,uBAAMyV,CAAkBze,EAAU8F,GAC9B,IAAK,MAAMgP,KAAcpgB,KAAK0pB,qBAC1BtJ,EAAWzV,MAAMW,EAAU8F,GAE/B,IAAK,MAAMgP,KAAcpgB,KAAK2pB,qBAC1BvJ,EAAWyJ,UAAUve,UAAoB8U,EAAW0J,SAASxe,EAAU8F,EAE/E,CACA,WAAM4Y,CAAM1e,GACR,IAAK,MAAM8U,KAAcpgB,KAAK0pB,qBAC1BtJ,EAAWyJ,aAAezJ,EAAW4J,MAAM1e,GAE/C,IAAK,MAAM8U,KAAcpgB,KAAK2pB,qBAC1BvJ,EAAWyJ,UAAUve,IAAa8U,EAAW4J,MAAM1e,EAE3D,ECvCJ,MAAM2e,GAAcnmB,IAChB,IAAKyB,EAAUzB,EAAKygB,QAASzgB,EAAKomB,YAC9B,OAEJ,MAAMC,EAAyB,EAAdrmB,EAAK8H,OAClB9H,EAAKsmB,MAAQtmB,EAAKumB,SAAWF,EAC7BrmB,EAAKwmB,OAAOxmB,EAAK8H,QAEZ9H,EAAKsmB,MAAQD,GAClBrmB,EAAKwmB,MAAMxmB,EAAK8H,SAGjB,MAAM2e,GACT3qB,WAAAA,CAAYogB,EAAQwK,EAAIpf,EAAWrH,EAAU0mB,EAAiBvD,GAAO,IAAAwD,EAAA,KACjE1qB,KAAKoL,UAAYA,EACjBpL,KAAK2qB,cAAgB,SAACvf,EAAWrH,EAAUsM,GAAyB,IAAjBua,EAAQ/kB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,EAC1D,IAAK,MAAO,CAAE2G,KAAWpB,EAAUqK,QAAS,CACxC,MAAMoV,OAAwCnqB,IAA5B8L,EAAOse,iBAAiCte,EAAOse,iBAAiB/mB,EAAU2mB,QAAQhqB,EACpG,GAAImqB,EACA,OAAOlrB,EAASkB,OAAOgqB,EAAUzqB,EAAGyqB,EAAU/qB,EAAGuQ,EAEzD,CACA,MAA0C0a,EAAgBlnB,EAAkC,CACxFG,KADeoH,EAAUyK,OAAO7R,KAEhCD,SAAUA,IACVsO,EAAM1S,EAASkB,OAAOkqB,EAAc3qB,EAAG2qB,EAAcjrB,EAAGuQ,GAASzE,EAAS8e,EAAKnZ,YAAayS,EAAW0G,EAAKhd,QAAQW,KAAK2V,SAAUgH,EAAiBzG,IACpJ0F,GAAW,CACP1F,UACA2F,WAAY,CAAC,SAAU,qBACvBE,MAAO/X,EAAIjS,EACXiqB,SAAUjf,EAAUyK,OAAO7R,KAAKC,MAChCqmB,MAAQlnB,GAAWiP,EAAIjS,GAAKgD,EAC5BwI,YAELqf,EAAe1G,IACd0F,GAAW,CACP1F,UACA2F,WAAY,CAAC,SAAU,mBACvBE,MAAO/X,EAAIvS,EACXuqB,SAAUjf,EAAUyK,OAAO7R,KAAKE,OAChComB,MAAQlnB,GAAWiP,EAAIvS,GAAKsD,EAC5BwI,YAOR,OAJAof,EAAchH,EAASzT,MAAQyT,EAAShL,SACxCgS,EAAchH,EAAST,OAASS,EAAShL,SACzCiS,EAAYjH,EAAS1T,KAAO0T,EAAShL,SACrCiS,EAAYjH,EAASV,QAAUU,EAAShL,SACpC0R,EAAKQ,cAAc7Y,EAAKuY,GACjBF,EAAKC,cAAcvf,OAAW1K,EAAW2P,EAAQua,EAAW,GAEhEvY,CACX,EACArS,KAAKmrB,mBAAqB,KACtB,MAA8D/hB,E1DoCnE,SAAiCwa,GACpC,MAAMwH,EAAe/oB,EAAOzB,OAG5B,OAFAwqB,EAAajrB,OAAS,EACtBirB,EAAalrB,MAAQ0jB,EACdwH,CACX,C0DzCiCC,CAAwBrrB,KAAK4jB,WAA+BtiB,OAAQgqB,EAActrB,KAAK0N,QAAQW,KACpH,GAA8B,WAA1Bid,EAAY1H,WAAoD,YAA1B0H,EAAY1H,UAClD,OAAOxa,EAEX,MAAMmiB,EAAOlrB,KAAKmrB,GAAK,IAAOroB,EAAcmoB,EAAYprB,MAAMkD,OAAQqoB,EAAaprB,KAAKmrB,GAAK,IAAOroB,EAAcmoB,EAAYprB,MAAMiT,QAASuY,EAAQ,CACjJnb,KAAMkb,EAAYF,EAAM,EACxBhI,MAAOkI,EAAYF,EAAM,GAQ7B,OANKD,EAAYpH,WACb9a,EAAIlJ,OAAS6C,EAAcM,EAAcqoB,EAAMnb,KAAMmb,EAAMnI,SAE3D+H,EAAY9oB,QAAuC,kBAAtB8oB,EAAYrK,QACzC7X,EAAIjJ,QAAUuC,KAEX0G,GAEXpJ,KAAKkrB,cAAgB,SAAC7Y,GAAsB,IAAjBuY,EAAQ/kB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,EAClC,MAAM8lB,EAAoBjB,EAAKhd,QAAQ2W,WAAYzY,EAAS8e,EAAKnZ,YACjE,IAAKoa,EAAkBpd,OACnB,OAAO,EAEX,MAAMqd,EAAiBD,EAAkBnJ,QACzC,GAAIoJ,EAAerd,OACf,OAAO,EAEX,MAAMkT,EAAUmK,EAAenK,QAC/B,GAAIA,GAAW,GAAKmJ,EAAWnJ,EAC3B,MAAM,IAAI9gB,MAAM,GAAGjB,iDAEvB,QAASgrB,EAAKtf,UAAUgD,UAAU0K,KAAMxN,GAAahI,EAAY+O,EAAK/G,EAASvH,UAAY6H,EAASN,EAASiG,YACjH,EACAvR,KAAK6rB,cAAiB3iB,IAClB,IAAKA,IAAUlJ,KAAK8rB,OAAU9rB,KAAK+rB,YAAc/rB,KAAK8rB,KAAKE,MACvD,OAAO9iB,EAEX,MAAM+iB,EAAajsB,KAAK8rB,KAAK5J,YAAcliB,KAAK8rB,KAAK3J,SAAW,EAAI,EAAG+J,EAAUlsB,KAAK8rB,KAAK5J,WAAa7hB,KAAKmrB,GAAK,EAAI,EACtH,OADkInrB,KAAKyF,QAAQ9F,KAAK8rB,KAAK5rB,OAAS,GAAKgsB,IAAY7rB,KAAKmrB,GAAKS,IAAe,EAIxMjsB,KAAK+rB,UACE/rB,KAAK+rB,UAEZ/rB,KAAK8rB,KAAKE,MvDCnB,SAAkB9iB,EAAO0L,EAAMxR,GAClC,MAAO,CACH2G,EAAGb,EAAMa,EACTE,EAAGf,EAAMe,EACTD,EAAGd,EAAMc,GAAc,WAAT4K,GAAqB,EAAI,GAAKxR,EAEpD,CuDNuB+oB,CAASjjB,EAAOlJ,KAAK8rB,KAAKE,MAAMpX,KAAM5U,KAAK8rB,KAAKE,MAAM5oB,OAE1D8F,EARIA,GAUflJ,KAAKosB,cAAiBroB,IAClB,MAAMqH,EAAYpL,KAAKoL,UAAWihB,EAAclpB,EAAcnD,KAAK0N,QAAQ2C,OAAOjN,OAClFpD,KAAK+D,SAAW/D,KAAK2qB,cAAcvf,EAAWrH,EAAUpB,EAAM0pB,EAAa,EAAGjhB,EAAUkd,UACxFtoB,KAAKssB,gBAAkBtsB,KAAK+D,SAASzC,OACrC,MAAM6F,EAAaiE,EAAUyK,OAAO7R,KAOpC,OANAhE,KAAKusB,WAAa,IACXhlB,EAAYvH,KAAK0N,QAAQW,KAAKsV,OAAQxc,GACzCyE,OAAQ5L,KAAK0N,QAAQW,KAAKsV,OAAO/X,QAAU,EAC3CxE,KAAMpH,KAAK0N,QAAQW,KAAKsV,OAAOvc,MAAQ,WAE3CpH,KAAK4jB,U1DlDV,SAAmCA,EAAW7f,EAAU4f,GAC3D,GAAInjB,EAASojB,GACT,OAAQA,EAAYvjB,KAAKmrB,GAAM,IAEnC,OAAQ5H,GACJ,IAAK,MACD,OAAQvjB,KAAKmrB,GAAK,EACtB,IAAK,YACD,OAAQnrB,KAAKmrB,GAAK,EACtB,IAAK,QACD,OAAO,EACX,IAAK,eACD,OAAOnrB,KAAKmrB,GAAK,EACrB,IAAK,SACD,OAAOnrB,KAAKmrB,GAAK,EACrB,IAAK,cACD,OAAQ,EAAInrB,KAAKmrB,GAAM,EAC3B,IAAK,OACD,OAAOnrB,KAAKmrB,GAChB,IAAK,WACD,OAAS,EAAInrB,KAAKmrB,GAAM,EAC5B,IAAK,SACD,OAAOnrB,KAAKS,MAAM6iB,EAAO7jB,EAAIiE,EAASjE,EAAG6jB,EAAOvjB,EAAI2D,EAAS3D,GACjE,IAAK,UACD,OAAOC,KAAKS,MAAMiD,EAASjE,EAAI6jB,EAAO7jB,EAAGiE,EAAS3D,EAAIujB,EAAOvjB,GACjE,QACI,OAAOsC,IAAcrC,KAAKmrB,GAAK,EAE3C,C0DsB6BgB,CAA0BxsB,KAAK0N,QAAQW,KAAKuV,UAAW5jB,KAAK+D,SAAU/D,KAAKusB,YACpFvsB,KAAK0N,QAAQW,KAAKuV,WACtB,IAAK,SACD5jB,KAAKysB,QAAU,SACf,MACJ,IAAK,UACDzsB,KAAKysB,QAAU,UAGvBzsB,KAAKmT,OAAS9Q,EAAOzB,QAEzBZ,KAAK0sB,eAAiB,CAACC,EAAc1F,KACjC,MAAM2F,EAAYD,EAAajf,QAAQ1N,KAAKwT,OAC5C,GAAKoZ,EAGL,OAAO5mB,EAAW,CACd+N,MAAO4Y,EAAa5Y,MACpB7H,KAAMygB,EAAazgB,MACpBnF,EAAyB6lB,EAAW5sB,KAAKwqB,GAAIvD,KAEpDjnB,KAAKigB,QAAUD,EACfhgB,KAAKsU,KAAKkW,EAAIzmB,EAAU0mB,EAAiBvD,EAC7C,CACAnW,OAAAA,CAAQ8b,GACJ,GAAI7sB,KAAK8sB,aAAe9sB,KAAKsR,UACzB,OAEJtR,KAAKsR,WAAY,EACjBtR,KAAKgS,OAAO+a,SAAU,EACtB/sB,KAAKgtB,KAAKD,SAAU,EACpB,MAAM3hB,EAAYpL,KAAKoL,UAAW6hB,EAAgBjtB,KAAKitB,cACvD,IAAK,MAAO,CAAEzgB,KAAWpB,EAAUqK,QAC3BjJ,EAAO0gB,mBACP1gB,EAAO0gB,kBAAkBltB,KAAM6sB,GAGvC,IAAK,MAAMthB,KAAWH,EAAUgD,UAAUuH,SAClCpK,EAAQ2hB,mBACR3hB,EAAQ2hB,kBAAkBltB,KAAM6sB,GAGpCI,GACAA,EAAcjD,MAAMhqB,KAE5B,CACAqP,IAAAA,CAAK+B,GACD,MAAMhG,EAAYpL,KAAKoL,UACvB,IAAK,MAAO,CAAEoB,KAAWpB,EAAUqK,QAC/BrK,EAAUyK,OAAOzB,mBAAmB5H,EAAQxM,KAAMoR,GAEtDhG,EAAUyK,OAAO1E,aAAanR,KAAMoR,EACxC,CACAK,YAAAA,GACI,OAAOzR,KAAK6rB,cAAc7rB,KAAKgS,OAAO9I,OAASuB,EAAoBzK,KAAKkJ,OAC5E,CACAikB,OAAAA,GACI,OAAQntB,KAAKuR,aAAe,EAAIlR,KAAKmrB,GAAM,CAC/C,CACAjkB,WAAAA,GACI,MAAO,CACHnH,EAAGJ,KAAK+D,SAAS3D,EAAIJ,KAAKmT,OAAO/S,EACjCN,EAAGE,KAAK+D,SAASjE,EAAIE,KAAKmT,OAAOrT,EACjCC,EAAGC,KAAK+D,SAAShE,EAEzB,CACAwR,SAAAA,GACI,OAAOvR,KAAKgS,OAAOpG,QAAU5L,KAAKgE,KAAKZ,KAC3C,CACAuO,cAAAA,GACI,OAAO3R,KAAK6rB,cAAc7rB,KAAKgS,OAAO9I,OAASuB,EAAoBzK,KAAKotB,aAC5E,CACA9Y,IAAAA,CAAKkW,EAAIzmB,EAAU0mB,EAAiBvD,GAChC,MAAM9b,EAAYpL,KAAKoL,UAAW4U,EAAShgB,KAAKigB,QAChDjgB,KAAKwqB,GAAKA,EACVxqB,KAAKknB,MAAQA,EACblnB,KAAKkM,MAAO,EACZlM,KAAKuS,cAAe,EACpBvS,KAAK+T,OAAQ,EACb/T,KAAKqtB,aAAe,EACpBrtB,KAAKsR,WAAY,EACjBtR,KAAK8sB,aAAc,EACnB9sB,KAAKsS,SAAW,EAChBtS,KAAKstB,WAAY,EACjBttB,KAAK4T,OAAS,CACV2Z,YAAa,CAAC,GAElBvtB,KAAKysB,QAAU,SACfzsB,KAAKwtB,oBAAqB,EAC1B,MAAMrX,EAAU/K,EAAUwI,OAAOC,WAAY4Z,EAAcriB,EAAU+B,cAAeugB,EAAmBrG,GAAqBrnB,KAAKigB,QAAS7U,EAAWqiB,EAAYrf,WAAYuf,EAAYD,EAAiBla,MAAMoB,MAAM,iBAAEqS,GAAqByG,EAC7O1tB,KAAKwT,MAAQzM,EAAyB4mB,EAAW3tB,KAAKwqB,GAAIvD,GAC1D,MAAM0F,EAAee,EAAiBla,MACtC,GAAIiX,GAAmBA,EAAgBjX,OAASiX,EAAgBjX,MAAMoB,KAAM,CACxE,MAAsDpB,EAAQzM,EAApC0jB,EAAgBjX,MAAMoB,KAA0D5U,KAAKwqB,GAAIvD,GAC/GzT,IACAxT,KAAKwT,MAAQA,EACbmZ,EAAanO,KAAKiM,EAAgBjX,OAE1C,CACAxT,KAAK4sB,UAAY5sB,KAAK0sB,eAAeC,EAAc1F,GACnDyG,EAAiBlP,KAAKiM,GACtB,MAAMmC,EAAY5sB,KAAK4sB,UACnBA,GACAc,EAAiBlP,KAAKoO,EAAUxe,WAEpC,MAAMqJ,EAAgB,IAAI6I,GAAcN,EAAQ5U,GAChDqM,EAAc+G,KAAKpT,EAAU+B,cAAcsK,eAC3CA,EAAc+G,KAAKkP,EAAiBjW,eACpCzX,KAAKyX,cAAgBA,EACrBzX,KAAKkM,KAAO0gB,GAAW1gB,MAAQwhB,EAAiBla,MAAMtH,KACtDlM,KAAK+T,MAAQ6Y,GAAW7Y,OAAS2Z,EAAiBla,MAAMO,MACxD/T,KAAK0N,QAAUggB,EACf,MAAME,EAAc5tB,KAAK0N,QAAQW,KAAK0V,KACtC/jB,KAAK6tB,UAA0C,I1DnLhD,SAAkBngB,GACrB,MAAMlL,EAASkL,EAAQlL,QAAQ,OAAE+L,EAAM,aAAEsT,GAAiBra,EAAUhF,GAC9D,CACE+L,OAAQ/L,EACRqf,aAAc,GAEhBrf,EACN,OAAgBW,EAAToL,EAAuBlL,EAAcqK,EAAQtK,MAAOye,GAA+BnU,EAAQtK,MACtG,C0D2KyB0qB,CAASF,EAAY/T,OAClC+T,EAAY1K,YACZljB,KAAKitB,cAAgBjtB,KAAKigB,QAAQxK,QAAQsY,iBAAiBH,EAAY1K,WACnEljB,KAAKitB,eAAiB7hB,EAAU4iB,QAAQJ,EAAY1K,UAAWljB,KAAKitB,gBACpEjtB,KAAKitB,cAAc3Y,KAAKlJ,IAGhCA,EAAUwI,OAAOqa,aAAajuB,MAC9BA,KAAKgE,KzDGN,SAA2C0J,EAASyI,GACvD,MAAM+X,EAAaxgB,EAAQtK,MAAO+qB,EAAmBzgB,EAAQhD,UAAWtB,EAAM,CAC1EglB,UAAmD,IAAxCjrB,EAAcgrB,EAAiBtU,OAC1CtL,OAAQ4f,EAAiB5f,OACzBnL,MAAOD,EAAcuK,EAAQtK,OAAS+S,EACtCrT,IAAKG,EAAYirB,GAAc/X,EAC/BtT,IAAKK,EAAYgrB,GAAc/X,EAC/BkY,MAAO,EACPC,SAAUnrB,EAAcgrB,EAAiBnN,OACzCuN,KAAM,GAEV,GAAIJ,EAAiB5f,OAAQ,CAEzB,OADAnF,EAAI8X,MAAQ,EAAI/d,EAAcgrB,EAAiBjN,OACvCiN,EAAiB/mB,MACrB,IAAK,WACDgC,EAAIsT,OAAS,aACb,MACJ,IAAK,WACDtT,EAAIsT,OAAS,aACb,MACJ,IAAK,SACDtT,EAAIsT,OAASha,KAAe,GAAM,aAAe,aAGzD,MAAM8rB,EAAuC,SAA1BL,EAAiB/mB,KACpC,OAAQ+mB,EAAiBvM,YACrB,IAAK,MACDxY,EAAIhG,MAAQgG,EAAIvG,IACZ2rB,IACAplB,EAAIsT,OAAS,cAEjB,MACJ,IAAK,MACDtT,EAAIhG,MAAQgG,EAAItG,IACZ0rB,IACAplB,EAAIsT,OAAS,cAEjB,MAEJ,QACItT,EAAIhG,MAAQL,EAAcqG,GACtBolB,IACAplB,EAAIsT,OAASha,KAAe,GAAM,aAAe,cAIjE,CAEA,OADA0G,EAAIqlB,aAAerlB,EAAIhG,MAChBgG,CACX,CyDpDoBslB,CAAkC1uB,KAAK0N,QAAQ1J,KAAMmS,GACjEnW,KAAKgS,OAAS,CACV+a,SAAS,GAEb/sB,KAAKgtB,KAAO,CACRD,SAAS,EACT/hB,OAAQ,GAEZhL,KAAKosB,cAAcroB,GACnB/D,KAAK2uB,gBAAkB3uB,KAAKmrB,qBAC5BnrB,KAAKwS,SAAWxS,KAAK2uB,gBAAgBrtB,OACrCtB,KAAK4uB,UAAY,EAAIzrB,EAAcnD,KAAK0N,QAAQW,KAAK6S,OACrD,MAAM9S,EAAYhD,EAAUgD,UAC5BA,EAAUygB,UAAYzgB,EAAUygB,WAAazgB,EAAU0gB,WAAa9uB,KAAK+D,SAAShE,EAClFqO,EAAU0gB,WAAa9uB,KAAK+D,SAAShE,EACrCC,KAAK8R,aAAe9R,KAAK+D,SAAShE,EAAIqL,EAAUkd,QAChDtoB,KAAK+uB,MAAQ,GACb,IAAItb,EAASrI,EAAUsI,QAAQC,IAAI3T,KAAKwT,OACnCC,IACDA,EAASzT,KAAKigB,QAAQxK,QAAQuZ,eAAehvB,KAAKwT,OAC9CC,GACArI,EAAUsI,QAAQ1L,IAAIhI,KAAKwT,MAAOC,IAGtCA,GAAUA,EAAOkS,WACjBlS,EAAOkS,UAAU3lB,MAErB,MAAMivB,EAAgBxb,GAAQyb,cAC1BD,IACAjvB,KAAK+uB,MAAQE,EAAcjvB,OAE/BA,KAAKqR,UAAW,EAChBrR,KAAK+S,YAAc9J,EAAgBjJ,KAAK0N,QAAQ0E,OAAOlJ,OACvD,IAAK,MAAMqC,KAAWH,EAAUgD,UAAUuH,SACtCpK,EAAQ+I,KAAKtU,MAEjB,IAAK,MAAMmvB,KAAS/jB,EAAUgD,UAAUghB,OACpCD,EAAM7a,MAAQ6a,EAAM7a,KAAKtU,MAEzByT,GAAUA,EAAO4b,cACjB5b,EAAO4b,aAAajkB,EAAWpL,MAEnC,IAAK,MAAO,CAAEwM,KAAWpB,EAAUqK,QAC/BjJ,EAAO8iB,iBAAmB9iB,EAAO8iB,gBAAgBtvB,KAEzD,CACAuvB,cAAAA,GACI,MAAM3jB,EAAS5L,KAAKuR,YAAapK,EAAanH,KAAKoL,UAAUyK,OAAO7R,KAAMD,EAAW/D,KAAK+D,SAC1F,OAAQA,EAAS3D,IAAMwL,GACnB7H,EAASjE,IAAM8L,GACf7H,EAASjE,GAAKqH,EAAWjD,OAAS0H,GAClC7H,EAAS3D,GAAK+G,EAAWlD,MAAQ2H,CACzC,CACA4jB,SAAAA,GACI,OAAQxvB,KAAKsR,YAActR,KAAKqR,UAAYrR,KAAKuvB,gBACrD,CACAvF,KAAAA,GACI,IAAK,MAAMze,KAAWvL,KAAKoL,UAAUgD,UAAUuH,SAC3CpK,EAAQye,OAASze,EAAQye,MAAMhqB,KAEvC,EC7SG,MAAMyvB,GACT7vB,WAAAA,CAAYmE,EAAUuH,GAClBtL,KAAK+D,SAAWA,EAChB/D,KAAKsL,SAAWA,CACpB,ECJG,MAAMokB,GACT9vB,WAAAA,CAAYQ,EAAGN,GACXE,KAAK+D,SAAW,CACZ3D,EAAGA,EACHN,EAAGA,EAEX,ECJG,MAAM6vB,WAAkBD,GAC3B9vB,WAAAA,CAAYQ,EAAGN,EAAGmE,EAAOC,GACrB5B,MAAMlC,EAAGN,GACTE,KAAKgE,KAAO,CACRE,OAAQA,EACRD,MAAOA,EAEf,CACA2rB,QAAAA,CAASC,GACL,MAAMC,EAAI9vB,KAAKgE,KAAKC,MAAO8F,EAAI/J,KAAKgE,KAAKE,OAAQmO,EAAMrS,KAAK+D,SAC5D,OAAO8rB,EAAMzvB,GAAKiS,EAAIjS,GAAKyvB,EAAMzvB,GAAKiS,EAAIjS,EAAI0vB,GAAKD,EAAM/vB,GAAKuS,EAAIvS,GAAK+vB,EAAM/vB,GAAKuS,EAAIvS,EAAIiK,CAC9F,CACAgmB,UAAAA,CAAWrE,GACHA,aAAiBsE,IACjBtE,EAAMqE,WAAW/vB,MAErB,MAAM8vB,EAAI9vB,KAAKgE,KAAKC,MAAO8F,EAAI/J,KAAKgE,KAAKE,OAAQ+rB,EAAOjwB,KAAK+D,SAAUmsB,EAAOxE,EAAM3nB,SAAUosB,EAAQzE,aAAiBiE,GAAYjE,EAAM1nB,KAAO,CAAEC,MAAO,EAAGC,OAAQ,GAAKksB,EAAKD,EAAMlsB,MAAOosB,EAAKF,EAAMjsB,OACtM,OAAOgsB,EAAK9vB,EAAI6vB,EAAK7vB,EAAI0vB,GAAKI,EAAK9vB,EAAIgwB,EAAKH,EAAK7vB,GAAK8vB,EAAKpwB,EAAImwB,EAAKnwB,EAAIiK,GAAKmmB,EAAKpwB,EAAIuwB,EAAKJ,EAAKnwB,CACpG,ECjBG,MAAMkwB,WAAeN,GACxB9vB,WAAAA,CAAYQ,EAAGN,EAAG8L,GACdtJ,MAAMlC,EAAGN,GACTE,KAAK4L,OAASA,CAClB,CACAgkB,QAAAA,CAASC,GACL,OAAOvsB,EAAYusB,EAAO7vB,KAAK+D,WAAa/D,KAAK4L,MACrD,CACAmkB,UAAAA,CAAWrE,GACP,MAAMuE,EAAOjwB,KAAK+D,SAAUmsB,EAAOxE,EAAM3nB,SAAUusB,EAAejwB,KAAKkwB,IAAIL,EAAK9vB,EAAI6vB,EAAK7vB,GAAtCkwB,EAA6CjwB,KAAKkwB,IAAIL,EAAKpwB,EAAImwB,EAAKnwB,GAAMkD,EAAIhD,KAAK4L,OACtI,GAAI8f,aAAiBsE,GAAQ,CAEzB,OADahtB,EAAI0oB,EAAM9f,OAAevL,KAAKU,KAAKuvB,GAAa,EAAIA,GAAa,EAElF,CACK,GAAI5E,aAAiBiE,GAAW,CACjC,MAAM,MAAE1rB,EAAK,OAAEC,GAAWwnB,EAAM1nB,KAChC,OAD8C3D,KAAKmwB,IAAIF,EAAYrsB,EAAO,GAAK5D,KAAKmwB,IAAIF,EAAYpsB,EAAQ,IAC3FlB,GAAK,GACjBstB,GAAattB,EAAIiB,GAASqsB,GAAattB,EAAIkB,GAC5CosB,GAAarsB,GACbqsB,GAAapsB,CACrB,CACA,OAAO,CACX,ECtBG,MAAMusB,GACT7wB,WAAAA,CAAY8wB,EAAWC,GACnB3wB,KAAK0wB,UAAYA,EACjB1wB,KAAK2wB,SAAWA,EAChB3wB,KAAK4wB,WAAa,KACd,MAAM,EAAExwB,EAAC,EAAEN,GAAME,KAAK0wB,UAAU3sB,UAAU,MAAEE,EAAK,OAAEC,GAAWlE,KAAK0wB,UAAU1sB,MAAM,SAAE2sB,GAAa3wB,KAClG,IAAK,IAAI6wB,EAAI,EAAGA,EAAI,EAAGA,IACnB7wB,KAAK8wB,MAAMpb,KAAK,IAAI+a,GAAS,IAAId,GAAUvvB,EAAK6D,EAAQ,GAAM4sB,EAAI,GAAI/wB,EAAKoE,EAAS,GAAM7D,KAAK0wB,MAAMF,EAAI,GAAMA,EAAI,GAAK5sB,EAAQ,EAAGC,EAAS,GAAIysB,IAEpJ3wB,KAAKgxB,UAAW,GAEpBhxB,KAAKixB,QAAU,GACfjxB,KAAKgxB,UAAW,EAChBhxB,KAAK8wB,MAAQ,EACjB,CACAI,MAAAA,CAAOrB,GACH,QAAK7vB,KAAK0wB,UAAUd,SAASC,EAAM9rB,YAG/B/D,KAAKixB,QAAQ9wB,OAASH,KAAK2wB,UAC3B3wB,KAAKixB,QAAQvb,KAAKma,IACX,IAEN7vB,KAAKgxB,UACNhxB,KAAK4wB,aAEF5wB,KAAK8wB,MAAMK,KAAM3vB,GAAQA,EAAI0vB,OAAOrB,KAC/C,CACAxqB,KAAAA,CAAMqmB,EAAO0F,EAAOC,GAChB,MAAMjoB,EAAMioB,GAAS,GACrB,IAAK3F,EAAMqE,WAAW/vB,KAAK0wB,WACvB,MAAO,GAEX,IAAK,MAAMxoB,KAAKlI,KAAKixB,SACZvF,EAAMkE,SAAS1nB,EAAEnE,WAClBT,EAAYooB,EAAM3nB,SAAUmE,EAAEnE,UAAYmE,EAAEoD,SAASiG,eACnD6f,GAASA,EAAMlpB,EAAEoD,YAGvBlC,EAAIsM,KAAKxN,EAAEoD,UAEf,GAAItL,KAAKgxB,SACL,IAAK,MAAMxvB,KAAOxB,KAAK8wB,MACnBtvB,EAAI6D,MAAMqmB,EAAO0F,EAAOhoB,GAGhC,OAAOA,CACX,CACAkoB,WAAAA,CAAYvtB,EAAU6H,EAAQwlB,GAC1B,OAAOpxB,KAAKqF,MAAM,IAAI2qB,GAAOjsB,EAAS3D,EAAG2D,EAASjE,EAAG8L,GAASwlB,EAClE,CACAG,cAAAA,CAAextB,EAAUC,EAAMotB,GAC3B,OAAOpxB,KAAKqF,MAAM,IAAIsqB,GAAU5rB,EAAS3D,EAAG2D,EAASjE,EAAGkE,EAAKC,MAAOD,EAAKE,QAASktB,EACtF,ECjDJ,MACMI,GAAkBrqB,GACb,IAAIwoB,IAAWxoB,EAAWlD,MAAQ,GAAIkD,EAAWjD,OAAS,EAAuB,EAAnBiD,EAAWlD,MAAa,EAAwB,EAApBkD,EAAWjD,OAAc,GAEvH,MAAMutB,GACT7xB,WAAAA,CAAYogB,EAAQ5U,GAChBpL,KAAK0xB,cAAgB,CAAChkB,EAASikB,EAAazK,KACxC,IAAKxZ,EAAQsZ,OAAO/B,SAAS1W,OACzB,OAEJ,MAAMqjB,EAAgBlkB,EAAQsZ,OAAQ6K,EAAgB7xB,KAAK8xB,mBAAmBF,EAAc3M,SAAU8M,EAAqBH,EAAcxuB,MAAO4uB,EAAoBJ,EAAc1M,MAAQ,EAAI0M,EAAc1M,MAAQ6M,EAAoBE,EAAkB5xB,KAAKwC,IAAIkvB,EAAoBC,GAAqBH,EAAgBF,EAAaO,EAAiB7xB,KAAKwC,IAAI7C,KAAKghB,MAAOhhB,KAAKmyB,OAAQ/pB,GAAMA,EAAE8e,QAAUA,GAAO/mB,QACrZH,KAAKklB,MAAQ0M,EAAc1M,MAAQ2M,EAC/BK,EAAiBD,EACjBjyB,KAAK0V,KAAKrV,KAAKkwB,IAAI0B,EAAkBC,QAAiBxxB,EAAWgN,EAASwZ,GAErEgL,EAAiBD,GACtBjyB,KAAKoyB,eAAeF,EAAiBD,EAAiB/K,IAG9DlnB,KAAK8xB,mBAAsBO,IACvB,MAAMjnB,EAAYpL,KAAKkgB,WACvB,IAAK9U,EAAUyK,OAAOpI,UAAY4kB,EAAe9jB,OAC7C,OAAO,EAEX,MAAMsH,EAASzK,EAAUyK,OAAOpI,QAAS0I,EAAU/K,EAAUwI,OAAOC,WACpE,OAAQgC,EAAO5R,MAAQ4R,EAAO3R,QAAWmuB,EAAernB,OAASmL,GAAW,EAAIkc,EAAevN,OAEnG9kB,KAAKsyB,cAAgB,CAACvuB,EAAU0mB,EAAiBvD,EAAOqL,KACpD,IACI,IAAIjnB,EAAWtL,KAAKwyB,KAAKC,MACrBnnB,EACAA,EAASgJ,KAAKtU,KAAK0yB,QAAS3uB,EAAU0mB,EAAiBvD,GAGvD5b,EAAW,IAAIif,GAASvqB,KAAKigB,QAASjgB,KAAK0yB,QAAS1yB,KAAKkgB,WAAYnc,EAAU0mB,EAAiBvD,GAEpG,IAAIyL,GAAS,EAIb,GAHIJ,IACAI,EAASJ,EAAYjnB,KAEpBqnB,EACD,OAWJ,OATA3yB,KAAK4yB,OAAOld,KAAKpK,GACjBtL,KAAK6yB,QAAQnd,KAAKpK,GAClBtL,KAAK0yB,UACL1yB,KAAKigB,QAAQ6S,cAAc,gBAAiB,CACxC1nB,UAAWpL,KAAKkgB,WAChBpc,KAAM,CACFwH,cAGDA,CACX,CACA,MAAOwJ,GAEH,YADA9P,IAAYF,QAAQ,GAAGpF,sBAAgCoV,IAE3D,GAEJ9U,KAAK+yB,gBAAkB,CAACntB,EAAOshB,EAAO2F,KAClC,MAAMvhB,EAAWtL,KAAK4yB,OAAOhtB,GAC7B,IAAK0F,GAAYA,EAAS4b,QAAUA,EAChC,OAAO,EAEX5b,EAASyF,QAAQ8b,GACjB,MAAMmG,EAAOhzB,KAAK6yB,QAAQntB,QAAQ4F,GAUlC,OATAtL,KAAK4yB,OAAOK,OAAOrtB,EAAO,GAC1B5F,KAAK6yB,QAAQI,OAAOD,EAAM,GAC1BhzB,KAAKwyB,KAAK9c,KAAKpK,GACftL,KAAKigB,QAAQ6S,cAAc,kBAAmB,CAC1C1nB,UAAWpL,KAAKkgB,WAChBpc,KAAM,CACFwH,eAGD,GAEXtL,KAAKigB,QAAUD,EACfhgB,KAAKkgB,WAAa9U,EAClBpL,KAAK0yB,QAAU,EACf1yB,KAAK4yB,OAAS,GACd5yB,KAAK6yB,QAAU,GACf7yB,KAAKwyB,KAAO,GACZxyB,KAAKklB,MAAQ,EACbllB,KAAK6uB,WAAY,EACjB7uB,KAAK8uB,WAAa,EAClB9uB,KAAKkzB,oBAAsB,IAAI3J,GAAmBvJ,EAAQ5U,GAC1D,MAAMjE,EAAaiE,EAAUyK,OAAO7R,KACpChE,KAAKmzB,SAAW,IAAI1C,GAASe,GAAerqB,GAxF9B,GAyFdnH,KAAKovB,OAASpvB,KAAKigB,QAAQxK,QAAQ2d,UAAUhoB,GAAW,GACxDpL,KAAK2V,SAAW3V,KAAKigB,QAAQxK,QAAQ4d,YAAYjoB,GAAW,EAChE,CACA,SAAI4V,GACA,OAAOhhB,KAAK4yB,OAAOzyB,MACvB,CACAmzB,kBAAAA,GACI,MAAMloB,EAAYpL,KAAKkgB,WAAYxS,EAAUtC,EAAU+B,cACvD,IAAK,MAAM7B,KAAYoC,EAAQya,gBAC3BnoB,KAAKuzB,YAAYjoB,EAASvH,SAAWwD,EAAY+D,EAASvH,SAAUqH,EAAUyK,OAAO7R,WAAQtD,EAAW4K,EAASoC,QAEzH,CACA6lB,WAAAA,CAAYxvB,EAAU0mB,EAAiBvD,EAAOqL,GAC1C,MAAsErN,EAApDllB,KAAKkgB,WAAgC/S,cAA+BiB,UAAU4Y,OAAO9B,MACvG,GAAIA,EAAQ,EAAG,CACX,MAAMsO,EAAgBxzB,KAAKghB,MAAQ,EAAIkE,EACnCsO,EAAgB,GAChBxzB,KAAKoyB,eAAeoB,EAE5B,CACA,OAAOxzB,KAAKsyB,cAAcvuB,EAAU0mB,EAAiBvD,EAAOqL,EAChE,CACA5nB,KAAAA,GACI3K,KAAK4yB,OAAS,GACd5yB,KAAK6yB,QAAU,EACnB,CACA9hB,OAAAA,GACI/Q,KAAK4yB,OAAS,GACd5yB,KAAK6yB,QAAU,GACf7yB,KAAKovB,OAAS,GACdpvB,KAAK2V,SAAW,EACpB,CACA,UAAMtG,CAAK+B,GACP,MAAMhG,EAAYpL,KAAKkgB,WACvB9U,EAAUyK,OAAOlL,cACX3K,KAAKyzB,OAAOriB,GAClB,IAAK,MAAO,CAAE5E,KAAWpB,EAAUqK,QAC/BrK,EAAUyK,OAAOxB,WAAW7H,EAAQ4E,GAExC,IAAK,MAAMlJ,KAAKlI,KAAK6yB,QACjB3qB,EAAEmH,KAAK+B,EAEf,CACA+gB,MAAAA,CAAOuB,GACH,OAAO1zB,KAAK4yB,OAAOT,OAAOuB,EAC9B,CACA5a,IAAAA,CAAK4a,GACD,OAAO1zB,KAAK4yB,OAAO9Z,KAAK4a,EAC5B,CACAxb,eAAAA,CAAgB9Q,GACZpH,KAAKkzB,oBAAoBhb,gBAAgB9Q,EAC7C,CACAkN,IAAAA,GACI,MAAMlJ,EAAYpL,KAAKkgB,WAAYxS,EAAUtC,EAAU+B,cACvDnN,KAAK8uB,WAAa,EAClB9uB,KAAK6uB,WAAY,EACjB,IAAItS,GAAU,EACdvc,KAAK2V,SAAW3V,KAAKigB,QAAQxK,QAAQ4d,YAAYjoB,GAAW,GAC5DpL,KAAKkzB,oBAAoB5e,OACzB,IAAK,MAAO,CAAE9H,KAAWpB,EAAUqK,QAI/B,QAHuC/U,IAAnC8L,EAAOmnB,0BACPpX,EAAU/P,EAAOmnB,2BAEjBpX,EACA,MAGRvc,KAAKkzB,oBAAoB5e,OACzB,IAAK,MAAO,CAAE2Y,KAAkB7hB,EAAUwoB,eACtC3G,EAAc3Y,KAAKlJ,GAGvB,GADApL,KAAKszB,sBACA/W,EAAS,CACV,IAAK,MAAM2K,KAASxZ,EAAQU,UAAU2Y,OAAQ,CAC1C,MAAM8M,EAAenmB,EAAQU,UAAU2Y,OAAOG,GAC9C,IAAK,IAAI2J,EAAI7wB,KAAKghB,MAAO8S,EAAI,EAAGA,EAAID,EAAa7M,QAAQ5jB,OAASytB,EAAInjB,EAAQU,UAAU4Y,OAAO5jB,MAAOytB,IAAKiD,IACvG9zB,KAAKuzB,iBAAY7yB,EAAWmzB,EAAc3M,EAElD,CACA,IAAK,IAAI2J,EAAI7wB,KAAKghB,MAAO6P,EAAInjB,EAAQU,UAAU4Y,OAAO5jB,MAAOytB,IACzD7wB,KAAKuzB,aAEb,CACJ,CACA7d,IAAAA,CAAKqe,EAAIrc,EAAO+S,EAAiBvD,GAC7BlnB,KAAKg0B,SAAU,EACf,IAAK,IAAInD,EAAI,EAAGA,EAAIkD,EAAIlD,IACpB7wB,KAAKuzB,YAAY7b,GAAO3T,SAAU0mB,EAAiBvD,GAEvDlnB,KAAKg0B,SAAU,CACnB,CACA,YAAMC,GACFj0B,KAAK2K,QACL3K,KAAKsU,aACCtU,KAAKqP,KAAK,CAAEjM,MAAO,EAAG4H,OAAQ,GACxC,CACAiG,MAAAA,CAAO3F,EAAU4b,EAAO2F,GACpB7sB,KAAKk0B,SAASl0B,KAAK4yB,OAAOltB,QAAQ4F,QAAW5K,EAAWwmB,EAAO2F,EACnE,CACAqH,QAAAA,CAAStuB,GAAsC,IAA/BuuB,EAAQtuB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,EAAGqhB,EAAKrhB,UAAA1F,OAAA,EAAA0F,UAAA,QAAAnF,EAAEmsB,EAAQhnB,UAAA1F,OAAA,EAAA0F,UAAA,QAAAnF,EACzC,GAAIkF,EAAQ,GAAKA,EAAQ5F,KAAKghB,MAC1B,OAEJ,IAAIoT,EAAU,EACd,IAAK,IAAIvD,EAAIjrB,EAAOwuB,EAAUD,GAAYtD,EAAI7wB,KAAKghB,MAAO6P,IACtD7wB,KAAK+yB,gBAAgBlC,IAAK3J,EAAO2F,IAAauH,GAEtD,CACAhC,cAAAA,CAAe+B,EAAUjN,GACrBlnB,KAAKk0B,SAAS,EAAGC,EAAUjN,EAC/B,CACAvQ,UAAAA,GACI,MAAMjJ,EAAU1N,KAAKkgB,WAAW/S,cAAe4Z,EAASrZ,EAAQU,UAAU2Y,OAC1E,IAAK,MAAMG,KAASH,EAChB/mB,KAAK0xB,cAAc3K,EAAOG,GAAQ,EAAGA,GAEzClnB,KAAK0xB,cAAchkB,EAAQU,UAAWV,EAAQya,gBAAgBhoB,OAClE,CACA,YAAMszB,CAAOriB,GACT,MAAMhG,EAAYpL,KAAKkgB,WAAYmU,EAAoB,IAAIC,IAC3Dt0B,KAAKmzB,SAAW,IAAI1C,GAASe,GAAepmB,EAAUyK,OAAO7R,MAjN/C,GAkNd,IAAK,MAAO,CAAEipB,KAAkB7hB,EAAUwoB,eACtC3G,EAAcwG,SAElB,IAAK,MAAO,CAAEjnB,KAAWpB,EAAUqK,QAC/BjJ,EAAOinB,QAAUjnB,EAAOinB,OAAOriB,GAEnC,IAAK,MAAM9F,KAAYtL,KAAK4yB,OAAQ,CAChC,MAAMrc,EAAenL,EAAUyK,OAAOU,aAClCA,IAAiBjL,EAASkiB,qBAC1BliB,EAASvH,SAAS3D,GAAKmW,EAAatS,MACpCqH,EAASvH,SAASjE,GAAKyW,EAAarS,OACpCoH,EAASghB,gBAAgBlsB,GAAKmW,EAAatS,MAC3CqH,EAASghB,gBAAgBxsB,GAAKyW,EAAarS,QAE/CoH,EAASkiB,oBAAqB,QACxBxtB,KAAKkzB,oBAAoBlJ,MAAM1e,GACrC,IAAK,MAAO,CAAEkB,KAAWxM,KAAKkgB,WAAWzK,QAAS,CAC9C,GAAInK,EAASgG,UACT,MAEA9E,EAAO+nB,gBACP/nB,EAAO+nB,eAAejpB,EAAU8F,EAExC,CACA,IAAK,MAAM+d,KAASnvB,KAAKovB,OACrBD,EAAMtF,UAAUve,IAAa6jB,EAAM9gB,KAAK/C,EAAU8F,GAElD9F,EAASgG,UACT+iB,EAAkBlzB,IAAImK,GAG1BtL,KAAKmzB,SAASjC,OAAO,IAAIzB,GAAMnkB,EAAS/D,cAAe+D,GAC3D,CACA,GAAI+oB,EAAkBrwB,KAAM,CACxB,MAAMwwB,EAAetsB,IAAOmsB,EAAkBI,IAAIvsB,GAClDlI,KAAK4yB,OAAS5yB,KAAKmyB,OAAOqC,GAC1Bx0B,KAAK6yB,QAAU7yB,KAAK6yB,QAAQV,OAAOqC,GACnCx0B,KAAKwyB,KAAK9c,QAAQ2e,EACtB,OACMr0B,KAAKkzB,oBAAoBtJ,iBAAiBxY,GAChD,IAAK,MAAM9F,KAAYtL,KAAK4yB,OAAQ,CAChC,IAAK,MAAMrnB,KAAWvL,KAAK2V,SACvBpK,EAAQkoB,OAAOnoB,EAAU8F,GAExB9F,EAASgG,WAAchG,EAAS+F,gBAC3BrR,KAAKkzB,oBAAoBnJ,kBAAkBze,EAAU8F,EAEnE,CAEA,UADOhG,EAAUyK,OAAOU,aACpBvW,KAAK6uB,UAAW,CAChB,MAAM6F,EAAS10B,KAAK6yB,QACpB6B,EAAO/L,KAAK,CAAC9f,EAAGD,IAAMA,EAAE7E,SAAShE,EAAI8I,EAAE9E,SAAShE,GAAK8I,EAAE2hB,GAAK5hB,EAAE4hB,IAC9DxqB,KAAK8uB,WAAa4F,EAAOA,EAAOv0B,OAAS,GAAG4D,SAAShE,EACrDC,KAAK6uB,WAAY,CACrB,CACJ,EC9QG,MAAM8F,GACT/0B,WAAAA,CAAYwL,GACRpL,KAAKoL,UAAYA,EACjBpL,KAAK6T,WAAa,EAClB7T,KAAK40B,aAAe,CACxB,CACAtgB,IAAAA,GACI,MAAMlJ,EAAYpL,KAAKoL,UAAWsC,EAAUtC,EAAU+B,cACtDnN,KAAK6T,YAAcnG,EAAQsa,cAAgB/iB,IAAU,EAAIC,OAAO2vB,iBAChE70B,KAAK40B,aAAe,EACpB,MAAME,EAAQ90B,KAAK6T,WACnB,GAAIzI,EAAUyK,OAAOpI,QAAS,CAC1B,MAAMA,EAAUrC,EAAUyK,OAAOpI,QACjCrC,EAAUyK,OAAO7R,KAAKC,MAAQwJ,EAAQwI,YAAc6e,EACpD1pB,EAAUyK,OAAO7R,KAAKE,OAASuJ,EAAQuI,aAAe8e,CAC1D,CACA,MAAM1mB,EAAYV,EAAQU,UAAWkd,EAAcld,EAAUC,KAC7DrO,KAAK+0B,gBAAkB5xB,EAAcmoB,EAAY5H,QAAQ/f,UAAYmxB,EACrE90B,KAAKuiB,SAAWpf,EAAcmoB,EAAYxH,QAAQvB,UAAYuS,EAC9D90B,KAAKg1B,mBAAqB7xB,EAAciL,EAAUpK,KAAK0G,UAAUuW,OAAS6T,CAC9E,CACA7G,YAAAA,CAAa3iB,GACT,MAAMoC,EAAUpC,EAASoC,QAASonB,EAAQ90B,KAAK6T,WAAYyX,EAAc5d,EAAQW,KAAM4mB,EAAe3J,EAAY3nB,SAAUuxB,EAAQ5pB,EAASsI,OAC7IshB,EAAMH,gBAAkB5xB,EAAcmoB,EAAY5H,QAAQ/f,UAAYmxB,EACtEI,EAAMC,UAAYhyB,EAAcmoB,EAAYzH,OAASiR,EACrDI,EAAME,UAAYjyB,EAAcmoB,EAAYrK,OAAS6T,EACrDI,EAAMF,mBAAqB7xB,EAAcuK,EAAQ1J,KAAK0G,UAAUuW,OAAS6T,EACzE,MAAMvH,EAAc2H,EAAM3H,YAC1BA,EAAYrL,gBAAyCxhB,IAA5Bu0B,EAAa/S,WAA2B+S,EAAa/S,WAAa4S,OAAQp0B,EACnG6sB,EAAYpL,cAAqCzhB,IAA1Bu0B,EAAa9S,SAAyB8S,EAAa9S,SAAW2S,OAAQp0B,EAC7Fw0B,EAAM3S,SAAWpf,EAAcmoB,EAAYxH,QAAQvB,UAAYuS,CACnE,ECxBJ,SAASO,GAAWjqB,GAChB,OAAOA,IAAcA,EAAUkG,SACnC,CAOA,SAASgkB,GAAqBtV,EAAQ5U,GAClC,MAAMsC,EAAU,IAAIga,GAAQ1H,EAAQ5U,GAAW,QAAAlF,EAAAL,UAAA1F,OADCmnB,EAAgB,IAAAlhB,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAhBihB,EAAgBjhB,EAAA,GAAAR,UAAAQ,GAGhE,OADA+gB,GAAY1Z,KAAY4Z,GACjB5Z,CACX,CACA,MAA2C6nB,GAAuB,CAC9DC,SAAWttB,GAAMA,EAAEsK,SACnB8B,KAAMA,OAENmf,OAAQA,OAERzJ,MAAOA,QAGJ,MAAMyL,GACT71B,WAAAA,CAAYogB,EAAQwK,EAAIjD,GACpBvnB,KAAKwqB,GAAKA,EACVxqB,KAAK01B,qBAAwB1Z,IACzB,GAAKqZ,GAAWr1B,OAAUA,KAAKmN,cAAcib,uBAG7C,IAAK,MAAMuN,KAAS3Z,EACZ2Z,EAAM1Z,SAAWjc,KAAKyX,cAAchK,UAGvCkoB,EAAMC,eAAiB51B,KAAKyZ,KAAOzZ,KAAKuZ,UAGjDvZ,KAAK61B,WAAa3nB,UACd,IACI,IAAKlO,KAAKqf,aACiB3e,IAAvBV,KAAK81B,eACLC,EAAY/1B,KAAK81B,cAAgB,IAAO91B,KAAKkoB,SAE7C,YADAloB,KAAKqP,MAAK,GAGdrP,KAAK81B,gBAAkBC,EACvB,MAAM3kB,EA3CtB,SAAmBhO,GACf,MAAO,CACHA,QACA4H,OAHuCnF,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GAGtB,IAHSA,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,IAGK,GAAKzC,EAAS,IAExD,CAsC8B4yB,CAAUD,EAAY/1B,KAAK81B,cAAe91B,KAAKkoB,SAAUloB,KAAKqf,QAG5E,GAFArf,KAAKi2B,YAAY7kB,EAAMhO,OACvBpD,KAAK81B,cAAgBC,EACjB3kB,EAAMhO,MAAQ,IAEd,YADApD,KAAKqP,MAAK,GAId,SADMrP,KAAKoO,UAAUiB,KAAK+B,IACrBpR,KAAKk2B,QAEN,YADAl2B,KAAK+Q,UAGL/Q,KAAKwZ,sBACLxZ,KAAKqP,MAAK,EAElB,CACA,MAAOyF,GACH9P,IAAYN,MAAM,GAAGhF,sBAAiCoV,EAC1D,GAEJ9U,KAAKigB,QAAUD,EACfhgB,KAAKkoB,SAAW,IAChBloB,KAAKqf,QAAS,EACdrf,KAAKm2B,OAAS,EACdn2B,KAAKo2B,UAAY,EACjBp2B,KAAKq2B,UAAY,EACjBr2B,KAAKs2B,aAAc,EACnBt2B,KAAKsW,SAAU,EACftW,KAAKsR,WAAY,EACjBtR,KAAKu2B,SAAU,EACfv2B,KAAK81B,cAAgB,EACrB91B,KAAKsoB,QAAU,IACftoB,KAAKsZ,YAAa,EAClBtZ,KAAKw2B,eAAiBjP,EACtBvnB,KAAKy2B,sBAAwBlP,EAC7BvnB,KAAK4T,OAAS,IAAI+gB,GAAO30B,MACzBA,KAAK6V,OAAS,IAAI1K,GAAOnL,MACzBA,KAAKoO,UAAY,IAAIqjB,GAAUzxB,KAAKigB,QAASjgB,MAC7CA,KAAK4zB,eAAiB,IAAInxB,IAC1BzC,KAAKyX,cAAgB,CACjBC,MAAO,CACHyE,UAAU,EACVG,QAAQ,IAGhBtc,KAAKyV,QAAU,IAAIhT,IACnBzC,KAAK0T,QAAU,IAAIjR,IACnBzC,KAAK02B,SAAWpB,GAAqBt1B,KAAKigB,QAASjgB,MACnDA,KAAKmN,cAAgBmoB,GAAqBt1B,KAAKigB,QAASjgB,MACxDA,KAAK22B,gBAAkB,IAAItf,GAAerX,MACN,qBAAzB42B,sBAAwCA,uBAC/C52B,KAAK62B,sBAAwB,IAAID,qBAAsB5a,GAAYhc,KAAK01B,qBAAqB1Z,KAEjGhc,KAAKigB,QAAQ6S,cAAc,iBAAkB,CAAE1nB,UAAWpL,MAC9D,CACA,WAAI0N,GACA,OAAO1N,KAAK02B,QAChB,CACA,iBAAInP,GACA,OAAOvnB,KAAKw2B,cAChB,CACAM,eAAAA,CAAgBjwB,GACZ,IAAKwuB,GAAWr1B,MACZ,OAEJ,MAAMgf,EAAKhf,KAAKyX,cAAchK,QAC9B,IAAKuR,EACD,OAEJ,MAAM+X,EAAsBA,CAACjiB,EAAGzC,EAAKzG,KACjC,IAAKypB,GAAWr1B,MACZ,OAEJ,MAAMmW,EAAUnW,KAAK4T,OAAOC,WAAYmjB,EAAY,CAChD52B,EAAGiS,EAAIjS,EAAI+V,EACXrW,EAAGuS,EAAIvS,EAAIqW,GACZ/H,EAAYpO,KAAKoO,UAAU+kB,SAAS7B,YAAY0F,EAAWprB,EAASuK,GACvEtP,EAASiO,EAAG1G,IAsDhB,IAAI6oB,GAAU,EAAOC,GAAa,EAClClY,EAAGhQ,iBAAiB,QArDE8F,IAClB,IAAKugB,GAAWr1B,MACZ,OAEJ,MAAM4c,EAAa9H,EAAGzC,EAAM,CACxBjS,EAAGwc,EAAWS,SAAWT,EAAWG,QACpCjd,EAAG8c,EAAWU,SAAWV,EAAWI,SAExC+Z,EAAoBjiB,EAAGzC,EAAK,KA8ChC2M,EAAGhQ,iBAAiB,aA5CMmoB,KACjB9B,GAAWr1B,QAGhBi3B,GAAU,EACVC,GAAa,KAwCjBlY,EAAGhQ,iBAAiB,YAtCKooB,KAChB/B,GAAWr1B,QAGhBk3B,GAAa,KAmCjBlY,EAAGhQ,iBAAiB,WAjCK8F,IACrB,GAAKugB,GAAWr1B,MAAhB,CAGA,GAAIi3B,IAAYC,EAAY,CACxB,MAAM3Z,EAAazI,EACnB,IAAI0I,EAAYD,EAAWE,QAAQF,EAAWE,QAAQtd,OAAS,GAC/D,IAAKqd,IACDA,EAAYD,EAAWK,eAAeL,EAAWK,eAAezd,OAAS,IACpEqd,GACD,OAGR,MAAM/P,EAAUzN,KAAK6V,OAAOpI,QAAS2P,EAAa3P,EAAUA,EAAQqP,6BAA0Bpc,EAAW2R,EAAM,CAC3GjS,EAAGod,EAAUT,SAAWK,EAAaA,EAAW7M,KAAO,GACvDzQ,EAAG0d,EAAUR,SAAWI,EAAaA,EAAW9M,IAAM,IAE1DymB,EAAoBjiB,EAAGzC,EAAKhS,KAAKyC,IAAI0a,EAAU6Z,QAAS7Z,EAAU8Z,SACtE,CACAL,GAAU,EACVC,GAAa,CAjBb,IA+BJlY,EAAGhQ,iBAAiB,cAZOuoB,KAClBlC,GAAWr1B,QAGhBi3B,GAAU,EACVC,GAAa,IAQrB,CACAjB,WAAAA,CAAY7yB,GACRpD,KAAKq2B,WAAajzB,CACtB,CACA4qB,OAAAA,CAAQxnB,EAAK0c,GAA6B,IAAlB2J,EAAQhnB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GAC5B,SAAKwvB,GAAWr1B,QAAW6sB,GAAY7sB,KAAK4zB,eAAea,IAAIjuB,MAG/DxG,KAAK4zB,eAAe5rB,IAAIxB,EAAK0c,GAAaqS,KACnC,EACX,CACAW,KAAAA,GACI,OAAQl2B,KAAKo2B,WAAap2B,KAAKq2B,WAAar2B,KAAKo2B,SACrD,CACArlB,OAAAA,GACI,IAAKskB,GAAWr1B,MACZ,OAEJA,KAAKgR,OACLhR,KAAKoO,UAAU2C,UACf/Q,KAAK6V,OAAO9E,UACZ,IAAK,MAAO,CAAE0C,KAAWzT,KAAK0T,QAC1BD,EAAO1C,SAAW0C,EAAO1C,QAAQ/Q,MAErC,IAAK,MAAMwG,KAAOxG,KAAK0T,QAAQ8jB,OAC3Bx3B,KAAK0T,QAAQqK,OAAOvX,GAExBxG,KAAKigB,QAAQxK,QAAQ1E,QAAQ/Q,MAC7BA,KAAKsR,WAAY,EACjB,MAAMmmB,EAAUz3B,KAAKigB,QAAQyX,MAAOC,EAAMF,EAAQG,UAAWxvB,GAAMA,IAAMpI,MACrE23B,GAAO,GACPF,EAAQxE,OAAO0E,EAAK,GAExB33B,KAAKigB,QAAQ6S,cAAc,qBAAsB,CAAE1nB,UAAWpL,MAClE,CACAqP,IAAAA,CAAK+P,GACD,IAAKiW,GAAWr1B,MACZ,OAEJ,IAAI63B,EAAczY,EAClBpf,KAAK83B,oBAAsBC,sBAAsB7pB,UACzC2pB,IACA73B,KAAK81B,mBAAgBp1B,EACrBm3B,GAAc,SAEZ73B,KAAK61B,WAAWE,IAE9B,CACA,YAAMiC,CAAOpjB,GAAoB,IAAdlH,EAAO7H,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B,IAAK,MAAO,CAAE2G,KAAWxM,KAAKyV,QAAS,CACnC,IAAKjJ,EAAOwrB,OACR,SAEJ,MAAM5uB,QAAYoD,EAAOwrB,OAAOpjB,EAAMlH,GACtC,GAAKtE,EAAI6uB,UAGT,OAAO7uB,EAAI8uB,IACf,CACAlzB,IAAYN,MAAM,GAAGhF,+BAAyCkV,cAClE,CACA4E,kBAAAA,GACI,OAAQxZ,KAAKu2B,UAAYv2B,KAAKsZ,YAAc+b,GAAWr1B,KAC3D,CACAkY,eAAAA,CAAgB9Q,GACZ,GAAKiuB,GAAWr1B,MAAhB,CAGAA,KAAKoO,UAAU8J,gBAAgB9Q,GAC/B,IAAK,MAAO,CAAEoF,KAAWxM,KAAKyV,QAC1BjJ,EAAO0L,iBAAmB1L,EAAO0L,gBAAgB9Q,EAHrD,CAKJ,CACA,UAAMkN,GACF,IAAK+gB,GAAWr1B,MACZ,OAEJ,MAAMm4B,EAASn4B,KAAKigB,QAAQxK,QAAQ2iB,qBACpC,IAAK,MAAMxjB,KAAQujB,EAAQ,CACvB,MAAM1kB,EAASzT,KAAKigB,QAAQxK,QAAQuZ,eAAepa,GAC/CnB,GACAzT,KAAK0T,QAAQ1L,IAAI4M,EAAMnB,EAE/B,CACAzT,KAAK02B,SAAWpB,GAAqBt1B,KAAKigB,QAASjgB,KAAMA,KAAKy2B,sBAAuBz2B,KAAKunB,eAC1FvnB,KAAKmN,cAAgBmoB,GAAqBt1B,KAAKigB,QAASjgB,KAAMA,KAAK02B,UACnE,MAAM2B,EAAmBr4B,KAAKigB,QAAQxK,QAAQ6iB,oBAAoBt4B,MAClE,IAAK,MAAOwqB,EAAIhe,KAAW6rB,EACvBr4B,KAAKyV,QAAQzN,IAAIwiB,EAAIhe,GAEzBxM,KAAK4T,OAAOU,aACNtU,KAAK6V,OAAOvB,OAClBtU,KAAK0W,sBACL1W,KAAK6V,OAAO5F,iBACZjQ,KAAK6V,OAAOnJ,SACZ1M,KAAKsoB,QAAUtoB,KAAKmN,cAAcmb,QAClCtoB,KAAKo2B,UAAyD,IAA7CjzB,EAAcnD,KAAKmN,cAAc8a,UAClDjoB,KAAKm2B,OAAmD,IAA1ChzB,EAAcnD,KAAKmN,cAAc0M,OAC/C7Z,KAAKq2B,UAAY,EACjBr2B,KAAKkoB,SAAWloB,KAAKmN,cAAc+a,SAAW,EAAIloB,KAAKmN,cAAc+a,SAAW,IAChFloB,KAAKqf,OAASrf,KAAKmN,cAAckS,OACjC,IAAK,MAAO,CAAE5L,KAAWzT,KAAK0T,QAC1BD,EAAOa,YAAeb,EAAOa,KAAKtU,MAEtC,IAAK,MAAO,CAAEwM,KAAWxM,KAAKyV,QAC1BjJ,EAAO8H,YAAe9H,EAAO8H,OAEjCtU,KAAKigB,QAAQ6S,cAAc,gBAAiB,CAAE1nB,UAAWpL,OACzDA,KAAKoO,UAAUkG,OACftU,KAAKoO,UAAUuI,aACf,IAAK,MAAO,CAAEnK,KAAWxM,KAAKyV,QAC1BjJ,EAAO+rB,gBAAkB/rB,EAAO+rB,iBAEpCv4B,KAAKigB,QAAQ6S,cAAc,iBAAkB,CAAE1nB,UAAWpL,MAC9D,CACA,eAAMkZ,CAAUH,GACPsc,GAAWr1B,QAGhBA,KAAKw4B,cAAgBzf,QACf/Y,KAAK4W,UACf,CACA2C,KAAAA,GACI,GAAK8b,GAAWr1B,aAGiBU,IAA7BV,KAAK83B,sBACLW,qBAAqBz4B,KAAK83B,4BACnB93B,KAAK83B,sBAEZ93B,KAAKu2B,SAAT,CAGA,IAAK,MAAO,CAAE/pB,KAAWxM,KAAKyV,QAC1BjJ,EAAO+M,OAAS/M,EAAO+M,QAEtBvZ,KAAKsZ,aACNtZ,KAAKu2B,SAAU,GAEnBv2B,KAAKigB,QAAQ6S,cAAc,kBAAmB,CAAE1nB,UAAWpL,MAP3D,CAQJ,CACAyZ,IAAAA,CAAK2F,GACD,IAAKiW,GAAWr1B,MACZ,OAEJ,MAAM04B,EAAc14B,KAAKu2B,SAAWnX,EACpC,IAAIpf,KAAKs2B,aAAgBt2B,KAAKmN,cAAc4a,SAA5C,CAOA,GAHI/nB,KAAKu2B,UACLv2B,KAAKu2B,SAAU,GAEfmC,EACA,IAAK,MAAO,CAAElsB,KAAWxM,KAAKyV,QACtBjJ,EAAOiN,MACPjN,EAAOiN,OAInBzZ,KAAKigB,QAAQ6S,cAAc,gBAAiB,CAAE1nB,UAAWpL,OACzDA,KAAKqP,KAAKqpB,IAAe,EAZzB,MAFI14B,KAAKs2B,aAAc,CAe3B,CACA,aAAM1f,GACF,GAAKye,GAAWr1B,MAIhB,OADAA,KAAKgR,OACEhR,KAAK24B,OAChB,CACA,WAAM3O,GACF,GAAKqL,GAAWr1B,MAMhB,OAHAA,KAAKy2B,2BAAwB/1B,EAC7BV,KAAK02B,SAAWpB,GAAqBt1B,KAAKigB,QAASjgB,MACnDA,KAAKmN,cAAgBmoB,GAAqBt1B,KAAKigB,QAASjgB,KAAMA,KAAK02B,UAC5D12B,KAAK4W,SAChB,CACAgiB,QAAAA,CAASC,EAAkBvkB,EAAMmf,GACxB4B,GAAWr1B,OAGhBA,KAAK84B,QAAQD,EAAkBvkB,EAAMmf,EACzC,CACAqF,OAAAA,CAAQC,EAAiBzkB,EAAMmf,GAC3B,IAAKsF,IAAoB1D,GAAWr1B,MAChC,OAEJ,MAAMitB,EAAgB,IAAKsI,IAC3B,GAAI5tB,EAAWoxB,GACX9L,EAAcuI,SAAWuD,EACrBzkB,IACA2Y,EAAc3Y,KAAOA,GAErBmf,IACAxG,EAAcwG,OAASA,OAG1B,CACD,MAAMuF,EAAe/L,EACrBA,EAAcuI,SAAWuD,EAAgBvD,UAAYwD,EAAaxD,SAClEvI,EAAc3Y,KAAOykB,EAAgBzkB,MAAQ0kB,EAAa1kB,KAC1D2Y,EAAcwG,OAASsF,EAAgBtF,QAAUuF,EAAavF,MAClE,CACAzzB,KAAKguB,QAtXmB,UAsXcf,GAAe,EACzD,CACA,WAAM0L,GACGtD,GAAWr1B,QAASA,KAAKsW,gBAGxBtW,KAAKsU,OACXtU,KAAKsW,SAAU,QACT,IAAI5H,QAASC,IACf3O,KAAKi5B,cAAgB9gB,WAAWjK,UAC5BlO,KAAK22B,gBAAgBtY,eACjBre,KAAKyX,cAAchK,mBAAmByrB,aAAel5B,KAAK62B,uBAC1D72B,KAAK62B,sBAAsB3mB,QAAQlQ,KAAKyX,cAAchK,SAE1D,IAAK,MAAO,CAAEjB,KAAWxM,KAAKyV,QAC1BjJ,EAAOmsB,aAAgBnsB,EAAOmsB,QAElC34B,KAAKigB,QAAQ6S,cAAc,mBAAoB,CAAE1nB,UAAWpL,OAC5DA,KAAKyZ,OACL9K,KACD3O,KAAKm2B,UAEhB,CACAnlB,IAAAA,GACI,GAAKqkB,GAAWr1B,OAAUA,KAAKsW,QAA/B,CAGItW,KAAKi5B,gBACLrf,aAAa5Z,KAAKi5B,sBACXj5B,KAAKi5B,eAEhBj5B,KAAKs2B,aAAc,EACnBt2B,KAAKsW,SAAU,EACftW,KAAK22B,gBAAgBrY,kBACrBte,KAAKuZ,QACLvZ,KAAKoO,UAAUzD,QACf3K,KAAK6V,OAAO7E,OACRhR,KAAKyX,cAAchK,mBAAmByrB,aAAel5B,KAAK62B,uBAC1D72B,KAAK62B,sBAAsB9a,UAAU/b,KAAKyX,cAAchK,SAE5D,IAAK,MAAO,CAAEjB,KAAWxM,KAAKyV,QAC1BjJ,EAAOwE,MAAQxE,EAAOwE,OAE1B,IAAK,MAAMxK,KAAOxG,KAAKyV,QAAQ+hB,OAC3Bx3B,KAAKyV,QAAQsI,OAAOvX,GAExBxG,KAAKw2B,eAAiBx2B,KAAK02B,SAC3B12B,KAAKigB,QAAQ6S,cAAc,mBAAoB,CAAE1nB,UAAWpL,MArB5D,CAsBJ,CACA0W,mBAAAA,GACI1W,KAAKmN,cAAckb,WAAa,GAChC,MAAM8Q,EAAcn5B,KAAKmN,cAAc2b,cAAc9oB,KAAK6V,OAAO7R,KAAKC,MAAOjE,KAAK4T,OAAOC,WAAY7T,KAAK02B,UAE1G,OADA12B,KAAKmN,cAAcgc,SAASnpB,KAAKw4B,eAC7Bx4B,KAAKo5B,qBAAuBD,IAGhCn5B,KAAKo5B,mBAAqBD,GACnB,EACX,ECvcG,MAAME,GACTz5B,WAAAA,GACII,KAAKs5B,WAAa,IAAI72B,GAC1B,CACAuM,gBAAAA,CAAiB4F,EAAM2kB,GACnBv5B,KAAKoX,oBAAoBxC,EAAM2kB,GAC/B,IAAIC,EAAMx5B,KAAKs5B,WAAW3lB,IAAIiB,GACzB4kB,IACDA,EAAM,GACNx5B,KAAKs5B,WAAWtxB,IAAI4M,EAAM4kB,IAE9BA,EAAI9jB,KAAK6jB,EACb,CACAzG,aAAAA,CAAcle,EAAM6kB,GAChB,MAAMC,EAAY15B,KAAKs5B,WAAW3lB,IAAIiB,GACtC8kB,GAAaA,EAAUC,QAAS5iB,GAAYA,EAAQ0iB,GACxD,CACAG,gBAAAA,CAAiBhlB,GACb,QAAS5U,KAAKs5B,WAAW3lB,IAAIiB,EACjC,CACAilB,uBAAAA,CAAwBjlB,GACfA,EAID5U,KAAKs5B,WAAWvb,OAAOnJ,GAHvB5U,KAAKs5B,WAAa,IAAI72B,GAK9B,CACA2U,mBAAAA,CAAoBxC,EAAM2kB,GACtB,MAAMC,EAAMx5B,KAAKs5B,WAAW3lB,IAAIiB,GAChC,IAAK4kB,EACD,OAEJ,MAAMr5B,EAASq5B,EAAIr5B,OAAQw3B,EAAM6B,EAAI9zB,QAAQ6zB,GACzC5B,EAAM,IAGK,IAAXx3B,EACAH,KAAKs5B,WAAWvb,OAAOnJ,GAGvB4kB,EAAIvG,OAAO0E,EAAK,GAExB,EC1CJ,SAASmC,GAAwB1uB,EAAW1E,EAAKqzB,GAA6B,IAAf3a,EAAKvZ,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GAC5DuD,EAAM1C,EAAIiN,IAAIvI,GAKlB,OAJKhC,IAAOgW,IACRhW,EAAM,IAAI2wB,EAAaC,UAAUtzB,IAAK0B,GAAMA,EAAEgD,IAC9C1E,EAAIsB,IAAIoD,EAAWhC,IAEhBA,CACX,CACO,MAAM6wB,GACTr6B,WAAAA,CAAYogB,GACRhgB,KAAKigB,QAAUD,EACfhgB,KAAKyV,QAAU,GACfzV,KAAKk6B,cAAgB,CACjB/Z,YAAa,IAAI1d,IACjB2sB,OAAQ,IAAI3sB,IACZkT,SAAU,IAAIlT,KAElBzC,KAAKmgB,YAAc,IAAI1d,IACvBzC,KAAKovB,OAAS,IAAI3sB,IAClBzC,KAAK2V,SAAW,IAAIlT,IACpBzC,KAAKm6B,QAAU,IAAI13B,IACnBzC,KAAK0T,QAAU,IAAIjR,IACnBzC,KAAK4zB,eAAiB,IAAInxB,GAC9B,CACA23B,aAAAA,CAAcrhB,EAAMshB,GAChBr6B,KAAKk6B,cAAc/Z,YAAYnY,IAAI+Q,EAAMshB,EAC7C,CACAC,gBAAAA,CAAiBvhB,EAAMwhB,GACnBv6B,KAAKk6B,cAAc9K,OAAOpnB,IAAI+Q,EAAMwhB,EACxC,CACAC,kBAAAA,CAAmBzhB,EAAM0hB,GACrBz6B,KAAKk6B,cAAcvkB,SAAS3N,IAAI+Q,EAAM0hB,EAC1C,CACAC,gBAAAA,CAAiB9lB,EAAMqY,IAClBjtB,KAAK+tB,iBAAiBnZ,IAAS5U,KAAK4zB,eAAe5rB,IAAI4M,EAAMqY,EAClE,CACA0N,SAAAA,CAAUnuB,IACLxM,KAAK46B,UAAUpuB,EAAOge,KAAOxqB,KAAKyV,QAAQC,KAAKlJ,EACpD,CACAquB,SAAAA,CAAUC,EAAWptB,IAAiB7H,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,KACpB7F,KAAK8nB,UAAUgT,KAAe96B,KAAKm6B,QAAQnyB,IAAI8yB,EAAWptB,EAC5E,CACAqtB,cAAAA,CAAeC,EAAOvnB,GAClB9M,EAA0Bq0B,EAAQpmB,KAC7B5U,KAAKgvB,eAAepa,IAAS5U,KAAK0T,QAAQ1L,IAAI4M,EAAMnB,IAE7D,CACA1C,OAAAA,CAAQ3F,GACJpL,KAAK2V,SAASoI,OAAO3S,GACrBpL,KAAKovB,OAAOrR,OAAO3S,GACnBpL,KAAKmgB,YAAYpC,OAAO3S,EAC5B,CACAktB,mBAAAA,CAAoBltB,GAChB,MAAMhC,EAAM,IAAI3G,IAChB,IAAK,MAAM+J,KAAUxM,KAAKyV,QACtBjJ,EAAOyuB,YAAY7vB,EAAU+B,gBAAkB/D,EAAIpB,IAAIwE,EAAOge,GAAIhe,EAAOouB,UAAUxvB,IAEvF,OAAOhC,CACX,CACAqgB,cAAAA,CAAere,GAA0B,IAAfgU,EAAKvZ,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GAC3B,OAAOi0B,GAAwB1uB,EAAWpL,KAAKmgB,YAAangB,KAAKk6B,cAAc/Z,YAAaf,EAChG,CACAgU,SAAAA,CAAUhoB,GAA0B,IAAfgU,EAAKvZ,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GACtB,OAAOi0B,GAAwB1uB,EAAWpL,KAAKovB,OAAQpvB,KAAKk6B,cAAc9K,OAAQhQ,EACtF,CACA2O,gBAAAA,CAAiBnZ,GACb,OAAO5U,KAAK4zB,eAAejgB,IAAIiB,EACnC,CACAgmB,SAAAA,CAAUpuB,GACN,OAAOxM,KAAKyV,QAAQqD,KAAM1Q,GAAMA,EAAEoiB,KAAOhe,EAC7C,CACAsb,SAAAA,CAAUD,GACN,OAAO7nB,KAAKm6B,QAAQxmB,IAAIkU,EAC5B,CACAmH,cAAAA,CAAepa,GACX,OAAO5U,KAAK0T,QAAQC,IAAIiB,EAC5B,CACAwjB,kBAAAA,GACI,OAAOp4B,KAAK0T,QAAQ8jB,MACxB,CACAnE,WAAAA,CAAYjoB,GAA0B,IAAfgU,EAAKvZ,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GACxB,OAAOi0B,GAAwB1uB,EAAWpL,KAAK2V,SAAU3V,KAAKk6B,cAAcvkB,SAAUyJ,EAC1F,CACAgI,WAAAA,CAAY1Z,EAAS6Z,GACjB,IAAK,MAAM/a,KAAUxM,KAAKyV,QACtBjJ,EAAO4a,YAAY1Z,EAAS6Z,EAEpC,CACAF,oBAAAA,CAAqBjc,EAAWsC,GAC5B,MAAMiI,EAAW3V,KAAK2V,SAAShC,IAAIvI,GACnC,GAAKuK,EAAL,CAEC,QAAAzP,EAAAL,UAAA1F,OAJuConB,EAAa,IAAAnhB,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAbkhB,EAAalhB,EAAA,GAAAR,UAAAQ,GAKrD,IAAK,MAAMkF,KAAWoK,EAClBpK,EAAQ6b,aAAe7b,EAAQ6b,YAAY1Z,KAAY6Z,EAF3D,CAIJ,ECzEG,MAAM2T,GACTt7B,WAAAA,GACII,KAAKm7B,SAAW,IAAI14B,IACpBzC,KAAKo7B,UAAY,GACjBp7B,KAAKq7B,iBAAmB,IAAIhC,GAC5Br5B,KAAKs7B,cAAe,EACpBt7B,KAAKyV,QAAU,IAAIwkB,GAAQj6B,KAC/B,CACA,WAAIu7B,GACA,MAAMnyB,EAAM,CAAC,EACb,IAAK,MAAO2P,EAAMyiB,KAAWx7B,KAAKm7B,SAC9B/xB,EAAI2P,GAAQyiB,EAEhB,OAAOpyB,CACX,CACA,WAAIqyB,GACA,MAAO,QACX,CACAC,SAAAA,CAAUC,EAAcH,GAChB9zB,EAASi0B,GACLH,IACAA,EAAOziB,KAAO4iB,EACd37B,KAAKm7B,SAASnzB,IAAI2zB,EAAcH,IAIpCx7B,KAAKm7B,SAASnzB,IAAI2zB,EAAa5iB,MAAQ,UAAW4iB,EAE1D,CACA3sB,gBAAAA,CAAiB4F,EAAM2kB,GACnBv5B,KAAKq7B,iBAAiBrsB,iBAAiB4F,EAAM2kB,EACjD,CACA,mBAAMa,CAAcrhB,EAAM6iB,GAAuC,IAAhBhlB,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GACpD7F,KAAKyV,QAAQ2kB,cAAcrhB,EAAM6iB,SAC3B57B,KAAK4W,QAAQA,EACvB,CACA,cAAMilB,CAAS9iB,EAAM+iB,GAAkC,IAAhBllB,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAC1C7F,KAAKyV,QAAQ6kB,iBAAiBvhB,EAAM+iB,SAC9B97B,KAAK4W,QAAQA,EACvB,CACA,wBAAM4jB,CAAmBzhB,EAAMgjB,GAAoC,IAAhBnlB,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GACtD7F,KAAKyV,QAAQ+kB,mBAAmBzhB,EAAMgjB,SAChC/7B,KAAK4W,QAAQA,EACvB,CACA,sBAAM8jB,CAAiB3hB,EAAMmK,GAA2B,IAAhBtM,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAC3C7F,KAAKyV,QAAQilB,iBAAiB3hB,EAAMmK,SAC9BljB,KAAK4W,QAAQA,EACvB,CACA,eAAM+jB,CAAUnuB,GAAwB,IAAhBoK,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAC3B7F,KAAKyV,QAAQklB,UAAUnuB,SACjBxM,KAAK4W,QAAQA,EACvB,CACA,eAAMikB,CAAUhT,EAAQna,GAA2C,IAAlCmf,EAAQhnB,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,IAAAA,UAAA,GAAU+Q,IAAO/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GACtD7F,KAAKyV,QAAQolB,UAAUhT,EAAQna,EAASmf,SAClC7sB,KAAK4W,QAAQA,EACvB,CACA,cAAMolB,CAASxoB,EAAOC,EAAQwoB,EAAeC,EAAsBC,GAAkC,IAC7FC,EACuBC,EAAUC,EAAiBC,EAAlDC,IAFoF32B,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,GAGpF2B,EAAUy0B,IACVO,EAAcP,EACdI,OAAW37B,GAGX27B,EAAWJ,EAEXz0B,EAAU00B,IACVM,EAAcN,EACdI,OAAkB57B,GAGlB47B,EAAkBJ,EAElB10B,EAAU20B,IACVK,EAAcL,EACdI,OAAc77B,GAGd67B,EAAcJ,EAGdC,EADAz0B,EAAW8L,GACI,CACXQ,YAAaqoB,EACbvrB,QAASwrB,EACTltB,KAAMoE,EACNa,KAAM+nB,GAIK5oB,EAEnBzT,KAAKyV,QAAQslB,eAAevnB,EAAO4oB,SAC7Bp8B,KAAK4W,QAAQ4lB,EACvB,CACA1J,aAAAA,CAAcle,EAAM6kB,GAChBz5B,KAAKq7B,iBAAiBvI,cAAcle,EAAM6kB,EAC9C,CACA/B,GAAAA,GACI,OAAO13B,KAAKo7B,SAChB,CACAqB,OAAAA,CAAQ72B,GACJ,MAAM8xB,EAAM13B,KAAK03B,MAAO5wB,EAAO4wB,EAAI9xB,GACnC,GAAKkB,IAAQA,EAAKwK,UAIlB,OAAOxK,EAHH4wB,EAAIzE,OAAOrtB,EAAO,EAI1B,CACA0O,IAAAA,GACQtU,KAAKs7B,eAGTt7B,KAAKs7B,cAAe,EACxB,CACA,UAAM9c,CAAKke,EAAwBhvB,GAC/B,OAAO1N,KAAK28B,cAAcD,EAAwBhvB,EACtD,CACA,mBAAMivB,CAAcD,EAAwBE,EAAgBh3B,GACxD,IAAIi3B,EAoBJ,OA7IR,SAAkBj2B,GACd,UAJmBi2B,EAIGj2B,GAHP4jB,KAAOqS,EAAOpvB,UAAYovB,EAAOC,MAAQD,EAAOnvB,SADnE,IAAuBmvB,CAKvB,CAwHaE,CAASL,IACVG,EAAS,CAAC,EACNn1B,EAASg1B,GACTG,EAAOrS,GAAKkS,EAGZG,EAAOnvB,QAAUgvB,EAEjBl8B,EAASo8B,GACTC,EAAOj3B,MAAQg3B,EAGfC,EAAOnvB,QAAUkvB,GAAkBC,EAAOnvB,QAE9CmvB,EAAOj3B,MAAQA,GAASi3B,EAAOj3B,OAG/Bi3B,EAASH,EAEN18B,KAAKg9B,YAAYH,EAC5B,CACA,cAAMI,CAASC,EAAOC,EAAgBv3B,GAClC,IAAIk3B,EAAKtS,EAQT,OAPIhqB,EAAS28B,SAAsCz8B,IAAnBy8B,EAC5BL,EAAMI,GAGN1S,EAAK0S,EACLJ,EAAMK,GAEHn9B,KAAKg9B,YAAY,CAAExS,GAAIA,EAAIsS,MAAKl3B,SAC3C,CACA,aAAMgR,MAAe/Q,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,KAAAA,UAAA,KAIjB7F,KAAK03B,MAAMiC,QAASvxB,GAAMA,EAAEwO,UAChC,CACAQ,mBAAAA,CAAoBxC,EAAM2kB,GACtBv5B,KAAKq7B,iBAAiBjkB,oBAAoBxC,EAAM2kB,EACpD,CACA,SAAMvxB,CAAIwiB,EAAI/c,EAASC,EAAS9H,GAC5B,MAAMi3B,EAAS,CAAEj3B,SAmBjB,OAlBI8B,EAAS8iB,GACTqS,EAAOrS,GAAKA,EAGZqS,EAAOpvB,QAAU+c,EAEjB/c,aAAmByrB,YACnB2D,EAAOpvB,QAAUA,EAGjBovB,EAAOnvB,QAAUD,EAEjBjN,EAASkN,GACTmvB,EAAOj3B,MAAQ8H,EAGfmvB,EAAOnvB,QAAUA,GAAWmvB,EAAOnvB,QAEhC1N,KAAKg9B,YAAYH,EAC5B,CACA,aAAMO,CAAQ5S,EAAI/c,EAAS0vB,EAAgBv3B,GACvC,MAAMi3B,EAAS,CAAC,EAYhB,OAXIrS,aAAc0O,aACd2D,EAAOpvB,QAAU+c,EACjBqS,EAAOC,IAAMrvB,EACbovB,EAAOj3B,MAAQu3B,IAGfN,EAAOrS,GAAKA,EACZqS,EAAOpvB,QAAUA,EACjBovB,EAAOC,IAAMK,EACbN,EAAOj3B,MAAQA,GAEZ5F,KAAKg9B,YAAYH,EAC5B,CACAQ,iBAAAA,CAAkBx2B,GACd,MAAM6wB,EAAM13B,KAAK03B,MACjB,IAAKA,EAAIv3B,OACL,MAAM,IAAIQ,MAAM,GAAGjB,kEAEvB,IAAK,MAAM+8B,KAAW/E,EAClB+E,EAAQ3F,gBAAgBjwB,EAEhC,CACA,iBAAMm2B,CAAYH,GACd,MAAMrS,EAAKqS,EAAOrS,IAAM,cAAcnqB,KAAKyF,MAAoB,IAAdpD,QAAwB,MAAEkD,EAAK,IAAEk3B,GAAQD,EAAQnvB,EAAUovB,QAjOpH5uB,eAA8BpK,GAC1B,MAAMg5B,EAAM/1B,EAAyBjD,EAAKg5B,IAAKh5B,EAAK8B,OACpD,IAAKk3B,EACD,OAAOh5B,EAAKw5B,SAEhB,MAAMC,QAAiBC,MAAMV,GAC7B,OAAIS,EAASE,GACFF,EAASG,QAEpB14B,IAAYN,MAAM,GAAGhF,KAAe69B,EAAS7gB,uCACtC5Y,EAAKw5B,SAChB,CAsNgIK,CAAe,CAAEL,SAAUT,EAAOnvB,QAASovB,MAAKl3B,UAAWi3B,EAAOnvB,QAC1L,IAAIkwB,EAAef,EAAOpvB,SAAWtI,SAAS04B,eAAerT,GACxDoT,IACDA,EAAez4B,SAAS4J,cAAc,OACtC6uB,EAAapT,GAAKA,EAClBrlB,SAAS24B,KAAKC,OAAOH,IAEzB,MAAMI,EAAiBj3B,EAAyB2G,EAAS9H,GAAQ8xB,EAAM13B,KAAK03B,MAAOuG,EAAWvG,EAAIE,UAAWx2B,GAAMA,EAAEopB,KAAOA,GAC5H,GAAIyT,GAAY,EAAG,CACf,MAAMC,EAAMl+B,KAAKy8B,QAAQwB,GACrBC,IAAQA,EAAI5sB,YACZ4sB,EAAIntB,UACJ2mB,EAAIzE,OAAOgL,EAAU,GAE7B,CACA,IAAI7jB,EACJ,GAA2C,WAAvCwjB,EAAaO,QAAQC,cACrBhkB,EAAWwjB,EACXxjB,EAAStE,QAAQxW,GAAsB,YAEtC,CACD,MAAM++B,EAAmBT,EAAaU,qBAAqB,UACvDD,EAAiBl+B,QACjBia,EAAWikB,EAAiB,GAC5BjkB,EAAStE,QAAQxW,GAAsB,UAGvC8a,EAAWjV,SAAS4J,cAAc,UAClCqL,EAAStE,QAAQxW,GAAsB,OACvCs+B,EAAaW,YAAYnkB,GAEjC,CACKA,EAASvM,MAAM5J,QAChBmW,EAASvM,MAAM5J,MAAQ,QAEtBmW,EAASvM,MAAM3J,SAChBkW,EAASvM,MAAM3J,OAAS,QAE5B,MAAMs6B,EAAU,IAAI/I,GAAUz1B,KAAMwqB,EAAIwT,GASxC,OARIC,GAAY,EACZvG,EAAIzE,OAAOgL,EAAU,EAAGO,GAGxB9G,EAAIhiB,KAAK8oB,GAEbA,EAAQ3oB,OAAOD,WAAWwE,SACpBokB,EAAQ7F,QACP6F,CACX,ECrRG,MAAMC,GACT7+B,WAAAA,GACII,KAAKwG,IAAM,MACXxG,KAAKuI,aAAe,KACxB,CACAiB,WAAAA,CAAYN,GACR,MAAgCw1B,EAAbx1B,EAAM9F,MAA6B+G,KAAOjB,EAAM9F,MACnE,QAAmB1C,IAAfg+B,EAAS30B,QAAkCrJ,IAAfg+B,EAASz0B,QAAkCvJ,IAAfg+B,EAAS10B,EACjE,OAAOE,EAASw0B,EAExB,CACAr1B,gBAAAA,CAAiBH,GACb,MAAgCw1B,EAAbx1B,EAAM9F,MAA6B+G,KAAOjB,EAAM9F,MACnE,QAAmB1C,IAAfg+B,EAAS30B,QAAkCrJ,IAAfg+B,EAAS10B,EACrC,OAAOE,EAAS,CACZH,EAAG5G,EAAcu7B,EAAS30B,GAC1BC,EAAG7G,EAAcu7B,EAAS10B,GAC1BC,EAAG9G,EAAcu7B,EAASz0B,IAGtC,CACAzB,WAAAA,CAAYpE,GACR,IAAKA,EAAMkE,WAAW,OAClB,OAEJ,MAAoFQ,EAAtE,qEAAqFC,KAAK3E,GACxG,OAAO0E,EpEkHR,SAAoB61B,GACvB,MAAMC,EAAY10B,EAASy0B,GAC3B,MAAO,CACH91B,EAAG81B,EAAK91B,EACRD,EAAGg2B,EAAUh2B,EACbD,EAAGi2B,EAAUj2B,EACb3F,EAAG47B,EAAU57B,EAErB,CoEzHc67B,CAAW,CACTh2B,EAAGC,EAAO3I,OAAS,EAAIgE,EAAW2E,EAAO,IAAM,EAC/CiB,EAAGf,SAASF,EAAO,GAAI,IACvBkB,EAAGhB,SAASF,EAAO,GAAI,IACvBmB,EAAGjB,SAASF,EAAO,GAAI,WAEzBpI,CACV,ECnCG,MAAMo+B,GACTl/B,WAAAA,GACII,KAAKwG,IAAM,MACXxG,KAAKuI,aAAe,KACxB,CACAiB,WAAAA,CAAYN,GACR,MAAgC61B,EAAb71B,EAAM9F,MAA6BsG,KAAOR,EAAM9F,MACnE,QAAmB1C,IAAfq+B,EAAS/7B,EACT,OAAO+7B,CAEf,CACA11B,gBAAAA,CAAiBH,GACb,MAAgC61B,EAAb71B,EAAM9F,MAA6BsG,KAAOR,EAAM9F,MACnE,QAAmB1C,IAAfq+B,EAAS/7B,EACT,MAAO,CACHA,EAAGG,EAAc47B,EAAS/7B,GAC1B2F,EAAGxF,EAAc47B,EAASp2B,GAC1BC,EAAGzF,EAAc47B,EAASn2B,GAGtC,CACAJ,WAAAA,CAAYpE,GACR,IAAKA,EAAMkE,WAAWtI,KAAKuI,cACvB,OAEJ,MAAkFO,EAApE,mEAAmFC,KAAK3E,GACtG,OAAO0E,EACD,CACED,EAAGC,EAAO3I,OAAS,EAAIgE,EAAW2E,EAAO,IAAM,EAC/CF,EAAGI,SAASF,EAAO,GAAI,IACvBH,EAAGK,SAASF,EAAO,GAAI,IACvB9F,EAAGgG,SAASF,EAAO,GAAI,UAEzBpI,CACV,ECjCJ,MAAMs+B,GCEC,WACH,MAAMC,EAAkB,IAAIH,GAAmBI,EAAkB,IAAIT,GACrE32B,EAAgBm3B,GAChBn3B,EAAgBo3B,GAChB,MAAMlf,EAAS,IAAIkb,GAEnB,OADAlb,EAAO1L,OACA0L,CACX,CDToB1L,GACfrP,MACDC,OAAO85B,YAAcA,IEJzB,MAAM14B,GAAY64B,GAAuB,kBAARA,GAA4B,OAARA,EAC9C,SAASC,GAAYC,EAAMC,GAAkC,IAA5BC,EAAY15B,UAAA1F,OAAA,QAAAO,IAAAmF,UAAA,GAAAA,UAAA,GAAG,KAAM,EACzD,IAAKS,GAAS+4B,KAAU/4B,GAASg5B,GAC7B,OAAOD,IAASC,EAEpB,MAAME,EAAQC,OAAOjI,KAAK6H,GAAMlN,OAAO3rB,IAAQ+4B,EAAa/4B,IAAOk5B,EAAQD,OAAOjI,KAAK8H,GAAMnN,OAAO3rB,IAAQ+4B,EAAa/4B,IACzH,GAAIg5B,EAAMr/B,SAAWu/B,EAAMv/B,OACvB,OAAO,EAEX,IAAK,MAAMqG,KAAOg5B,EAAO,CACrB,MAAMG,EAASN,EAAK74B,GAAMo5B,EAASN,EAAK94B,GACxC,GAAIF,GAASq5B,IAAWr5B,GAASs5B,GAAS,CACtC,GAAID,IAAWL,GAAQM,IAAWP,EAC9B,SAEJ,IAAKD,GAAYO,EAAQC,EAAQL,GAC7B,OAAO,CAEf,MACK,GAAIn5B,MAAMX,QAAQk6B,IAAWv5B,MAAMX,QAAQm6B,IAC5C,IAAKC,GAAkBF,EAAQC,EAAQL,GACnC,OAAO,OAGV,GAAII,IAAWC,EAChB,OAAO,CAEf,CACA,OAAO,CACX,CACA,SAASC,GAAkBC,EAAMC,EAAMR,GACnC,GAAIO,EAAK3/B,SAAW4/B,EAAK5/B,OACrB,OAAO,EAEX,IAAK,IAAI0wB,EAAI,EAAGA,EAAIiP,EAAK3/B,OAAQ0wB,IAAK,CAClC,MAAMmP,EAAOF,EAAKjP,GAAIoP,EAAOF,EAAKlP,GAClC,GAAIzqB,MAAMX,QAAQu6B,IAAS55B,MAAMX,QAAQw6B,IACrC,IAAKJ,GAAkBG,EAAMC,EAAMV,GAC/B,OAAO,OAGV,GAAIj5B,GAAS05B,IAAS15B,GAAS25B,IAChC,IAAKb,GAAYY,EAAMC,EAAMV,GACzB,OAAO,OAGV,GAAIS,IAASC,EACd,OAAO,CAEf,CACA,OAAO,CACX,CChDA,MAAMC,GAAY,cAClB,MAAMzO,WAAkB0O,EAAAA,UACpBvgC,WAAAA,CAAYs1B,GACR5yB,MAAM4yB,GACNl1B,KAAKogC,MAAQ,CACT9rB,MAAM,EACN+rB,aAAS3/B,EAEjB,CACAqQ,OAAAA,GACS/Q,KAAKogC,MAAMC,UAGhBrgC,KAAKogC,MAAMC,QAAQtvB,UACnB/Q,KAAKsgC,SAAS,CACVD,aAAS3/B,IAEjB,CACA6/B,qBAAAA,CAAsBC,GAClB,MAAMC,EAAcD,EAAU9yB,SAAW8yB,EAAU3D,OAAQmB,EAAiBh+B,KAAKk1B,MAAMxnB,SAAW1N,KAAKk1B,MAAM2H,OAC7G,OAAQ2D,EAAU1D,MAAQ98B,KAAKk1B,MAAM4H,KACjC0D,EAAUhW,KAAOxqB,KAAKk1B,MAAM1K,IAC5BgW,EAAUE,kBAAoB1gC,KAAKk1B,MAAMwL,iBACzCF,EAAUG,YAAc3gC,KAAKk1B,MAAMyL,WACnCH,EAAUt8B,SAAWlE,KAAKk1B,MAAMhxB,QAChCs8B,EAAUv8B,QAAUjE,KAAKk1B,MAAMjxB,QAC9Bm7B,GAAYoB,EAAU3yB,MAAO7N,KAAKk1B,MAAMrnB,QACzC2yB,EAAUlsB,OAAStU,KAAKk1B,MAAM5gB,MAC9BksB,EAAUI,SAAW5gC,KAAKk1B,MAAM0L,SAC/BxB,GAAYqB,EAAazC,EAAgBx3B,GAAOA,EAAI8B,WAAW,KACxE,CACAu4B,kBAAAA,GACI7gC,KAAK4W,SACT,CACAkqB,WAAAA,GACI9gC,KAAK4W,UAAUmqB,KAAK,KAChBz+B,MAAMw+B,eAEd,CACAE,iBAAAA,GACI,WACQhhC,KAAKk1B,MAAM5gB,YACLtU,KAAKk1B,MAAM5gB,KAAK0qB,IAE1Bh/B,KAAKsgC,SAAS,CACVhsB,MAAM,GACPpG,gBACOlO,KAAKihC,iBAElB,EATD,EAUJ,CACAC,oBAAAA,GACIlhC,KAAK+Q,SACT,CACAowB,MAAAA,GACI,MAAM,MAAEl9B,EAAK,OAAEC,EAAM,UAAEy8B,EAAS,gBAAED,EAAe,GAAElW,GAAOxqB,KAAKk1B,MAC/D,OAAQkM,EAAAA,cAAoB,MAAO,CAAET,UAAWA,EAAWnW,GAAIA,GAC3D4W,EAAAA,cAAoB,SAAU,CAAET,UAAWD,EAAiB7yB,MAAO,IACxD7N,KAAKk1B,MAAMrnB,MACd5J,QACAC,YAEhB,CACA,aAAM0S,GACF5W,KAAK+Q,gBACC/Q,KAAKihC,eACf,CACA,mBAAMA,GACF,IAAKjhC,KAAKogC,MAAM9rB,KACZ,OAEJ,MAAMkW,EAAKxqB,KAAKk1B,MAAM1K,IAAMiH,GAAU4P,aAAa7W,IAAM0V,GAAW90B,QAAkB4zB,GAAYxgB,KAAK,CACnGse,IAAK98B,KAAKk1B,MAAM4H,IAChBtS,KACA9c,QAAS1N,KAAKk1B,MAAMxnB,SAAW1N,KAAKk1B,MAAM2H,SAE1C78B,KAAKk1B,MAAM9pB,YACXpL,KAAKk1B,MAAM9pB,UAAUk2B,QAAUl2B,GAEnCpL,KAAKsgC,SAAS,CACVD,QAASj1B,IAETpL,KAAKk1B,MAAM0L,cACL5gC,KAAKk1B,MAAM0L,OAAOx1B,EAEhC,EAEJqmB,GAAU4P,aAAe,CACrBp9B,MAAO,OACPC,OAAQ,OACRwJ,QAAS,CAAC,EACVG,MAAO,CAAC,EACRivB,SAAKp8B,EACL8pB,GAAI0V,IAER,MCjGA,GDiGA,E","sources":["../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","Math","cos","sin","isNumber","coords3d","undefined","Error","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","Map","getRandom","clamp","num","min","max","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistance","pointA","pointB","dx","dy","distance","getDistances","calcExactPositionOrRandomFromSize","data","position","size","width","height","parseAlpha","input","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","isArray","indexOf","itemFromArray","index","arguments","floor","arrayRandomIndex","deepExtend","destination","_len","sources","Array","_key","isObject","sourceIsArray","key","destDict","map","executeOnSingleOrMultiple","obj","callback","item","itemFromSingleOrMultiple","useIndex","getPositionOrSize","positionOrSize","canvasSize","mode","_","rest","getPosition","isBoolean","arg","isString","isFunction","randomColorValue","colorManagers","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","g","b","a","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","getHslFromAnimation","animation","clear","context","dimension","clearRect","setTransformValue","factor","newFactor","newValue","Canvas","container","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","coverRgb","coverColor","_coverColorStyle","_initStyle","element","options","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","async","trail","particles","move","trailFill","enable","fillColor","_trailFill","Promise","resolve","reject","image","img","createElement","addEventListener","evt","src","_paintBase","baseColor","draw","fillStyle","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","top","left","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","destroy","stop","remove","cb","drawParticle","delta","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","composite","shadow","pos","rotation","pathRotation","velocity","rotateData","transformData","d","setTransform","beginPath","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","strokeWidth","lineWidth","strokeStyle","shape","drawer","drawers","get","retina","pixelRatio","drawShape","close","closePath","afterEffect","drawShapeAfterEffect","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","pxRatio","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","delay","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","load","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","selectors","el","elementId","ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","count","speed","decay","sync","HslAnimation","AnimatableColor","colorAnimation","CollisionsAbsorb","CollisionsOverlap","retries","AnimationOptions","RangedAnimationOptions","startValue","minimumValue","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","bottom","right","Spin","Move","attract","center","direction","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","OpacityAnimation","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","character","custom","images","polygon","_value","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","id","overrideOptions","_this","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","rad","PI","radOffset","range","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","getParticleDirectionAngle","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","getMass","strokeColor","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","pathOptions","pathDelay","getValue","getPathGenerator","addPath","initParticle","valueRange","animationOptions","delayTime","loops","maxLoops","time","autoStatus","initialValue","initParticleNumericAnimationValue","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","Range","Rectangle","contains","point","w","intersects","Circle","pos1","pos2","size2","w2","h2","distPos","abs","pow","QuadTree","rectangle","capacity","_subdivide","i","_subs","round","_divided","_points","insert","some","check","found","queryCircle","queryRectangle","qTreeRectangle","Particles","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","reduceFactor","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","keys","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","params","url","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","currentOptions","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","hslColor","hsla","rgbResult","hslaToRgba","RgbColorManager","rgbColor","tsParticles","rgbColorManager","hslColorManager","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys2","value1","value2","deepCompareArrays","arr1","arr2","val1","val2","defaultId","Component","state","library","setState","shouldComponentUpdate","nextProps","nextOptions","canvasClassName","className","loaded","componentDidUpdate","forceUpdate","then","componentDidMount","loadParticles","componentWillUnmount","render","React","defaultProps","current"],"sourceRoot":""}