{"version":3,"file":"static/js/191.43ce9646.chunk.js","mappings":"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","sources":["utils/scienceIcons.js","pages/Student/BookmarksPage.jsx","components/ui/ReactionSystem.jsx","components/experiments/ExperimentCard.jsx","components/experiments/ScienceBadge.jsx","components/layout/ScienceBackground.jsx"],"sourcesContent":["export const subjectColors = {\r\n  Physics: 'bg-science-blue',\r\n  Chemistry: 'bg-reaction-orange',\r\n  Biology: 'bg-element-green'\r\n};\r\n\r\nexport const getSubjectIcon = (subject) => {\r\n  const icons = {\r\n    Physics: '⚛️',\r\n    Chemistry: '🧪',\r\n    Biology: '🧬'\r\n  };\r\n  return icons[subject] || '🔬';\r\n};\r\n\r\nexport const getGradeIcon = (grade) => {\r\n  return `📚 ${grade}`;\r\n};\r\n\r\nexport const getEquipmentIcon = (equipment) => {\r\n  const icons = {\r\n    beaker: '🧪',\r\n    burner: '🔥',\r\n    microscope: '🔬',\r\n    telescope: '🔭',\r\n    scale: '⚖️'\r\n  };\r\n  return icons[equipment] || '🧰';\r\n};","  // import { useState, useEffect } from 'react';\r\n  // import { motion } from 'framer-motion';\r\n  // import ExperimentCard from '../../components/experiments/ExperimentCard';\r\n  // import ScienceBackground from '../../components/layout/ScienceBackground';\r\n\r\n  // export default function BookmarksPage() {\r\n  //   const [bookmarks, setBookmarks] = useState([]);\r\n  //   const [loading, setLoading] = useState(true);\r\n\r\n  //   // Simulate fetching bookmarks\r\n  //   useEffect(() => {\r\n  //     setTimeout(() => {\r\n  //       const mockBookmarks = [\r\n  //         { \r\n  //           id: 1, \r\n  //           title: \"Chemical Reactions\", \r\n  //           description: \"Explore how different chemicals interact with each other\", \r\n  //           grade: 7, \r\n  //           subject: \"Chemistry\",\r\n  //           reactions: 42,\r\n  //           thumbnail: \"chem-reaction\"\r\n  //         },\r\n  //         { \r\n  //           id: 3, \r\n  //           title: \"Plant Photosynthesis\", \r\n  //           description: \"Discover how plants convert light into energy\", \r\n  //           grade: 9, \r\n  //           subject: \"Biology\",\r\n  //           reactions: 35,\r\n  //           thumbnail: \"photosynthesis\"\r\n  //         }\r\n  //       ];\r\n  //       setBookmarks(mockBookmarks);\r\n  //       setLoading(false);\r\n  //     }, 800);\r\n  //   }, []);\r\n\r\n  //   return (\r\n  //     <div className=\"min-h-screen relative\">\r\n  //       <ScienceBackground />\r\n  //       <div className=\"container mx-auto px-4 py-8 relative z-10\">\r\n  //         <motion.h1 \r\n  //           className=\"text-3xl font-bold mb-8\"\r\n  //           initial={{ opacity: 0, y: -20 }}\r\n  //           animate={{ opacity: 1, y: 0 }}\r\n  //         >\r\n  //           My Bookmarked Experiments\r\n  //         </motion.h1>\r\n          \r\n  //         {loading ? (\r\n  //           <div className=\"text-center py-16\">\r\n  //             <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-science-blue\"></div>\r\n  //             <p className=\"mt-4 text-gray-600\">Loading your bookmarks...</p>\r\n  //           </div>\r\n  //         ) : bookmarks.length === 0 ? (\r\n  //           <motion.div\r\n  //             initial={{ opacity: 0 }}\r\n  //             animate={{ opacity: 1 }}\r\n  //             className=\"text-center py-16\"\r\n  //           >\r\n  //             <div className=\"text-6xl mb-4\">📚</div>\r\n  //             <h2 className=\"text-2xl font-bold mb-2\">No bookmarks yet</h2>\r\n  //             <p className=\"text-gray-600 mb-6\">Save experiments to view them here</p>\r\n  //             <button className=\"btn-primary\">\r\n  //               Browse Experiments\r\n  //             </button>\r\n  //           </motion.div>\r\n  //         ) : (\r\n  //           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n  //             {bookmarks.map((experiment, index) => (\r\n  //               <motion.div\r\n  //                 key={experiment.id}\r\n  //                 initial={{ opacity: 0, y: 30 }}\r\n  //                 animate={{ opacity: 1, y: 0 }}\r\n  //                 transition={{ delay: index * 0.1 }}\r\n  //               >\r\n  //                 <ExperimentCard experiment={experiment} />\r\n  //               </motion.div>\r\n  //             ))}\r\n  //           </div>\r\n  //         )}\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\nimport { useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ExperimentCard from '../../components/experiments/ExperimentCard';\r\nimport ScienceBackground from '../../components/layout/ScienceBackground';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useExperiments } from '../../context/ExperimentContext';\r\n\r\nexport default function BookmarksPage() {\r\n  const { user } = useAuth();\r\n  const { experiments, loading } = useExperiments();\r\n  const navigate = useNavigate();\r\n\r\n  // Only show approved experiments that the user has bookmarked\r\n  const bookmarked = useMemo(() => {\r\n    if (!user?.bookmarks || !Array.isArray(user.bookmarks)) return [];\r\n    return experiments.filter(exp =>\r\n      exp.status === 'approved' && user.bookmarks.includes(exp._id)\r\n    );\r\n  }, [experiments, user]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative\">\r\n      <ScienceBackground />\r\n      <div className=\"container mx-auto px-4 py-8 relative z-10\">\r\n        <motion.h1 \r\n          className=\"text-3xl font-bold mb-8\"\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n        >\r\n          My Bookmarked Experiments\r\n        </motion.h1>\r\n        \r\n        {loading ? (\r\n          <div className=\"text-center py-16\">\r\n            <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-science-blue\"></div>\r\n            <p className=\"mt-4 text-gray-600\">Loading your bookmarks...</p>\r\n          </div>\r\n        ) : bookmarked.length === 0 ? (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"text-center py-16\"\r\n          >\r\n            <div className=\"text-6xl mb-4\">📚</div>\r\n            <h2 className=\"text-2xl font-bold mb-2\">No bookmarks yet</h2>\r\n            <p className=\"text-gray-600 mb-6\">Save experiments to view them here</p>\r\n            <button\r\n              onClick={() => navigate('/experiments')}\r\n              className=\"btn-primary\"\r\n            >\r\n              Browse Experiments\r\n            </button>\r\n          </motion.div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n            {bookmarked.map((experiment, idx) => (\r\n              <motion.div\r\n                key={experiment._id}\r\n                initial={{ opacity: 0, y: 30 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: idx * 0.1 }}\r\n              >\r\n                <ExperimentCard\r\n                  experiment={experiment}\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `/experiments/${experiment.grade}/${encodeURIComponent(\r\n                        experiment.title\r\n                      )}/${experiment._id}`\r\n                    )\r\n                  }\r\n                />\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport { FaHeart, FaRegHeart, FaThumbsUp, FaRegThumbsUp, FaLaugh, FaRegLaugh } from 'react-icons/fa';\r\n\r\nexport default function ReactionSystem() {\r\n  const [reaction, setReaction] = useState(null);\r\n  \r\n  const reactions = [\r\n    { type: 'like', icon: reaction === 'like' ? <FaThumbsUp /> : <FaRegThumbsUp />, label: 'Like' },\r\n    { type: 'love', icon: reaction === 'love' ? <FaHeart className=\"text-red-500\" /> : <FaRegHeart />, label: 'Love' },\r\n    { type: 'funny', icon: reaction === 'funny' ? <FaLaugh className=\"text-yellow-500\" /> : <FaRegLaugh />, label: 'Funny' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <span className=\"mr-2 text-gray-600\">React:</span>\r\n      <div className=\"flex space-x-2\">\r\n        {reactions.map(({ type, icon, label }) => (\r\n          <motion.button\r\n            key={type}\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            className={`p-2 rounded-full ${\r\n              reaction === type \r\n                ? 'bg-science-blue/20 text-science-blue' \r\n                : 'bg-gray-100 text-gray-600'\r\n            }`}\r\n            onClick={() => setReaction(reaction === type ? null : type)}\r\n            aria-label={label}\r\n          >\r\n            {icon}\r\n          </motion.button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}","// import React from 'react';\r\n// import { motion } from 'framer-motion';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { format } from 'date-fns';\r\n// import ReactionSystem from '../ui/ReactionSystem';\r\n// import ScienceBadge from './ScienceBadge';\r\n\r\n// const statusStyles = {\r\n//   pending:  'bg-yellow-100 text-yellow-800',\r\n//   approved: 'bg-green-100 text-green-800',\r\n//   rejected: 'bg-red-100 text-red-800',\r\n// };\r\n\r\n// export default function ExperimentCard({ experiment }) {\r\n//   const navigate = useNavigate();\r\n//   const {\r\n//     id,\r\n//     title,\r\n//     grade,\r\n//     subject,\r\n//     description = '',\r\n//     images = [],\r\n//     creatorName,\r\n//     createdAt,\r\n//     status = 'pending',\r\n//     reactions = 0,\r\n//   } = experiment;\r\n\r\n//   // truncate description\r\n//   const shortDesc = description.length > 80\r\n//     ? description.slice(0, 80).trim() + '…'\r\n//     : description;\r\n\r\n//   const handleClick = () => {\r\n//     navigate(\r\n//       `/experiments/${grade}/` +\r\n//       `${encodeURIComponent(title)}/` +\r\n//       `${id}`\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <motion.div\r\n//       onClick={handleClick}\r\n//       initial={{ opacity: 0, y: 20 }}\r\n//       animate={{ opacity: 1, y: 0 }}\r\n//       whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n//       transition={{ duration: 0.3 }}\r\n//       className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n//     >\r\n//       {/* Status badge */}\r\n//       <div className=\"absolute top-3 right-3 z-10\">\r\n//         <span\r\n//           className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n//             statusStyles[status] || statusStyles.pending\r\n//           }`}\r\n//         >\r\n//           {status.charAt(0).toUpperCase() + status.slice(1)}\r\n//         </span>\r\n//       </div>\r\n\r\n//       {/* Image */}\r\n//       <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n//         {images.length > 0 ? (\r\n//           <img\r\n//             src={images[0]}\r\n//             alt={title}\r\n//             className=\"w-full h-full object-cover\"\r\n//           />\r\n//         ) : (\r\n//           <div className=\"text-gray-400\">No Image</div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Content */}\r\n//       <div className=\"p-4 flex-1 flex flex-col\">\r\n//         {/* Grade & Subject */}\r\n//         <div className=\"flex gap-2 mb-2\">\r\n//           <ScienceBadge type=\"grade\"   value={grade}   />\r\n//           <ScienceBadge type=\"subject\" value={subject} />\r\n//         </div>\r\n\r\n//         {/* Title */}\r\n//         <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n//           {title}\r\n//         </h3>\r\n\r\n//         {/* Description */}\r\n//         {shortDesc && (\r\n//           <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n//             {shortDesc}\r\n//           </p>\r\n//         )}\r\n\r\n//         {/* Reactions */}\r\n//         <ReactionSystem reactions={reactions} />\r\n\r\n//         {/* Footer */}\r\n//         <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n//           <span>By {creatorName}</span>\r\n//           {createdAt && (\r\n//             <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport ReactionSystem from '../ui/ReactionSystem';\r\nimport ScienceBadge from './ScienceBadge';\r\n\r\nconst statusStyles = {\r\n  pending:  'bg-yellow-100 text-yellow-800',\r\n  approved: 'bg-green-100 text-green-800',\r\n  rejected: 'bg-red-100 text-red-800',\r\n};\r\n\r\nexport default function ExperimentCard({ experiment }) {\r\n  const navigate = useNavigate();\r\n\r\n  const id = experiment._id || experiment.id;\r\n\r\n  const {\r\n    title = 'Untitled Experiment',\r\n    grade = 'N/A',\r\n    subject = 'N/A',\r\n    description = 'No description provided.',\r\n    images = [],\r\n    creatorName = 'Unknown',\r\n    createdAt,\r\n    status = 'pending',\r\n    reactions = 0,\r\n  } = experiment;\r\n\r\n  const safeDesc = String(description);\r\n  const shortDesc = safeDesc.length > 80\r\n    ? safeDesc.slice(0, 80).trim() + '…'\r\n    : safeDesc;\r\n\r\n  const handleClick = () => {\r\n    navigate(\r\n      `/experiments/${grade}/${encodeURIComponent(title)}/${id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n      transition={{ duration: 0.3 }}\r\n      className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n    >\r\n      {/* Status badge */}\r\n      <div className=\"absolute top-3 right-3 z-10\">\r\n        <span\r\n          className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n            statusStyles[status] || statusStyles.pending\r\n          }`}\r\n        >\r\n          {status.charAt(0).toUpperCase() + status.slice(1)}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Thumbnail */}\r\n      <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n        {images.length > 0 ? (\r\n          <img\r\n            src={images[0]}\r\n            alt={title}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"text-gray-400\">No Image</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-4 flex-1 flex flex-col\">\r\n        <div className=\"flex gap-2 mb-2\">\r\n          <ScienceBadge type=\"grade\"   value={grade}   />\r\n          <ScienceBadge type=\"subject\" value={subject} />\r\n        </div>\r\n\r\n        <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n          {title}\r\n        </h3>\r\n\r\n        <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n          {shortDesc}\r\n        </p>\r\n\r\n        <ReactionSystem reactions={reactions} />\r\n\r\n        <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n          <span>By {creatorName}</span>\r\n          {createdAt && (\r\n            <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { subjectColors } from '../../utils/scienceIcons';\r\n\r\n\r\n\r\nconst gradeColors = {\r\n  7: 'bg-purple-200 text-purple-800',\r\n  8: 'bg-blue-200 text-blue-800',\r\n  9: 'bg-green-200 text-green-800',\r\n  10: 'bg-yellow-200 text-yellow-800',\r\n  11: 'bg-orange-200 text-orange-800',\r\n  12: 'bg-red-200 text-red-800'\r\n};\r\n\r\nexport default function ScienceBadge({ type, value }) {\r\n  const colors = type === 'subject' ? subjectColors : gradeColors;\r\n  const bgColor = colors[value] || 'bg-gray-200 text-gray-800';\r\n  \r\n  return (\r\n    <motion.span\r\n      whileHover={{ scale: 1.05 }}\r\n      className={`px-3 py-1 rounded-full text-sm font-medium ${bgColor}`}\r\n    >\r\n      {type === 'subject' ? value : `Grade ${value}`}\r\n    </motion.span>\r\n  );\r\n}","import { useSpring, animated } from '@react-spring/web';\r\n\r\nexport default function ScienceBackground() {\r\n  const [props] = useSpring(() => ({\r\n    from: { backgroundPosition: '0% 50%' },\r\n    to: { backgroundPosition: '100% 50%' },\r\n    config: { duration: 20000 },\r\n    loop: { reverse: true },\r\n  }));\r\n\r\n  return (\r\n    <animated.div\r\n      className=\"fixed inset-0 -z-10\"\r\n      style={{\r\n        ...props,\r\n        background: 'linear-gradient(45deg, #4cc9f0, #f72585, #7209b7, #3a0ca3)',\r\n        backgroundSize: '400% 400%',\r\n        opacity: 0.1\r\n      }}\r\n    />\r\n  );\r\n}"],"names":["subjectColors","Physics","Chemistry","Biology","BookmarksPage","user","useAuth","experiments","loading","useExperiments","navigate","useNavigate","bookmarked","useMemo","bookmarks","Array","isArray","filter","exp","status","includes","_id","_jsxs","className","children","_jsx","ScienceBackground","motion","h1","initial","opacity","y","animate","length","div","onClick","map","experiment","idx","transition","delay","ExperimentCard","grade","encodeURIComponent","title","ReactionSystem","reaction","setReaction","useState","reactions","type","icon","FaThumbsUp","FaRegThumbsUp","label","FaHeart","FaRegHeart","FaLaugh","FaRegLaugh","_ref","button","whileHover","scale","whileTap","statusStyles","pending","approved","rejected","id","subject","description","images","creatorName","createdAt","safeDesc","String","shortDesc","slice","trim","handleClick","boxShadow","duration","charAt","toUpperCase","src","alt","ScienceBadge","value","format","Date","gradeColors","bgColor","span","props","useSpring","from","backgroundPosition","to","config","loop","reverse","animated","style","background","backgroundSize"],"sourceRoot":""}