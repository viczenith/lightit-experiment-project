{"version":3,"file":"static/js/609.84c8a18e.chunk.js","mappings":"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","sources":["utils/scienceIcons.js","pages/Dashboard/StudentDashboard.jsx","components/ui/ReactionSystem.jsx","components/experiments/ExperimentCard.jsx","components/experiments/ScienceBadge.jsx"],"sourcesContent":["export const subjectColors = {\r\n  Physics: 'bg-science-blue',\r\n  Chemistry: 'bg-reaction-orange',\r\n  Biology: 'bg-element-green'\r\n};\r\n\r\nexport const getSubjectIcon = (subject) => {\r\n  const icons = {\r\n    Physics: '⚛️',\r\n    Chemistry: '🧪',\r\n    Biology: '🧬'\r\n  };\r\n  return icons[subject] || '🔬';\r\n};\r\n\r\nexport const getGradeIcon = (grade) => {\r\n  return `📚 ${grade}`;\r\n};\r\n\r\nexport const getEquipmentIcon = (equipment) => {\r\n  const icons = {\r\n    beaker: '🧪',\r\n    burner: '🔥',\r\n    microscope: '🔬',\r\n    telescope: '🔭',\r\n    scale: '⚖️'\r\n  };\r\n  return icons[equipment] || '🧰';\r\n};","import React, { useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport ExperimentCard from '../../components/experiments/ExperimentCard';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useExperiments } from '../../context/ExperimentContext';\r\n\r\nexport default function StudentDashboard() {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { experiments } = useExperiments();\r\n\r\n  // Only show approved experiments\r\n  const approved = useMemo(\r\n    () => experiments.filter((exp) => exp.status === 'approved'),\r\n    [experiments]\r\n  );\r\n\r\n  // Continue Learning → two most‑recent\r\n  const recentExperiments = useMemo(\r\n    () =>\r\n      [...approved]\r\n        .sort(\r\n          (a, b) =>\r\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n        )\r\n        .slice(0, 2),\r\n    [approved]\r\n  );\r\n\r\n  // Bookmarks: assume `user.bookmarks` is an array of experiment IDs\r\n  const bookmarked = useMemo(() => {\r\n    if (!Array.isArray(user?.bookmarks)) return [];\r\n    return approved.filter((exp) => user.bookmarks.includes(exp._id));\r\n  }, [approved, user]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <motion.h1\r\n        className=\"text-3xl font-bold mb-8\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        Welcome back, {user?.name || 'Student'}!\r\n      </motion.h1>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* Continue Learning */}\r\n        <motion.div\r\n          className=\"lg:col-span-2 bg-white rounded-2xl shadow-lg p-6\"\r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n        >\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-2xl font-bold\">Continue Learning</h2>\r\n            <Link\r\n              to=\"/experiments\"\r\n              className=\"text-science-blue font-medium hover:underline\"\r\n            >\r\n              View All\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {recentExperiments.length > 0 ? (\r\n              recentExperiments.map((exp) => (\r\n                <motion.div\r\n                  key={exp._id}\r\n                  whileHover={{ y: -5 }}\r\n                  className=\"border border-gray-200 rounded-xl p-4 hover:shadow-md cursor-pointer\"\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `/experiments/${exp.grade}/${encodeURIComponent(\r\n                        exp.title\r\n                      )}/${exp._id}`\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <h3 className=\"text-xl font-bold\">{exp.title}</h3>\r\n                      <p className=\"text-gray-600\">\r\n                        {exp.subject} • Grade {exp.grade}\r\n                      </p>\r\n                      <div className=\"mt-2 flex items-center\">\r\n                        <div className=\"w-48 bg-gray-200 rounded-full h-2.5 mr-3\">\r\n                          <div\r\n                            className=\"bg-science-blue h-2.5 rounded-full\"\r\n                            style={{ width: `${exp.progress || 0}%` }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"text-sm\">\r\n                          {exp.progress ?? 0}%\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"text-sm text-gray-500\">Last accessed</p>\r\n                      <p className=\"font-medium\">\r\n                        {exp.lastAccessed || '—'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-600\">No recent experiments yet.</p>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Quick Access */}\r\n        <motion.div\r\n          className=\"bg-white rounded-2xl shadow-lg p-6\"\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n          <h2 className=\"text-2xl font-bold mb-6\">Quick Access</h2>\r\n\r\n          <div className=\"space-y-4\">\r\n            <Link\r\n              to=\"/experiments\"\r\n              className=\"block p-4 bg-science-blue/10 hover:bg-science-blue/20 rounded-xl transition\"\r\n            >\r\n              <h3 className=\"font-bold text-lg\">Browse Experiments</h3>\r\n              <p className=\"text-gray-600\">Explore all available labs</p>\r\n            </Link>\r\n\r\n            <Link\r\n              to=\"/virtual-lab\"\r\n              className=\"block p-4 bg-reaction-orange/10 hover:bg-reaction-orange/20 rounded-xl transition\"\r\n            >\r\n              <h3 className=\"font-bold text-lg\">Virtual Lab</h3>\r\n              <p className=\"text-gray-600\">Practice experiments online</p>\r\n            </Link>\r\n\r\n            <Link\r\n              to=\"/student/bookmarks\"\r\n              className=\"block p-4 bg-element-green/10 hover:bg-element-green/20 rounded-xl transition\"\r\n            >\r\n              <h3 className=\"font-bold text-lg\">My Bookmarks</h3>\r\n              <p className=\"text-gray-600\">Saved experiments</p>\r\n            </Link>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Bookmarked Experiments */}\r\n      <motion.div\r\n        className=\"lg:col-span-3 bg-white rounded-2xl shadow-lg p-6 mt-8\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.3 }}\r\n      >\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold\">Bookmarked Experiments</h2>\r\n          <Link\r\n            to=\"/student/bookmarks\"\r\n            className=\"text-science-blue font-medium hover:underline\"\r\n          >\r\n            View All\r\n          </Link>\r\n        </div>\r\n\r\n        {bookmarked.length > 0 ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {bookmarked.map((exp) => (\r\n              <ExperimentCard\r\n                key={exp._id}\r\n                experiment={exp}\r\n                onClick={() =>\r\n                  navigate(\r\n                    `/experiments/${exp.grade}/${encodeURIComponent(\r\n                      exp.title\r\n                    )}/${exp._id}`\r\n                  )\r\n                }\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-gray-600\">No bookmarks yet.</p>\r\n        )}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport { FaHeart, FaRegHeart, FaThumbsUp, FaRegThumbsUp, FaLaugh, FaRegLaugh } from 'react-icons/fa';\r\n\r\nexport default function ReactionSystem() {\r\n  const [reaction, setReaction] = useState(null);\r\n  \r\n  const reactions = [\r\n    { type: 'like', icon: reaction === 'like' ? <FaThumbsUp /> : <FaRegThumbsUp />, label: 'Like' },\r\n    { type: 'love', icon: reaction === 'love' ? <FaHeart className=\"text-red-500\" /> : <FaRegHeart />, label: 'Love' },\r\n    { type: 'funny', icon: reaction === 'funny' ? <FaLaugh className=\"text-yellow-500\" /> : <FaRegLaugh />, label: 'Funny' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <span className=\"mr-2 text-gray-600\">React:</span>\r\n      <div className=\"flex space-x-2\">\r\n        {reactions.map(({ type, icon, label }) => (\r\n          <motion.button\r\n            key={type}\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            className={`p-2 rounded-full ${\r\n              reaction === type \r\n                ? 'bg-science-blue/20 text-science-blue' \r\n                : 'bg-gray-100 text-gray-600'\r\n            }`}\r\n            onClick={() => setReaction(reaction === type ? null : type)}\r\n            aria-label={label}\r\n          >\r\n            {icon}\r\n          </motion.button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}","// import React from 'react';\r\n// import { motion } from 'framer-motion';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { format } from 'date-fns';\r\n// import ReactionSystem from '../ui/ReactionSystem';\r\n// import ScienceBadge from './ScienceBadge';\r\n\r\n// const statusStyles = {\r\n//   pending:  'bg-yellow-100 text-yellow-800',\r\n//   approved: 'bg-green-100 text-green-800',\r\n//   rejected: 'bg-red-100 text-red-800',\r\n// };\r\n\r\n// export default function ExperimentCard({ experiment }) {\r\n//   const navigate = useNavigate();\r\n//   const {\r\n//     id,\r\n//     title,\r\n//     grade,\r\n//     subject,\r\n//     description = '',\r\n//     images = [],\r\n//     creatorName,\r\n//     createdAt,\r\n//     status = 'pending',\r\n//     reactions = 0,\r\n//   } = experiment;\r\n\r\n//   // truncate description\r\n//   const shortDesc = description.length > 80\r\n//     ? description.slice(0, 80).trim() + '…'\r\n//     : description;\r\n\r\n//   const handleClick = () => {\r\n//     navigate(\r\n//       `/experiments/${grade}/` +\r\n//       `${encodeURIComponent(title)}/` +\r\n//       `${id}`\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <motion.div\r\n//       onClick={handleClick}\r\n//       initial={{ opacity: 0, y: 20 }}\r\n//       animate={{ opacity: 1, y: 0 }}\r\n//       whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n//       transition={{ duration: 0.3 }}\r\n//       className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n//     >\r\n//       {/* Status badge */}\r\n//       <div className=\"absolute top-3 right-3 z-10\">\r\n//         <span\r\n//           className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n//             statusStyles[status] || statusStyles.pending\r\n//           }`}\r\n//         >\r\n//           {status.charAt(0).toUpperCase() + status.slice(1)}\r\n//         </span>\r\n//       </div>\r\n\r\n//       {/* Image */}\r\n//       <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n//         {images.length > 0 ? (\r\n//           <img\r\n//             src={images[0]}\r\n//             alt={title}\r\n//             className=\"w-full h-full object-cover\"\r\n//           />\r\n//         ) : (\r\n//           <div className=\"text-gray-400\">No Image</div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Content */}\r\n//       <div className=\"p-4 flex-1 flex flex-col\">\r\n//         {/* Grade & Subject */}\r\n//         <div className=\"flex gap-2 mb-2\">\r\n//           <ScienceBadge type=\"grade\"   value={grade}   />\r\n//           <ScienceBadge type=\"subject\" value={subject} />\r\n//         </div>\r\n\r\n//         {/* Title */}\r\n//         <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n//           {title}\r\n//         </h3>\r\n\r\n//         {/* Description */}\r\n//         {shortDesc && (\r\n//           <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n//             {shortDesc}\r\n//           </p>\r\n//         )}\r\n\r\n//         {/* Reactions */}\r\n//         <ReactionSystem reactions={reactions} />\r\n\r\n//         {/* Footer */}\r\n//         <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n//           <span>By {creatorName}</span>\r\n//           {createdAt && (\r\n//             <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport ReactionSystem from '../ui/ReactionSystem';\r\nimport ScienceBadge from './ScienceBadge';\r\n\r\nconst statusStyles = {\r\n  pending:  'bg-yellow-100 text-yellow-800',\r\n  approved: 'bg-green-100 text-green-800',\r\n  rejected: 'bg-red-100 text-red-800',\r\n};\r\n\r\nexport default function ExperimentCard({ experiment }) {\r\n  const navigate = useNavigate();\r\n\r\n  const id = experiment._id || experiment.id;\r\n\r\n  const {\r\n    title = 'Untitled Experiment',\r\n    grade = 'N/A',\r\n    subject = 'N/A',\r\n    description = 'No description provided.',\r\n    images = [],\r\n    creatorName = 'Unknown',\r\n    createdAt,\r\n    status = 'pending',\r\n    reactions = 0,\r\n  } = experiment;\r\n\r\n  const safeDesc = String(description);\r\n  const shortDesc = safeDesc.length > 80\r\n    ? safeDesc.slice(0, 80).trim() + '…'\r\n    : safeDesc;\r\n\r\n  const handleClick = () => {\r\n    navigate(\r\n      `/experiments/${grade}/${encodeURIComponent(title)}/${id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n      transition={{ duration: 0.3 }}\r\n      className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n    >\r\n      {/* Status badge */}\r\n      <div className=\"absolute top-3 right-3 z-10\">\r\n        <span\r\n          className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n            statusStyles[status] || statusStyles.pending\r\n          }`}\r\n        >\r\n          {status.charAt(0).toUpperCase() + status.slice(1)}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Thumbnail */}\r\n      <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n        {images.length > 0 ? (\r\n          <img\r\n            src={images[0]}\r\n            alt={title}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"text-gray-400\">No Image</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-4 flex-1 flex flex-col\">\r\n        <div className=\"flex gap-2 mb-2\">\r\n          <ScienceBadge type=\"grade\"   value={grade}   />\r\n          <ScienceBadge type=\"subject\" value={subject} />\r\n        </div>\r\n\r\n        <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n          {title}\r\n        </h3>\r\n\r\n        <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n          {shortDesc}\r\n        </p>\r\n\r\n        <ReactionSystem reactions={reactions} />\r\n\r\n        <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n          <span>By {creatorName}</span>\r\n          {createdAt && (\r\n            <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { subjectColors } from '../../utils/scienceIcons';\r\n\r\n\r\n\r\nconst gradeColors = {\r\n  7: 'bg-purple-200 text-purple-800',\r\n  8: 'bg-blue-200 text-blue-800',\r\n  9: 'bg-green-200 text-green-800',\r\n  10: 'bg-yellow-200 text-yellow-800',\r\n  11: 'bg-orange-200 text-orange-800',\r\n  12: 'bg-red-200 text-red-800'\r\n};\r\n\r\nexport default function ScienceBadge({ type, value }) {\r\n  const colors = type === 'subject' ? subjectColors : gradeColors;\r\n  const bgColor = colors[value] || 'bg-gray-200 text-gray-800';\r\n  \r\n  return (\r\n    <motion.span\r\n      whileHover={{ scale: 1.05 }}\r\n      className={`px-3 py-1 rounded-full text-sm font-medium ${bgColor}`}\r\n    >\r\n      {type === 'subject' ? value : `Grade ${value}`}\r\n    </motion.span>\r\n  );\r\n}"],"names":["subjectColors","Physics","Chemistry","Biology","StudentDashboard","navigate","useNavigate","user","useAuth","experiments","useExperiments","approved","useMemo","filter","exp","status","recentExperiments","sort","a","b","Date","createdAt","getTime","slice","bookmarked","Array","isArray","bookmarks","includes","_id","_jsxs","className","children","motion","h1","initial","opacity","y","animate","name","div","x","_jsx","Link","to","length","map","_exp$progress","whileHover","onClick","concat","grade","encodeURIComponent","title","subject","style","width","progress","lastAccessed","transition","delay","ExperimentCard","experiment","ReactionSystem","reaction","setReaction","useState","reactions","type","icon","FaThumbsUp","FaRegThumbsUp","label","FaHeart","FaRegHeart","FaLaugh","FaRegLaugh","_ref","button","scale","whileTap","statusStyles","pending","rejected","id","description","images","creatorName","safeDesc","String","shortDesc","trim","handleClick","boxShadow","duration","charAt","toUpperCase","src","alt","ScienceBadge","value","format","gradeColors","bgColor","span"],"sourceRoot":""}