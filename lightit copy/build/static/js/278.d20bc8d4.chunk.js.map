{"version":3,"file":"static/js/278.d20bc8d4.chunk.js","mappings":"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","sources":["utils/scienceIcons.js","components/layout/ParticleBackground.jsx","components/ui/ReactionSystem.jsx","components/experiments/ExperimentCard.jsx","components/experiments/ScienceBadge.jsx","pages/Home/HeroSection.jsx","pages/Home/CategoryExplorer.jsx","pages/Home/TrendingExperiments.jsx","pages/Home/HomePage.jsx","components/layout/ScienceBackground.jsx"],"sourcesContent":["export const subjectColors = {\r\n  Physics: 'bg-science-blue',\r\n  Chemistry: 'bg-reaction-orange',\r\n  Biology: 'bg-element-green'\r\n};\r\n\r\nexport const getSubjectIcon = (subject) => {\r\n  const icons = {\r\n    Physics: '⚛️',\r\n    Chemistry: '🧪',\r\n    Biology: '🧬'\r\n  };\r\n  return icons[subject] || '🔬';\r\n};\r\n\r\nexport const getGradeIcon = (grade) => {\r\n  return `📚 ${grade}`;\r\n};\r\n\r\nexport const getEquipmentIcon = (equipment) => {\r\n  const icons = {\r\n    beaker: '🧪',\r\n    burner: '🔥',\r\n    microscope: '🔬',\r\n    telescope: '🔭',\r\n    scale: '⚖️'\r\n  };\r\n  return icons[equipment] || '🧰';\r\n};","  // import Particles from 'react-particles-js';\r\n  import Particles from 'react-tsparticles';\r\n\r\n  export default function ParticleBackground() {\r\n    return (\r\n      <Particles\r\n        className=\"absolute inset-0 -z-10\"\r\n        params={{\r\n          particles: {\r\n            number: { value: 30 },\r\n            size: { value: 3 },\r\n            shape: { \r\n              type: 'images',\r\n              images: [\r\n                { src: '/flask.png', height: 20, width: 20 },\r\n                { src: '/atom.png', height: 20, width: 20 },\r\n                { src: '/beaker.png', height: 20, width: 20 }\r\n              ]\r\n            },\r\n            move: { speed: 2 },\r\n            opacity: { value: 0.5, random: true }\r\n          },\r\n          interactivity: {\r\n            events: {\r\n              onhover: { enable: true, mode: 'repulse' }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }","import { motion } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport { FaHeart, FaRegHeart, FaThumbsUp, FaRegThumbsUp, FaLaugh, FaRegLaugh } from 'react-icons/fa';\r\n\r\nexport default function ReactionSystem() {\r\n  const [reaction, setReaction] = useState(null);\r\n  \r\n  const reactions = [\r\n    { type: 'like', icon: reaction === 'like' ? <FaThumbsUp /> : <FaRegThumbsUp />, label: 'Like' },\r\n    { type: 'love', icon: reaction === 'love' ? <FaHeart className=\"text-red-500\" /> : <FaRegHeart />, label: 'Love' },\r\n    { type: 'funny', icon: reaction === 'funny' ? <FaLaugh className=\"text-yellow-500\" /> : <FaRegLaugh />, label: 'Funny' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <span className=\"mr-2 text-gray-600\">React:</span>\r\n      <div className=\"flex space-x-2\">\r\n        {reactions.map(({ type, icon, label }) => (\r\n          <motion.button\r\n            key={type}\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            className={`p-2 rounded-full ${\r\n              reaction === type \r\n                ? 'bg-science-blue/20 text-science-blue' \r\n                : 'bg-gray-100 text-gray-600'\r\n            }`}\r\n            onClick={() => setReaction(reaction === type ? null : type)}\r\n            aria-label={label}\r\n          >\r\n            {icon}\r\n          </motion.button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}","// import React from 'react';\r\n// import { motion } from 'framer-motion';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { format } from 'date-fns';\r\n// import ReactionSystem from '../ui/ReactionSystem';\r\n// import ScienceBadge from './ScienceBadge';\r\n\r\n// const statusStyles = {\r\n//   pending:  'bg-yellow-100 text-yellow-800',\r\n//   approved: 'bg-green-100 text-green-800',\r\n//   rejected: 'bg-red-100 text-red-800',\r\n// };\r\n\r\n// export default function ExperimentCard({ experiment }) {\r\n//   const navigate = useNavigate();\r\n//   const {\r\n//     id,\r\n//     title,\r\n//     grade,\r\n//     subject,\r\n//     description = '',\r\n//     images = [],\r\n//     creatorName,\r\n//     createdAt,\r\n//     status = 'pending',\r\n//     reactions = 0,\r\n//   } = experiment;\r\n\r\n//   // truncate description\r\n//   const shortDesc = description.length > 80\r\n//     ? description.slice(0, 80).trim() + '…'\r\n//     : description;\r\n\r\n//   const handleClick = () => {\r\n//     navigate(\r\n//       `/experiments/${grade}/` +\r\n//       `${encodeURIComponent(title)}/` +\r\n//       `${id}`\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <motion.div\r\n//       onClick={handleClick}\r\n//       initial={{ opacity: 0, y: 20 }}\r\n//       animate={{ opacity: 1, y: 0 }}\r\n//       whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n//       transition={{ duration: 0.3 }}\r\n//       className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n//     >\r\n//       {/* Status badge */}\r\n//       <div className=\"absolute top-3 right-3 z-10\">\r\n//         <span\r\n//           className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n//             statusStyles[status] || statusStyles.pending\r\n//           }`}\r\n//         >\r\n//           {status.charAt(0).toUpperCase() + status.slice(1)}\r\n//         </span>\r\n//       </div>\r\n\r\n//       {/* Image */}\r\n//       <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n//         {images.length > 0 ? (\r\n//           <img\r\n//             src={images[0]}\r\n//             alt={title}\r\n//             className=\"w-full h-full object-cover\"\r\n//           />\r\n//         ) : (\r\n//           <div className=\"text-gray-400\">No Image</div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Content */}\r\n//       <div className=\"p-4 flex-1 flex flex-col\">\r\n//         {/* Grade & Subject */}\r\n//         <div className=\"flex gap-2 mb-2\">\r\n//           <ScienceBadge type=\"grade\"   value={grade}   />\r\n//           <ScienceBadge type=\"subject\" value={subject} />\r\n//         </div>\r\n\r\n//         {/* Title */}\r\n//         <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n//           {title}\r\n//         </h3>\r\n\r\n//         {/* Description */}\r\n//         {shortDesc && (\r\n//           <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n//             {shortDesc}\r\n//           </p>\r\n//         )}\r\n\r\n//         {/* Reactions */}\r\n//         <ReactionSystem reactions={reactions} />\r\n\r\n//         {/* Footer */}\r\n//         <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n//           <span>By {creatorName}</span>\r\n//           {createdAt && (\r\n//             <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport ReactionSystem from '../ui/ReactionSystem';\r\nimport ScienceBadge from './ScienceBadge';\r\n\r\nconst statusStyles = {\r\n  pending:  'bg-yellow-100 text-yellow-800',\r\n  approved: 'bg-green-100 text-green-800',\r\n  rejected: 'bg-red-100 text-red-800',\r\n};\r\n\r\nexport default function ExperimentCard({ experiment }) {\r\n  const navigate = useNavigate();\r\n\r\n  const id = experiment._id || experiment.id;\r\n\r\n  const {\r\n    title = 'Untitled Experiment',\r\n    grade = 'N/A',\r\n    subject = 'N/A',\r\n    description = 'No description provided.',\r\n    images = [],\r\n    creatorName = 'Unknown',\r\n    createdAt,\r\n    status = 'pending',\r\n    reactions = 0,\r\n  } = experiment;\r\n\r\n  const safeDesc = String(description);\r\n  const shortDesc = safeDesc.length > 80\r\n    ? safeDesc.slice(0, 80).trim() + '…'\r\n    : safeDesc;\r\n\r\n  const handleClick = () => {\r\n    navigate(\r\n      `/experiments/${grade}/${encodeURIComponent(title)}/${id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      whileHover={{ y: -5, boxShadow: '0 10px 20px rgba(0,0,0,0.1)' }}\r\n      transition={{ duration: 0.3 }}\r\n      className=\"relative bg-white rounded-2xl shadow border border-gray-200 cursor-pointer overflow-hidden flex flex-col\"\r\n    >\r\n      {/* Status badge */}\r\n      <div className=\"absolute top-3 right-3 z-10\">\r\n        <span\r\n          className={`px-2 py-0.5 text-xs font-semibold rounded-full ${\r\n            statusStyles[status] || statusStyles.pending\r\n          }`}\r\n        >\r\n          {status.charAt(0).toUpperCase() + status.slice(1)}\r\n        </span>\r\n      </div>\r\n\r\n      {/* Thumbnail */}\r\n      <div className=\"h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\r\n        {images.length > 0 ? (\r\n          <img\r\n            src={images[0]}\r\n            alt={title}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"text-gray-400\">No Image</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-4 flex-1 flex flex-col\">\r\n        <div className=\"flex gap-2 mb-2\">\r\n          <ScienceBadge type=\"grade\"   value={grade}   />\r\n          <ScienceBadge type=\"subject\" value={subject} />\r\n        </div>\r\n\r\n        <h3 className=\"text-lg font-bold text-gray-900 mb-1 line-clamp-1\">\r\n          {title}\r\n        </h3>\r\n\r\n        <p className=\"text-gray-700 text-sm mb-4 flex-1 line-clamp-2\">\r\n          {shortDesc}\r\n        </p>\r\n\r\n        <ReactionSystem reactions={reactions} />\r\n\r\n        <div className=\"mt-3 text-xs text-gray-500 flex justify-between\">\r\n          <span>By {creatorName}</span>\r\n          {createdAt && (\r\n            <span>{format(new Date(createdAt), 'MMM d, yyyy')}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { subjectColors } from '../../utils/scienceIcons';\r\n\r\n\r\n\r\nconst gradeColors = {\r\n  7: 'bg-purple-200 text-purple-800',\r\n  8: 'bg-blue-200 text-blue-800',\r\n  9: 'bg-green-200 text-green-800',\r\n  10: 'bg-yellow-200 text-yellow-800',\r\n  11: 'bg-orange-200 text-orange-800',\r\n  12: 'bg-red-200 text-red-800'\r\n};\r\n\r\nexport default function ScienceBadge({ type, value }) {\r\n  const colors = type === 'subject' ? subjectColors : gradeColors;\r\n  const bgColor = colors[value] || 'bg-gray-200 text-gray-800';\r\n  \r\n  return (\r\n    <motion.span\r\n      whileHover={{ scale: 1.05 }}\r\n      className={`px-3 py-1 rounded-full text-sm font-medium ${bgColor}`}\r\n    >\r\n      {type === 'subject' ? value : `Grade ${value}`}\r\n    </motion.span>\r\n  );\r\n}","import { motion } from 'framer-motion';\r\nimport Lottie from 'lottie-react';\r\nimport scienceAnimation from '../../assets/lotties/science.json';\r\nimport AnimatedButton from '../../components/ui/AnimatedButton';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function HeroSection() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"relative min-h-screen flex items-center overflow-hidden\">\r\n      <div className=\"container mx-auto px-4 z-10\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12 items-center\">\r\n          <motion.div\r\n            initial={{ opacity: 0, x: -50 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.8 }}\r\n          >\r\n            <h1 className=\"text-5xl md:text-7xl font-bold mb-6 text-lab-black\">\r\n              Discover <span className=\"text-reaction-orange\">Science</span> Fun!\r\n            </h1>\r\n            <p className=\"text-xl mb-8 text-gray-700 max-w-lg\">\r\n              Explore amazing experiments with videos, step-by-step guides, and interactive learning. \r\n            </p>\r\n            <div className=\"flex gap-4\">\r\n              <AnimatedButton onClick={() => navigate('/experiments')}>\r\n                Explore Experiments\r\n              </AnimatedButton>\r\n              <AnimatedButton \r\n                className=\"bg-white text-lab-purple border-2 border-lab-purple\"\r\n                onClick={() => navigate('/educator/dashboard')}\r\n              >\r\n                For Teachers\r\n              </AnimatedButton>\r\n            </div>\r\n          </motion.div>\r\n          \r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.8, delay: 0.2 }}\r\n            className=\"flex justify-center\"\r\n          >\r\n            <Lottie \r\n              animationData={scienceAnimation} \r\n              className=\"max-w-md\" \r\n              loop={true} \r\n            />\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Floating elements */}\r\n      <motion.div \r\n        className=\"absolute top-1/4 left-1/4 w-16 h-16 bg-yellow-300 rounded-full blur-xl opacity-20\"\r\n        animate={{ \r\n          y: [0, -40, 0],\r\n          scale: [1, 1.2, 1]\r\n        }}\r\n        transition={{ \r\n          duration: 8,\r\n          repeat: Infinity,\r\n          ease: \"easeInOut\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import { motion } from 'framer-motion';\r\nimport { FaAtom, FaFlask, FaSeedling } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CategoryExplorer() {\r\n  const navigate = useNavigate();\r\n  \r\n  const categories = [\r\n    { id: 'physics', name: 'Physics', icon: <FaAtom className=\"text-3xl\" />, color: 'bg-science-blue' },\r\n    { id: 'chemistry', name: 'Chemistry', icon: <FaFlask className=\"text-3xl\" />, color: 'bg-science-blue' },\r\n    { id: 'biology', name: 'Biology', icon: <FaSeedling className=\"text-3xl\" />, color: 'bg-science-blue' },\r\n  ];\r\n\r\n  const grades = [7, 8, 9, 10, 11, 12];\r\n\r\n  // Handle category filter\r\n  const handleCategoryClick = (subject) => {\r\n    navigate(`/experiments?subject=${encodeURIComponent(subject)}`);\r\n  };\r\n\r\n  // Handle grade filter within category\r\n  const handleGradeClick = (subject, grade) => {\r\n    navigate(`/experiments?subject=${encodeURIComponent(subject)}&grade=${grade}`);\r\n  };\r\n\r\n  return (\r\n    <section className=\"py-16\">\r\n      <div className=\"text-center mb-12\">\r\n        <motion.h2 \r\n          className=\"text-4xl font-bold mb-4\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n          Explore by Category\r\n        </motion.h2>\r\n        <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\r\n          Discover experiments tailored to your grade level and subject\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16\">\r\n        {categories.map((category, index) => (\r\n          <motion.div\r\n            key={category.id}\r\n            className={`${category.color} rounded-2xl p-6 text-white shadow-xl cursor-pointer`} // Added cursor pointer\r\n            initial={{ opacity: 0, y: 30 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.3 + index * 0.1 }}\r\n            whileHover={{ scale: 1.05 }}\r\n            onClick={() => handleCategoryClick(category.name)}\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' || e.key === ' ') {\r\n                handleCategoryClick(category.name);\r\n              }\r\n            }}\r\n            aria-label={`Explore ${category.name} experiments`}\r\n          >\r\n            <div className=\"flex items-center mb-4\">\r\n              <div className=\"mr-4 bg-white/20 p-3 rounded-full\">\r\n                {category.icon}\r\n              </div>\r\n              <h3 className=\"text-2xl font-bold\">{category.name}</h3>\r\n            </div>\r\n            <div className=\"grid grid-cols-3 gap-3\">\r\n              {grades.map(grade => (\r\n                <motion.button\r\n                  key={grade}\r\n                  className=\"bg-white/20 py-2 rounded-lg hover:bg-white/30 transition focus:outline-none\"\r\n                  whileHover={{ scale: 1.05 }}\r\n                  whileTap={{ scale: 0.95 }}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleGradeClick(category.name, grade);\r\n                  }}\r\n                  aria-label={`Filter ${category.name} experiments for grade ${grade}`}\r\n                >\r\n                  Grade {grade}\r\n                </motion.button>\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React, { useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport ExperimentCard from '../../components/experiments/ExperimentCard';\r\nimport { useExperiments } from '../../context/ExperimentContext';\r\n\r\n// Helper to slugify titles\r\nconst slugify = (text) =>\r\n  text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/[^\\w-]+/g, '')\r\n    .replace(/--+/g, '-')\r\n    .replace(/^-+/, '') \r\n    .replace(/-+$/, '');\r\n\r\nexport default function TrendingExperiments() {\r\n  const navigate = useNavigate();\r\n  const { experiments } = useExperiments();\r\n\r\n  // Take only approved experiments, sort by reactions descending, take top 3\r\n  const topThree = useMemo(() => {\r\n    return [...experiments]\r\n      .filter((e) => e.status === 'approved')\r\n      .sort((a, b) => (b.reactions || 0) - (a.reactions || 0))\r\n      .slice(0, 3);\r\n  }, [experiments]);\r\n\r\n  return (\r\n    <section className=\"py-16 bg-gradient-to-b from-white to-blue-50 rounded-3xl\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"text-center mb-12\">\r\n          <motion.h2 \r\n            className=\"text-4xl font-bold mb-4\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 0.2 }}\r\n          >\r\n            Trending Experiments\r\n          </motion.h2>\r\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\r\n            Most popular experiments this week\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {topThree.map((exp, i) => (\r\n            <motion.div\r\n              key={exp._id}\r\n              initial={{ opacity: 0, y: 30 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.3 + i * 0.1 }}\r\n              whileHover={{ y: -10 }}\r\n              className=\"cursor-pointer\"\r\n              tabIndex={0}\r\n              role=\"button\"\r\n              aria-label={`View ${exp.title} experiment`}\r\n              onClick={() =>\r\n                navigate(\r\n                  `/experiments/${exp.grade}/${slugify(exp.title)}/${exp._id}`\r\n                )\r\n              }\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  navigate(\r\n                    `/experiments/${exp.grade}/${slugify(exp.title)}/${exp._id}`\r\n                  );\r\n                }\r\n              }}\r\n            >\r\n              <ExperimentCard\r\n                experiment={exp}\r\n                onClick={() =>\r\n                  navigate(\r\n                    `/experiments/${exp.grade}/${slugify(exp.title)}/${exp._id}`\r\n                  )\r\n                }\r\n              />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport HeroSection from './HeroSection';\r\nimport CategoryExplorer from './CategoryExplorer';\r\nimport TrendingExperiments from './TrendingExperiments';\r\nimport ParticleBackground from '../../components/layout/ParticleBackground';\r\nimport ScienceBackground from '../../components/layout/ScienceBackground';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className=\"relative min-h-screen overflow-hidden\">\r\n      <ScienceBackground />\r\n      <ParticleBackground />\r\n      \r\n      <div className=\"container mx-auto px-4\">\r\n        <HeroSection />\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 50 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n        >\r\n          <CategoryExplorer />\r\n          <TrendingExperiments />\r\n        </motion.div>\r\n      </div>\r\n      \r\n      \r\n      {[...Array(5)].map((_, i) => (\r\n        <motion.div\r\n          key={i}\r\n          className=\"absolute rounded-full opacity-20\"\r\n          style={{\r\n            width: `${Math.random() * 100 + 50}px`,\r\n            height: `${Math.random() * 100 + 50}px`,\r\n            top: `${Math.random() * 100}%`,\r\n            left: `${Math.random() * 100}%`,\r\n            background: i % 2 === 0 ? '#F72585' : '#4CC9F0',\r\n            filter: 'blur(20px)',\r\n          }}\r\n          animate={{\r\n            y: [0, -50, 0],\r\n            scale: [1, 1.2, 1],\r\n            rotate: [0, 180, 360]\r\n          }}\r\n          transition={{\r\n            duration: 10 + Math.random() * 10,\r\n            repeat: Infinity,\r\n            ease: \"easeInOut\"\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}","import { useSpring, animated } from '@react-spring/web';\r\n\r\nexport default function ScienceBackground() {\r\n  const [props] = useSpring(() => ({\r\n    from: { backgroundPosition: '0% 50%' },\r\n    to: { backgroundPosition: '100% 50%' },\r\n    config: { duration: 20000 },\r\n    loop: { reverse: true },\r\n  }));\r\n\r\n  return (\r\n    <animated.div\r\n      className=\"fixed inset-0 -z-10\"\r\n      style={{\r\n        ...props,\r\n        background: 'linear-gradient(45deg, #4cc9f0, #f72585, #7209b7, #3a0ca3)',\r\n        backgroundSize: '400% 400%',\r\n        opacity: 0.1\r\n      }}\r\n    />\r\n  );\r\n}"],"names":["subjectColors","Physics","Chemistry","Biology","ParticleBackground","_jsx","Particles","className","params","particles","number","value","size","shape","type","images","src","height","width","move","speed","opacity","random","interactivity","events","onhover","enable","mode","ReactionSystem","reaction","setReaction","useState","reactions","icon","FaThumbsUp","FaRegThumbsUp","label","FaHeart","FaRegHeart","FaLaugh","FaRegLaugh","_jsxs","children","map","_ref","motion","button","whileHover","scale","whileTap","concat","onClick","statusStyles","pending","approved","rejected","ExperimentCard","experiment","navigate","useNavigate","id","_id","title","grade","subject","description","creatorName","createdAt","status","safeDesc","String","shortDesc","length","slice","trim","div","handleClick","encodeURIComponent","initial","y","animate","boxShadow","transition","duration","charAt","toUpperCase","alt","ScienceBadge","format","Date","gradeColors","bgColor","span","HeroSection","x","AnimatedButton","delay","Lottie","animationData","scienceAnimation","loop","repeat","Infinity","ease","CategoryExplorer","categories","name","FaAtom","color","FaFlask","FaSeedling","grades","handleCategoryClick","h2","category","index","tabIndex","onKeyDown","e","key","stopPropagation","handleGradeClick","slugify","text","toString","toLowerCase","replace","TrendingExperiments","experiments","useExperiments","topThree","useMemo","filter","sort","a","b","exp","i","role","HomePage","ScienceBackground","Array","_","style","Math","top","left","background","rotate","props","useSpring","from","backgroundPosition","to","config","reverse","animated","_objectSpread","backgroundSize"],"sourceRoot":""}