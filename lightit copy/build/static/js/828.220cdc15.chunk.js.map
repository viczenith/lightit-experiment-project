{"version":3,"file":"static/js/828.220cdc15.chunk.js","mappings":"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","sources":["../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","Math","cos","sin","isNumber","coords3d","undefined","Error","concat","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","Map","getRandom","clamp","num","min","max","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistance","pointA","pointB","dx","dy","distance","getDistances","calcExactPositionOrRandomFromSize","data","_data$position$x2","_data$position5","_data$position$y2","_data$position6","position","size","width","height","parseAlpha","input","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","isArray","indexOf","itemFromArray","index","arguments","floor","arrayRandomIndex","deepExtend","destination","_len","sources","Array","_key","isObject","sourceIsArray","key","destDict","map","executeOnSingleOrMultiple","obj","callback","item","itemFromSingleOrMultiple","useIndex","getPositionOrSize","positionOrSize","canvasSize","mode","_","_objectWithoutProperties","_excluded","getPosition","isBoolean","arg","isString","isFunction","randomColorValue","colorManagers","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","g","b","a","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","getHslFromAnimation","animation","clear","context","dimension","clearRect","setTransformValue","factor","newFactor","newValue","_factor$key","Canvas","container","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","coverRgb","coverColor","_objectSpread","_coverColorStyle","_initStyle","element","options","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","async","trail","particles","move","trailFill","enable","fillColor","_trailFill","Promise","resolve","reject","image","img","createElement","addEventListener","evt","src","_paintBase","baseColor","draw","fillStyle","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","top","left","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","destroy","stop","remove","cb","drawParticle","delta","_particle$getStrokeCo","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","composite","shadow","pos","rotation","pathRotation","velocity","rotateData","transformData","d","setTransform","beginPath","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","strokeWidth","lineWidth","strokeStyle","shape","drawer","drawers","get","retina","pixelRatio","drawShape","close","closePath","afterEffect","drawShapeAfterEffect","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","pxRatio","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","delay","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","load","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","selectors","el","elementId","ids","_data$ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","count","speed","decay","sync","HslAnimation","AnimatableColor","colorAnimation","CollisionsAbsorb","CollisionsOverlap","retries","AnimationOptions","RangedAnimationOptions","startValue","minimumValue","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","bottom","right","Spin","Move","attract","center","direction","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","_data$outModes","_data$path","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","area","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","character","_this$options$charKey","custom","_this$options$imageKe","images","polygon","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","id","overrideOptions","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","rad","PI","radOffset","range","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","getParticleDirectionAngle","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","getMass","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","pathOptions","pathDelay","getValue","getPathGenerator","addPath","initParticle","valueRange","animationOptions","delayTime","loops","maxLoops","time","autoStatus","initialValue","initParticleNumericAnimationValue","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","Range","Rectangle","contains","point","w","intersects","Circle","pos1","pos2","size2","w2","h2","distPos","abs","pow","QuadTree","rectangle","capacity","_subdivide","i","_subs","round","_divided","_points","insert","some","check","found","queryCircle","queryRectangle","qTreeRectangle","Particles","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","_groupOptions$number","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","reduceFactor","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","keys","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","params","url","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","_params$id","_params$element","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","currentOptions","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","hslColor","_colorValue$hsl2","hsla","rgbResult","hslaToRgba","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","tsParticles","rgbColorManager","hslColorManager","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys2","value1","value2","deepCompareArrays","arr1","arr2","val1","val2","defaultId","Component","state","library","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","canvasClassName","className","loaded","componentDidUpdate","forceUpdate","then","componentDidMount","loadParticles","componentWillUnmount","render","React","_this$props$id","_this$props$options2","defaultProps","current"],"sourceRoot":""}